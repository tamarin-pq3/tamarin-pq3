theory iMessagePQ3 begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, natural-numbers
functions: Just/1, None/0, concat/2, decap/2, default/2, encap/2,
           fst/1, h/1, hkdf/2, pair/2, pk/1, pqpk/1, prefix/1, sdec/2, senc/2,
           sign/2, snd/1, suffix/1, true/0, unjust/1, verify/3
equations:
    concat(prefix(x), suffix(x)) = x,
    decap(encap(k, pqpk(sk)), sk) = k,
    default(Just(v), t) = v,
    default(None, v) = v,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    unjust(Just(t)) = t,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



heuristic: O "./oracle.py"

/* looping facts with injective instances: Session/15 */

restriction Eq:
  "∀ a b #t. (Eq( a, b ) @ #t) ⇒ (a = b)"
  // safety formula

restriction Neq:
  "∀ a b #t. (Neq( a, b ) @ #t) ⇒ (¬(a = b))"
  // safety formula

restriction OnlyOnce:
  "∀ t #a #b.
    ((OnlyOnce( t ) @ #a) ∧ (OnlyOnce( t ) @ #b)) ⇒ (#a = #b)"
  // safety formula









rule (modulo E) PQAttackerStart[color=#ff6961]:
   [ ] --[ PQAttack( ), SomeCompromise( ) ]-> [ !PQAttacker( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) PQAttacker[color=#ff6961]:
   [ !PQAttacker( ), !NonPQSecKey( k ) ] --> [ Out( k ) ]

  /* has exactly the trivial AC variant */

restriction PQAttacker:
  "∀ #compr #t.
    ((PQAttack( ) @ #compr) ∧ (PrePQAttack( ) @ #t)) ⇒ (#t < #compr)"
  // safety formula

rule (modulo E) UserKeyGen[color=#fdfd96]:
   [ Fr( ~idKey ), Fr( ~preKey ), Fr( ~kemPreKey ) ]
  --[
  PrePQAttack( ), OnlyOnce( <'setup', $A> ),
  ECDHPreKeyGen( $A, 'g'^~preKey ),
  KemPreKeyGen( $A, pqpk(~kemPreKey) )
  ]->
   [
   !IdentityKey( $A, ~idKey ), !ECDHPreKey( $A, ~preKey ),
   !KemPreKey( $A, ~kemPreKey ), Out( pk(~idKey) ),
   Out( 'g'^~preKey ), Out( pqpk(~kemPreKey) ),
   Out( sign(<'nf_reg', pqpk(~kemPreKey), 'g'^~preKey>, ~idKey) ),
   !IDSIdentityData( $A, pk(~idKey) ),
   !IDSClientData( $A, 'g'^~preKey, pqpk(~kemPreKey),
                   sign(<'nf_reg', pqpk(~kemPreKey), 'g'^~preKey>, ~idKey)
   ),
   !NonPQSecKey( ~idKey ), !NonPQSecKey( ~preKey )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) IdentityKeyLeak[color=#ff6961]:
   [ !IdentityKey( $A, ~idKey ) ]
  --[ SomeCompromise( ), CompromisedIdentityKey( $A ) ]->
   [ Out( ~idKey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ECDHPreKeyLeak[color=#ff6961]:
   [ !ECDHPreKey( $A, ~preKey ) ]
  --[ SomeCompromise( ), CompromisedECDHPreKey( $A, 'g'^~preKey ) ]->
   [ Out( ~preKey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ECDHKeyLeak[color=#ff6961]:
   [ !ECDHKey( ~id, $A, ~ecdhSk ) ]
  --[ SomeCompromise( ), CompromisedECDHKey( ~id, $A, 'g'^~ecdhSk )
  ]->
   [ Out( ~ecdhSk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KemPreKeyLeak[color=#ff6961]:
   [ !KemPreKey( $A, ~sk ) ]
  --[ SomeCompromise( ), CompromisedKemPreKey( $A, pqpk(~sk) ) ]->
   [ Out( ~sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KemKeyLeak[color=#ff6961]:
   [ !KemKey( $A, ~kemKey ) ]
  --[ SomeCompromise( ), CompromisedKemKey( $A, pqpk(~kemKey) ) ]->
   [ Out( ~kemKey ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) RootKeyLeak[color=#ff6961]:
   [ !RootKey( ~id, i, $A, kemSS, rk ) ]
  --[ SomeCompromise( ), CompromisedRootKey( $A, kemSS, rk ) ]->
   [ Out( rk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) ChainKeyLeak[color=#ff6961]:
   [ !ChainKey( ~id, i, $A, ck ) ]
  --[ SomeCompromise( ), CompromisedChainKey( $A, ck ) ]->
   [ Out( ck ) ]

  /* has exactly the trivial AC variant */

lemma ChainKeySources [sources]:
  all-traces
  "∀ p t #x.
    (CompromisedChainKey( p, t ) @ #x) ⇒
    ((∃ t1 t2. (t = hkdf(t1, t2)) ∧ (t2 = 'chain_key')) ∨
     (∃ t1 t2 t3. t = suffix(hkdf(hkdf(t1, t2), t3))))"
/*
guarded formula characterizing all counter-examples:
"∃ p t #x.
  (CompromisedChainKey( p, t ) @ #x)
 ∧
  (∀ t1 t2. (t = hkdf(t1, t2)) ∧ (t2 = 'chain_key') ⇒ ⊥) ∧
  (∀ t1 t2 t3. (t = suffix(hkdf(hkdf(t1, t2), t3))) ⇒ ⊥)"
*/
by sorry

rule (modulo E) MessageKeyLeak[color=#ff6961]:
   [ !MessageKey( ~id, i, $A, mk ) ]
  --[ SomeCompromise( ), CompromisedMessageKey( $A, mk ) ]->
   [ Out( mk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) QueryIDS[color=#fdfd96]:
   [
   !IDSIdentityData( $A, idPk ),
   !IDSClientData( $A, prePk, kemPrePk, preKeySig )
   ]
  --[
  PrePQAttack( ),
  Eq( verify(preKeySig, <'nf_reg', kemPrePk, prePk>, idPk), true )
  ]->
   [ IDSQuery( $A, idPk, prePk, kemPrePk, preKeySig ) ]

  /*
  rule (modulo AC) QueryIDS[color=#fdfd96]:
     [
     !IDSIdentityData( $A, idPk ),
     !IDSClientData( $A, prePk, kemPrePk, preKeySig )
     ]
    --[ PrePQAttack( ), Eq( z, true ) ]->
     [ IDSQuery( $A, idPk, prePk, kemPrePk, preKeySig ) ]
    variants (modulo AC)
    1. idPk  = idPk.7
       kemPrePk
             = kemPrePk.7
       preKeySig
             = preKeySig.7
       prePk = prePk.7
       z     = verify(preKeySig.7, <'nf_reg', kemPrePk.7, prePk.7>,
                      idPk.7)
    
    2. idPk  = pk(x.7)
       kemPrePk
             = x.8
       preKeySig
             = sign(<'nf_reg', x.8, x.9>, x.7)
       prePk = x.9
       z     = true
  */

rule (modulo E) SessionStartAsASender[color=#b4d9ef]:
   [
   Fr( ~id ), !IdentityKey( $Me, ~idKey ), !KemPreKey( $Me, ~kemSk ),
   IDSQuery( $Them, theirIdPk, theirEcdhPk, theirKemPk, preKeySig ),
   Fr( ~msg ), Fr( ~ecdhSk ), Fr( ~kemSS )
   ]
  --[
  PrePQAttack( ), SessionInfo( ~id, %1, $Me, $Them ),
  IdentityKeyQueried( ~id, $Them, theirIdPk ),
  SessionStart( theirIdPk ),
  PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk,
                    theirEcdhPk^~ecdhSk, pqpk(~kemSk), Just(theirKemPk), None, ~kemSS,
                    theirKemPk,
                    prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                                <$Me, pk(~idKey), $Them, theirIdPk>))
  ),
  PKRatchet( ), ToSender( ),
  MessageSent( ~id, %1, $Me, $Them, ~msg ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, ~kemSS, theirKemPk,
                  suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                              <$Me, pk(~idKey), $Them, theirIdPk>)),
                  hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                                   <$Me, pk(~idKey), $Them, theirIdPk>)),
                       'msg_key')
  ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            pqpk(~kemSk), Just(theirKemPk), None, ~kemSS, theirKemPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                             <$Me, pk(~idKey), $Them, theirIdPk>)),
                 'msg_key')
  ),
  ECDHKeyGen( ~id, $Me, $Them, 'g'^~ecdhSk ),
  NewKemSS( ~id, $Me, $Them, ~kemSS, theirKemPk ),
  NewKemPublicKey( ~id, $Me, $Them, Just(theirKemPk) )
  ]->
   [
   Out( <
         senc(~msg,
              hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key')), 
         sign(<'msg_sig', 
               senc(~msg,
                    hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key')), 
               hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key'),
                    'msg_key_ind'), 
               'g'^~ecdhSk, %1, <$Me, pk(~idKey), $Them, theirIdPk>, None, 
               Just(encap(~kemSS, theirKemPk)), 
               Just(h(<theirEcdhPk, theirKemPk, preKeySig>))>,
              ~idKey), 
         'g'^~ecdhSk, %1, 
         hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key'),
              'msg_key_ind'), 
         None, Just(encap(~kemSS, theirKemPk)), 
         Just(h(<theirEcdhPk, theirKemPk, preKeySig>))>
   ),
   Session( ~id, %1, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
            theirEcdhPk, Just(theirKemPk), None, ~kemSS, theirKemPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                             <$Me, pk(~idKey), $Them, theirIdPk>)),
                 'chain_key')
   ),
   Out( 'g'^~ecdhSk ), !NonPQSecKey( ~ecdhSk ),
   !RootKey( ~id, %1, $Me, ~kemSS,
             prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                         <$Me, pk(~idKey), $Them, theirIdPk>))
   ),
   !ChainKey( ~id, %1, $Me,
              suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>))
   ),
   !MessageKey( ~id, %1, $Me,
                hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'), ~kemSS),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key')
   ),
   !ECDHKey( ~id, $Me, ~ecdhSk )
   ]

  /*
  rule (modulo AC) SessionStartAsASender[color=#b4d9ef]:
     [
     Fr( ~id ), !IdentityKey( $Me, ~idKey ), !KemPreKey( $Me, ~kemSk ),
     IDSQuery( $Them, theirIdPk, theirEcdhPk, theirKemPk, preKeySig ),
     Fr( ~msg ), Fr( ~ecdhSk ), Fr( ~kemSS )
     ]
    --[
    PrePQAttack( ), SessionInfo( ~id, %1, $Me, $Them ),
    IdentityKeyQueried( ~id, $Them, theirIdPk ),
    SessionStart( theirIdPk ),
    PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z,
                      pqpk(~kemSk), Just(theirKemPk), None, ~kemSS, theirKemPk,
                      prefix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                  <$Me, pk(~idKey), $Them, theirIdPk>))
    ),
    PKRatchet( ), ToSender( ),
    MessageSent( ~id, %1, $Me, $Them, ~msg ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, ~kemSS, theirKemPk,
                    suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                <$Me, pk(~idKey), $Them, theirIdPk>)),
                    hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key')
    ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, pqpk(~kemSk),
              Just(theirKemPk), None, ~kemSS, theirKemPk,
              prefix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key')
    ),
    ECDHKeyGen( ~id, $Me, $Them, 'g'^~ecdhSk ),
    NewKemSS( ~id, $Me, $Them, ~kemSS, theirKemPk ),
    NewKemPublicKey( ~id, $Me, $Them, Just(theirKemPk) )
    ]->
     [
     Out( <
           senc(~msg,
                hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key')), 
           sign(<'msg_sig', 
                 senc(~msg,
                      hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                       <$Me, pk(~idKey), $Them, theirIdPk>)),
                           'msg_key')), 
                 hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                       <$Me, pk(~idKey), $Them, theirIdPk>)),
                           'msg_key'),
                      'msg_key_ind'), 
                 'g'^~ecdhSk, %1, <$Me, pk(~idKey), $Them, theirIdPk>, None, 
                 Just(encap(~kemSS, theirKemPk)), 
                 Just(h(<theirEcdhPk, theirKemPk, preKeySig>))>,
                ~idKey), 
           'g'^~ecdhSk, %1, 
           hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key'),
                'msg_key_ind'), 
           None, Just(encap(~kemSS, theirKemPk)), 
           Just(h(<theirEcdhPk, theirKemPk, preKeySig>))>
     ),
     Session( ~id, %1, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
              theirEcdhPk, Just(theirKemPk), None, ~kemSS, theirKemPk,
              prefix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'chain_key')
     ),
     Out( 'g'^~ecdhSk ), !NonPQSecKey( ~ecdhSk ),
     !RootKey( ~id, %1, $Me, ~kemSS,
               prefix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                           <$Me, pk(~idKey), $Them, theirIdPk>))
     ),
     !ChainKey( ~id, %1, $Me,
                suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                            <$Me, pk(~idKey), $Them, theirIdPk>))
     ),
     !MessageKey( ~id, %1, $Me,
                  hkdf(suffix(hkdf(hkdf(hkdf(z, '0'), ~kemSS),
                                   <$Me, pk(~idKey), $Them, theirIdPk>)),
                       'msg_key')
     ),
     !ECDHKey( ~id, $Me, ~ecdhSk )
     ]
    variants (modulo AC)
    1. ~ecdhSk
             = ~ecdhSk.22
       theirEcdhPk
             = theirEcdhPk.29
       z     = theirEcdhPk.29^~ecdhSk.22
    
    2. ~ecdhSk
             = ~ecdhSk.25
       theirEcdhPk
             = z.35^inv(~ecdhSk.25)
       z     = z.35
    
    3. ~ecdhSk
             = ~ecdhSk.193
       theirEcdhPk
             = x.381^x.382
       z     = x.381^(~ecdhSk.193*x.382)
    
    4. ~ecdhSk
             = ~ecdhSk.200
       theirEcdhPk
             = x.395^inv((~ecdhSk.200*x.396))
       z     = x.395^inv(x.396)
    
    5. ~ecdhSk
             = ~ecdhSk.200
       theirEcdhPk
             = x.395^(x.396*inv(~ecdhSk.200))
       z     = x.395^x.396
    
    6. ~ecdhSk
             = ~ecdhSk.201
       theirEcdhPk
             = x.396^(x.397*inv((~ecdhSk.201*x.398)))
       z     = x.396^(x.397*inv(x.398))
    
    7. theirEcdhPk
             = DH_neutral
       z     = DH_neutral
  */

rule (modulo E) SendSymmetricRatchet[color=#ff7f50]:
   [
   !IdentityKey( $Me, ~idKey ), Fr( ~msg ),
   Session( ~id, %i, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
            theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
            rootKey, chainKey
   )
   ]
  --[
  PrePQAttack( ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
  MessageSent( ~id, (%i%+%1), $Me, $Them, ~msg ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk, chainKey,
                  hkdf(chainKey, 'msg_key')
  ),
  SymmetricRatchet( ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            pqpk(~kemSk), maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
            rootKey, chainKey, hkdf(chainKey, 'msg_key')
  )
  ]->
   [
   Out( <senc(~msg, hkdf(chainKey, 'msg_key')), 
         sign(<'msg_sig', senc(~msg, hkdf(chainKey, 'msg_key')), 
               hkdf(hkdf(chainKey, 'msg_key'), 'msg_key_ind'), 'g'^~ecdhSk, 
               (%i%+%1), <$Me, pk(~idKey), $Them, theirIdPk>, None, None, None>,
              ~idKey), 
         'g'^~ecdhSk, (%i%+%1), 
         hkdf(hkdf(chainKey, 'msg_key'), 'msg_key_ind'), None, None, None>
   ),
   Session( ~id, (%i%+%1), 'S', $Me, ~ecdhSk, ~kemSk, $Them,
            theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS,
            encapPk, rootKey, hkdf(chainKey, 'chain_key')
   ),
   !ChainKey( ~id, (%i%+%1), $Me, chainKey ),
   !MessageKey( ~id, (%i%+%1), $Me, hkdf(chainKey, 'msg_key') )
   ]

  // loop breaker: [2]
  /*
  rule (modulo AC) SendSymmetricRatchet[color=#ff7f50]:
     [
     !IdentityKey( $Me, ~idKey ), Fr( ~msg ),
     Session( ~id, %i, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
              theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
              rootKey, chainKey
     )
     ]
    --[
    PrePQAttack( ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
    MessageSent( ~id, (%i%+%1), $Me, $Them, ~msg ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk, chainKey,
                    hkdf(chainKey, 'msg_key')
    ),
    SymmetricRatchet( ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, pqpk(~kemSk),
              maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk, rootKey,
              chainKey, hkdf(chainKey, 'msg_key')
    )
    ]->
     [
     Out( <senc(~msg, hkdf(chainKey, 'msg_key')), 
           sign(<'msg_sig', senc(~msg, hkdf(chainKey, 'msg_key')), 
                 hkdf(hkdf(chainKey, 'msg_key'), 'msg_key_ind'), 'g'^~ecdhSk, 
                 (%i%+%1), <$Me, pk(~idKey), $Them, theirIdPk>, None, None, None>,
                ~idKey), 
           'g'^~ecdhSk, (%i%+%1), 
           hkdf(hkdf(chainKey, 'msg_key'), 'msg_key_ind'), None, None, None>
     ),
     Session( ~id, (%i%+%1), 'S', $Me, ~ecdhSk, ~kemSk, $Them,
              theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS,
              encapPk, rootKey, hkdf(chainKey, 'chain_key')
     ),
     !ChainKey( ~id, (%i%+%1), $Me, chainKey ),
     !MessageKey( ~id, (%i%+%1), $Me, hkdf(chainKey, 'msg_key') )
     ]
    variants (modulo AC)
    1. ~ecdhSk
             = ~ecdhSk.36
       theirEcdhPk
             = theirEcdhPk.47
       z     = theirEcdhPk.47^~ecdhSk.36
    
    2. ~ecdhSk
             = ~ecdhSk.45
       theirEcdhPk
             = z.65^inv(~ecdhSk.45)
       z     = z.65
    
    3. ~ecdhSk
             = ~ecdhSk.208
       theirEcdhPk
             = x.411^x.412
       z     = x.411^(~ecdhSk.208*x.412)
    
    4. ~ecdhSk
             = ~ecdhSk.219
       theirEcdhPk
             = x.433^inv((~ecdhSk.219*x.434))
       z     = x.433^inv(x.434)
    
    5. ~ecdhSk
             = ~ecdhSk.219
       theirEcdhPk
             = x.433^(x.434*inv(~ecdhSk.219))
       z     = x.433^x.434
    
    6. ~ecdhSk
             = ~ecdhSk.220
       theirEcdhPk
             = x.434^(x.435*inv((~ecdhSk.220*x.436)))
       z     = x.434^(x.435*inv(x.436))
    
    7. theirEcdhPk
             = DH_neutral
       z     = DH_neutral
    // loop breaker: [2]
  */

rule (modulo E) ReceiverStart[color=#b4d9ef]:
   [
   Fr( ~id ),
   In( <ciphertext, signature, theirEcdhPk, %1, msgKeyIndicator, 
        None, Just(kemEncap), Just(preKeyHash)>
   ),
   !IdentityKey( $Me, ~idKey ), !ECDHPreKey( $Me, ~ecdhSk ),
   !KemPreKey( $Me, ~kemSk ),
   IDSQuery( $Them, theirIdPk, sprePk, skemPrePk, preKeySig )
   ]
  --[
  PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
  Neq( theirEcdhPk, 'g' ), Neq( decap(kemEncap, ~kemSk), '0' ),
  Eq( verify(signature,
             <'msg_sig', ciphertext, msgKeyIndicator, theirEcdhPk, %1, 
              <$Them, theirIdPk, $Me, pk(~idKey)>, None, Just(kemEncap), 
              Just(preKeyHash)>,
             theirIdPk),
      true
  ),
  Eq( preKeyHash,
      h(<'g'^~ecdhSk, pqpk(~kemSk), 
         sign(<'nf_reg', pqpk(~kemSk), 'g'^~ecdhSk>, ~idKey)>)
  ),
  Eq( msgKeyIndicator,
      hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                 decap(kemEncap, ~kemSk)),
                            <$Them, theirIdPk, $Me, pk(~idKey)>)),
                'msg_key'),
           'msg_key_ind')
  ),
  SessionInfo( ~id, %1, $Me, $Them ),
  IdentityKeyQueried( ~id, $Them, theirIdPk ),
  SessionStart( theirIdPk ),
  PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk,
                    theirEcdhPk^~ecdhSk, pqpk(~kemSk), None, None,
                    decap(kemEncap, ~kemSk), pqpk(~kemSk),
                    prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                     decap(kemEncap, ~kemSk)),
                                <$Them, theirIdPk, $Me, pk(~idKey)>))
  ),
  PKRatchet( ), ToReceiver( ),
  MessageReceived( ~id, %1, $Them, $Me,
                   sdec(ciphertext,
                        hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                              decap(kemEncap, ~kemSk)),
                                         <$Them, theirIdPk, $Me, pk(~idKey)>)),
                             'msg_key'))
  ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, decap(kemEncap, ~kemSk),
                  pqpk(~kemSk),
                  suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                   decap(kemEncap, ~kemSk)),
                              <$Them, theirIdPk, $Me, pk(~idKey)>)),
                  hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                        decap(kemEncap, ~kemSk)),
                                   <$Them, theirIdPk, $Me, pk(~idKey)>)),
                       'msg_key')
  ),
  DecapKemSS( ~id, $Me, $Them, decap(kemEncap, ~kemSk), pqpk(~kemSk)
  ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            pqpk(~kemSk), None, None, decap(kemEncap, ~kemSk), pqpk(~kemSk),
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                             decap(kemEncap, ~kemSk)),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                             decap(kemEncap, ~kemSk)),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                  decap(kemEncap, ~kemSk)),
                             <$Them, theirIdPk, $Me, pk(~idKey)>)),
                 'msg_key')
  )
  ]->
   [
   Session( ~id, %1, 'R', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
            theirEcdhPk, None, None, decap(kemEncap, ~kemSk), pqpk(~kemSk),
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                             decap(kemEncap, ~kemSk)),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                  decap(kemEncap, ~kemSk)),
                             <$Them, theirIdPk, $Me, pk(~idKey)>)),
                 'chain_key')
   ),
   !RootKey( ~id, %1, $Me, decap(kemEncap, ~kemSk),
             prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                              decap(kemEncap, ~kemSk)),
                         <$Them, theirIdPk, $Me, pk(~idKey)>))
   ),
   !ChainKey( ~id, %1, $Me,
              suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                               decap(kemEncap, ~kemSk)),
                          <$Them, theirIdPk, $Me, pk(~idKey)>))
   ),
   !MessageKey( ~id, %1, $Me,
                hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, '0'),
                                      decap(kemEncap, ~kemSk)),
                                 <$Them, theirIdPk, $Me, pk(~idKey)>)),
                     'msg_key')
   )
   ]

  /*
  rule (modulo AC) ReceiverStart[color=#b4d9ef]:
     [
     Fr( ~id ),
     In( <ciphertext, signature, theirEcdhPk, %1, msgKeyIndicator, 
          None, Just(kemEncap), Just(preKeyHash)>
     ),
     !IdentityKey( $Me, ~idKey ), !ECDHPreKey( $Me, ~ecdhSk ),
     !KemPreKey( $Me, ~kemSk ),
     IDSQuery( $Them, theirIdPk, sprePk, skemPrePk, preKeySig )
     ]
    --[
    PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
    Neq( theirEcdhPk, 'g' ), Neq( z, '0' ), Eq( z.2, true ),
    Eq( preKeyHash,
        h(<'g'^~ecdhSk, pqpk(~kemSk), 
           sign(<'nf_reg', pqpk(~kemSk), 'g'^~ecdhSk>, ~idKey)>)
    ),
    Eq( msgKeyIndicator,
        hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                              <$Them, theirIdPk, $Me, pk(~idKey)>)),
                  'msg_key'),
             'msg_key_ind')
    ),
    SessionInfo( ~id, %1, $Me, $Them ),
    IdentityKeyQueried( ~id, $Them, theirIdPk ),
    SessionStart( theirIdPk ),
    PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z.1,
                      pqpk(~kemSk), None, None, z, pqpk(~kemSk),
                      prefix(hkdf(hkdf(hkdf(z.1, '0'), z),
                                  <$Them, theirIdPk, $Me, pk(~idKey)>))
    ),
    PKRatchet( ), ToReceiver( ),
    MessageReceived( ~id, %1, $Them, $Me, z.3 ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, z, pqpk(~kemSk),
                    suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                                <$Them, theirIdPk, $Me, pk(~idKey)>)),
                    hkdf(suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                                     <$Them, theirIdPk, $Me, pk(~idKey)>)),
                         'msg_key')
    ),
    DecapKemSS( ~id, $Me, $Them, z, pqpk(~kemSk) ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z.1, pqpk(~kemSk),
              None, None, z, pqpk(~kemSk),
              prefix(hkdf(hkdf(hkdf(z.1, '0'), z),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                               <$Them, theirIdPk, $Me, pk(~idKey)>)),
                   'msg_key')
    )
    ]->
     [
     Session( ~id, %1, 'R', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
              theirEcdhPk, None, None, z, pqpk(~kemSk),
              prefix(hkdf(hkdf(hkdf(z.1, '0'), z),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                               <$Them, theirIdPk, $Me, pk(~idKey)>)),
                   'chain_key')
     ),
     !RootKey( ~id, %1, $Me, z,
               prefix(hkdf(hkdf(hkdf(z.1, '0'), z),
                           <$Them, theirIdPk, $Me, pk(~idKey)>))
     ),
     !ChainKey( ~id, %1, $Me,
                suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                            <$Them, theirIdPk, $Me, pk(~idKey)>))
     ),
     !MessageKey( ~id, %1, $Me,
                  hkdf(suffix(hkdf(hkdf(hkdf(z.1, '0'), z),
                                   <$Them, theirIdPk, $Me, pk(~idKey)>)),
                       'msg_key')
     )
     ]
    variants (modulo AC)
     1. $Me   = $Me.45
        $Them = $Them.46
        ~ecdhSk
              = ~ecdhSk.47
        ~idKey
              = ~idKey.49
        ~kemSk
              = ~kemSk.50
        ciphertext
              = ciphertext.51
        kemEncap
              = kemEncap.52
        msgKeyIndicator
              = msgKeyIndicator.53
        preKeyHash
              = preKeyHash.54
        signature
              = signature.56
        theirEcdhPk
              = theirEcdhPk.59
        theirIdPk
              = theirIdPk.60
        z     = decap(kemEncap.52, ~kemSk.50)
        z.1   = theirEcdhPk.59^~ecdhSk.47
        z.2   = verify(signature.56,
                       <'msg_sig', ciphertext.51, msgKeyIndicator.53, theirEcdhPk.59, %1, 
                        <$Them.46, theirIdPk.60, $Me.45, pk(~idKey.49)>, None, 
                        Just(kemEncap.52), Just(preKeyHash.54)>,
                       theirIdPk.60)
        z.3   = sdec(ciphertext.51,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.59^~ecdhSk.47, '0'),
                                           decap(kemEncap.52, ~kemSk.50)),
                                      <$Them.46, theirIdPk.60, $Me.45, pk(~idKey.49)>)),
                          'msg_key'))
    
     2. $Me   = $Me.45
        $Them = $Them.46
        ~idKey
              = ~idKey.49
        ~kemSk
              = ~kemSk.50
        ciphertext
              = ciphertext.51
        kemEncap
              = kemEncap.52
        msgKeyIndicator
              = msgKeyIndicator.53
        preKeyHash
              = preKeyHash.54
        signature
              = signature.56
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.60
        z     = decap(kemEncap.52, ~kemSk.50)
        z.1   = DH_neutral
        z.2   = verify(signature.56,
                       <'msg_sig', ciphertext.51, msgKeyIndicator.53, DH_neutral, %1, 
                        <$Them.46, theirIdPk.60, $Me.45, pk(~idKey.49)>, None, 
                        Just(kemEncap.52), Just(preKeyHash.54)>,
                       theirIdPk.60)
        z.3   = sdec(ciphertext.51,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'),
                                           decap(kemEncap.52, ~kemSk.50)),
                                      <$Them.46, theirIdPk.60, $Me.45, pk(~idKey.49)>)),
                          'msg_key'))
    
     3. $Me   = $Me.47
        $Them = $Them.48
        ~ecdhSk
              = ~ecdhSk.49
        ~idKey
              = ~idKey.51
        ~kemSk
              = ~kemSk.52
        ciphertext
              = ciphertext.53
        kemEncap
              = encap(z.64, pqpk(~kemSk.52))
        msgKeyIndicator
              = msgKeyIndicator.55
        preKeyHash
              = preKeyHash.56
        signature
              = signature.58
        theirEcdhPk
              = theirEcdhPk.61
        theirIdPk
              = theirIdPk.62
        z     = z.64
        z.1   = theirEcdhPk.61^~ecdhSk.49
        z.2   = verify(signature.58,
                       <'msg_sig', ciphertext.53, msgKeyIndicator.55, theirEcdhPk.61, %1, 
                        <$Them.48, theirIdPk.62, $Me.47, pk(~idKey.51)>, None, 
                        Just(encap(z.64, pqpk(~kemSk.52))), Just(preKeyHash.56)>,
                       theirIdPk.62)
        z.3   = sdec(ciphertext.53,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.61^~ecdhSk.49, '0'), z.64),
                                      <$Them.48, theirIdPk.62, $Me.47, pk(~idKey.51)>)),
                          'msg_key'))
    
     4. $Me   = $Me.47
        $Them = $Them.48
        ~idKey
              = ~idKey.51
        ~kemSk
              = ~kemSk.52
        ciphertext
              = ciphertext.53
        kemEncap
              = encap(z.64, pqpk(~kemSk.52))
        msgKeyIndicator
              = msgKeyIndicator.55
        preKeyHash
              = preKeyHash.56
        signature
              = signature.58
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.62
        z     = z.64
        z.1   = DH_neutral
        z.2   = verify(signature.58,
                       <'msg_sig', ciphertext.53, msgKeyIndicator.55, DH_neutral, %1, 
                        <$Them.48, theirIdPk.62, $Me.47, pk(~idKey.51)>, None, 
                        Just(encap(z.64, pqpk(~kemSk.52))), Just(preKeyHash.56)>,
                       theirIdPk.62)
        z.3   = sdec(ciphertext.53,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'), z.64),
                                      <$Them.48, theirIdPk.62, $Me.47, pk(~idKey.51)>)),
                          'msg_key'))
    
     5. $Me   = $Me.48
        $Them = $Them.49
        ~ecdhSk
              = ~ecdhSk.50
        ~idKey
              = ~idKey.52
        ~kemSk
              = ~kemSk.53
        ciphertext
              = ciphertext.54
        kemEncap
              = kemEncap.55
        msgKeyIndicator
              = msgKeyIndicator.56
        preKeyHash
              = preKeyHash.57
        signature
              = signature.59
        theirEcdhPk
              = z.66^inv(~ecdhSk.50)
        theirIdPk
              = theirIdPk.63
        z     = decap(kemEncap.55, ~kemSk.53)
        z.1   = z.66
        z.2   = verify(signature.59,
                       <'msg_sig', ciphertext.54, msgKeyIndicator.56, 
                        z.66^inv(~ecdhSk.50), %1, 
                        <$Them.49, theirIdPk.63, $Me.48, pk(~idKey.52)>, None, 
                        Just(kemEncap.55), Just(preKeyHash.57)>,
                       theirIdPk.63)
        z.3   = sdec(ciphertext.54,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.66, '0'),
                                           decap(kemEncap.55, ~kemSk.53)),
                                      <$Them.49, theirIdPk.63, $Me.48, pk(~idKey.52)>)),
                          'msg_key'))
    
     6. $Me   = $Me.48
        $Them = $Them.49
        ~ecdhSk
              = ~ecdhSk.50
        ~idKey
              = ~idKey.52
        ~kemSk
              = ~kemSk.53
        ciphertext
              = ciphertext.54
        kemEncap
              = encap(z.65, pqpk(~kemSk.53))
        msgKeyIndicator
              = msgKeyIndicator.56
        preKeyHash
              = preKeyHash.57
        signature
              = signature.59
        theirEcdhPk
              = z.66^inv(~ecdhSk.50)
        theirIdPk
              = theirIdPk.63
        z     = z.65
        z.1   = z.66
        z.2   = verify(signature.59,
                       <'msg_sig', ciphertext.54, msgKeyIndicator.56, 
                        z.66^inv(~ecdhSk.50), %1, 
                        <$Them.49, theirIdPk.63, $Me.48, pk(~idKey.52)>, None, 
                        Just(encap(z.65, pqpk(~kemSk.53))), Just(preKeyHash.57)>,
                       theirIdPk.63)
        z.3   = sdec(ciphertext.54,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.66, '0'), z.65),
                                      <$Them.49, theirIdPk.63, $Me.48, pk(~idKey.52)>)),
                          'msg_key'))
    
     7. $Me   = $Me.57
        $Them = $Them.58
        ~ecdhSk
              = ~ecdhSk.59
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = senc(z.84,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.75, '0'), z.74),
                                      <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
        kemEncap
              = encap(z.74, pqpk(~kemSk.62))
        msgKeyIndicator
              = msgKeyIndicator.65
        preKeyHash
              = preKeyHash.66
        signature
              = signature.68
        theirEcdhPk
              = z.75^inv(~ecdhSk.59)
        theirIdPk
              = theirIdPk.72
        z     = z.74
        z.1   = z.75
        z.2   = verify(signature.68,
                       <'msg_sig', 
                        senc(z.84,
                             hkdf(suffix(hkdf(hkdf(hkdf(z.75, '0'), z.74),
                                              <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                                  'msg_key')), 
                        msgKeyIndicator.65, z.75^inv(~ecdhSk.59), %1, 
                        <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>, None, 
                        Just(encap(z.74, pqpk(~kemSk.62))), Just(preKeyHash.66)>,
                       theirIdPk.72)
        z.3   = z.84
    
     8. $Me   = $Me.57
        $Them = $Them.58
        ~ecdhSk
              = ~ecdhSk.59
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = senc(z.84,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.75, '0'),
                                           decap(kemEncap.64, ~kemSk.62)),
                                      <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.64
        msgKeyIndicator
              = msgKeyIndicator.65
        preKeyHash
              = preKeyHash.66
        signature
              = signature.68
        theirEcdhPk
              = z.75^inv(~ecdhSk.59)
        theirIdPk
              = theirIdPk.72
        z     = decap(kemEncap.64, ~kemSk.62)
        z.1   = z.75
        z.2   = verify(signature.68,
                       <'msg_sig', 
                        senc(z.84,
                             hkdf(suffix(hkdf(hkdf(hkdf(z.75, '0'),
                                                   decap(kemEncap.64, ~kemSk.62)),
                                              <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                                  'msg_key')), 
                        msgKeyIndicator.65, z.75^inv(~ecdhSk.59), %1, 
                        <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>, None, 
                        Just(kemEncap.64), Just(preKeyHash.66)>,
                       theirIdPk.72)
        z.3   = z.84
    
     9. $Me   = $Me.57
        $Them = $Them.58
        ~ecdhSk
              = ~ecdhSk.59
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = senc(z.84,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.71^~ecdhSk.59, '0'), z.74),
                                      <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
        kemEncap
              = encap(z.74, pqpk(~kemSk.62))
        msgKeyIndicator
              = msgKeyIndicator.65
        preKeyHash
              = preKeyHash.66
        signature
              = signature.68
        theirEcdhPk
              = theirEcdhPk.71
        theirIdPk
              = theirIdPk.72
        z     = z.74
        z.1   = theirEcdhPk.71^~ecdhSk.59
        z.2   = verify(signature.68,
                       <'msg_sig', 
                        senc(z.84,
                             hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.71^~ecdhSk.59, '0'), z.74),
                                              <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                                  'msg_key')), 
                        msgKeyIndicator.65, theirEcdhPk.71, %1, 
                        <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>, None, 
                        Just(encap(z.74, pqpk(~kemSk.62))), Just(preKeyHash.66)>,
                       theirIdPk.72)
        z.3   = z.84
    
    10. $Me   = $Me.57
        $Them = $Them.58
        ~ecdhSk
              = ~ecdhSk.59
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = senc(z.84,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.71^~ecdhSk.59, '0'),
                                           decap(kemEncap.64, ~kemSk.62)),
                                      <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.64
        msgKeyIndicator
              = msgKeyIndicator.65
        preKeyHash
              = preKeyHash.66
        signature
              = signature.68
        theirEcdhPk
              = theirEcdhPk.71
        theirIdPk
              = theirIdPk.72
        z     = decap(kemEncap.64, ~kemSk.62)
        z.1   = theirEcdhPk.71^~ecdhSk.59
        z.2   = verify(signature.68,
                       <'msg_sig', 
                        senc(z.84,
                             hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.71^~ecdhSk.59, '0'),
                                                   decap(kemEncap.64, ~kemSk.62)),
                                              <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                                  'msg_key')), 
                        msgKeyIndicator.65, theirEcdhPk.71, %1, 
                        <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>, None, 
                        Just(kemEncap.64), Just(preKeyHash.66)>,
                       theirIdPk.72)
        z.3   = z.84
    
    11. $Me   = $Me.57
        $Them = $Them.58
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = senc(z.84,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'), z.74),
                                      <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
        kemEncap
              = encap(z.74, pqpk(~kemSk.62))
        msgKeyIndicator
              = msgKeyIndicator.65
        preKeyHash
              = preKeyHash.66
        signature
              = signature.68
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.72
        z     = z.74
        z.1   = DH_neutral
        z.2   = verify(signature.68,
                       <'msg_sig', 
                        senc(z.84,
                             hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'), z.74),
                                              <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                                  'msg_key')), 
                        msgKeyIndicator.65, DH_neutral, %1, 
                        <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>, None, 
                        Just(encap(z.74, pqpk(~kemSk.62))), Just(preKeyHash.66)>,
                       theirIdPk.72)
        z.3   = z.84
    
    12. $Me   = $Me.57
        $Them = $Them.58
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = senc(z.84,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'),
                                           decap(kemEncap.64, ~kemSk.62)),
                                      <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.64
        msgKeyIndicator
              = msgKeyIndicator.65
        preKeyHash
              = preKeyHash.66
        signature
              = signature.68
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.72
        z     = decap(kemEncap.64, ~kemSk.62)
        z.1   = DH_neutral
        z.2   = verify(signature.68,
                       <'msg_sig', 
                        senc(z.84,
                             hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'),
                                                   decap(kemEncap.64, ~kemSk.62)),
                                              <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>)),
                                  'msg_key')), 
                        msgKeyIndicator.65, DH_neutral, %1, 
                        <$Them.58, theirIdPk.72, $Me.57, pk(~idKey.61)>, None, 
                        Just(kemEncap.64), Just(preKeyHash.66)>,
                       theirIdPk.72)
        z.3   = z.84
    
    13. $Me   = $Me.323
        $Them = $Them.324
        ~ecdhSk
              = ~ecdhSk.325
        ~idKey
              = ~idKey.327
        ~kemSk
              = ~kemSk.328
        ciphertext
              = ciphertext.329
        kemEncap
              = kemEncap.330
        msgKeyIndicator
              = msgKeyIndicator.331
        preKeyHash
              = preKeyHash.332
        signature
              = signature.334
        theirEcdhPk
              = x.643^x.644
        theirIdPk
              = theirIdPk.338
        z     = decap(kemEncap.330, ~kemSk.328)
        z.1   = x.643^(~ecdhSk.325*x.644)
        z.2   = verify(signature.334,
                       <'msg_sig', ciphertext.329, msgKeyIndicator.331, x.643^x.644, %1, 
                        <$Them.324, theirIdPk.338, $Me.323, pk(~idKey.327)>, None, 
                        Just(kemEncap.330), Just(preKeyHash.332)>,
                       theirIdPk.338)
        z.3   = sdec(ciphertext.329,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.643^(~ecdhSk.325*x.644), '0'),
                                           decap(kemEncap.330, ~kemSk.328)),
                                      <$Them.324, theirIdPk.338, $Me.323, pk(~idKey.327)>)),
                          'msg_key'))
    
    14. $Me   = $Me.330
        $Them = $Them.331
        ~ecdhSk
              = ~ecdhSk.332
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.657^x.658, '0'), z.347),
                                      <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = encap(z.347, pqpk(~kemSk.335))
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = signature.341
        theirEcdhPk
              = x.657^(x.658*inv(~ecdhSk.332))
        theirIdPk
              = theirIdPk.345
        z     = z.347
        z.1   = x.657^x.658
        z.2   = verify(signature.341,
                       <'msg_sig', 
                        senc(z.357,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.657^x.658, '0'), z.347),
                                              <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                                  'msg_key')), 
                        msgKeyIndicator.338, x.657^(x.658*inv(~ecdhSk.332)), %1, 
                        <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>, None, 
                        Just(encap(z.347, pqpk(~kemSk.335))), Just(preKeyHash.339)>,
                       theirIdPk.345)
        z.3   = z.357
    
    15. $Me   = $Me.330
        $Them = $Them.331
        ~ecdhSk
              = ~ecdhSk.332
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.657^x.658, '0'),
                                           decap(kemEncap.337, ~kemSk.335)),
                                      <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.337
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = signature.341
        theirEcdhPk
              = x.657^(x.658*inv(~ecdhSk.332))
        theirIdPk
              = theirIdPk.345
        z     = decap(kemEncap.337, ~kemSk.335)
        z.1   = x.657^x.658
        z.2   = verify(signature.341,
                       <'msg_sig', 
                        senc(z.357,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.657^x.658, '0'),
                                                   decap(kemEncap.337, ~kemSk.335)),
                                              <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                                  'msg_key')), 
                        msgKeyIndicator.338, x.657^(x.658*inv(~ecdhSk.332)), %1, 
                        <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>, None, 
                        Just(kemEncap.337), Just(preKeyHash.339)>,
                       theirIdPk.345)
        z.3   = z.357
    
    16. $Me   = $Me.330
        $Them = $Them.331
        ~ecdhSk
              = ~ecdhSk.332
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.657^inv(x.658), '0'), z.347),
                                      <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = encap(z.347, pqpk(~kemSk.335))
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = signature.341
        theirEcdhPk
              = x.657^inv((~ecdhSk.332*x.658))
        theirIdPk
              = theirIdPk.345
        z     = z.347
        z.1   = x.657^inv(x.658)
        z.2   = verify(signature.341,
                       <'msg_sig', 
                        senc(z.357,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.657^inv(x.658), '0'), z.347),
                                              <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                                  'msg_key')), 
                        msgKeyIndicator.338, x.657^inv((~ecdhSk.332*x.658)), %1, 
                        <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>, None, 
                        Just(encap(z.347, pqpk(~kemSk.335))), Just(preKeyHash.339)>,
                       theirIdPk.345)
        z.3   = z.357
    
    17. $Me   = $Me.330
        $Them = $Them.331
        ~ecdhSk
              = ~ecdhSk.332
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.657^inv(x.658), '0'),
                                           decap(kemEncap.337, ~kemSk.335)),
                                      <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.337
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = signature.341
        theirEcdhPk
              = x.657^inv((~ecdhSk.332*x.658))
        theirIdPk
              = theirIdPk.345
        z     = decap(kemEncap.337, ~kemSk.335)
        z.1   = x.657^inv(x.658)
        z.2   = verify(signature.341,
                       <'msg_sig', 
                        senc(z.357,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.657^inv(x.658), '0'),
                                                   decap(kemEncap.337, ~kemSk.335)),
                                              <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                                  'msg_key')), 
                        msgKeyIndicator.338, x.657^inv((~ecdhSk.332*x.658)), %1, 
                        <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>, None, 
                        Just(kemEncap.337), Just(preKeyHash.339)>,
                       theirIdPk.345)
        z.3   = z.357
    
    18. $Me   = $Me.330
        $Them = $Them.331
        ~ecdhSk
              = ~ecdhSk.332
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.657^(~ecdhSk.332*x.658), '0'), z.347),
                                      <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = encap(z.347, pqpk(~kemSk.335))
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = signature.341
        theirEcdhPk
              = x.657^x.658
        theirIdPk
              = theirIdPk.345
        z     = z.347
        z.1   = x.657^(~ecdhSk.332*x.658)
        z.2   = verify(signature.341,
                       <'msg_sig', 
                        senc(z.357,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.657^(~ecdhSk.332*x.658), '0'), z.347),
                                              <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                                  'msg_key')), 
                        msgKeyIndicator.338, x.657^x.658, %1, 
                        <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>, None, 
                        Just(encap(z.347, pqpk(~kemSk.335))), Just(preKeyHash.339)>,
                       theirIdPk.345)
        z.3   = z.357
    
    19. $Me   = $Me.330
        $Them = $Them.331
        ~ecdhSk
              = ~ecdhSk.332
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.657^(~ecdhSk.332*x.658), '0'),
                                           decap(kemEncap.337, ~kemSk.335)),
                                      <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.337
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = signature.341
        theirEcdhPk
              = x.657^x.658
        theirIdPk
              = theirIdPk.345
        z     = decap(kemEncap.337, ~kemSk.335)
        z.1   = x.657^(~ecdhSk.332*x.658)
        z.2   = verify(signature.341,
                       <'msg_sig', 
                        senc(z.357,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.657^(~ecdhSk.332*x.658), '0'),
                                                   decap(kemEncap.337, ~kemSk.335)),
                                              <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>)),
                                  'msg_key')), 
                        msgKeyIndicator.338, x.657^x.658, %1, 
                        <$Them.331, theirIdPk.345, $Me.330, pk(~idKey.334)>, None, 
                        Just(kemEncap.337), Just(preKeyHash.339)>,
                       theirIdPk.345)
        z.3   = z.357
    
    20. $Me   = $Me.330
        $Them = $Them.331
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'), z.347),
                                      <$Them.331, pk(x.658), $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = encap(z.347, pqpk(~kemSk.335))
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = sign(<'msg_sig', 
                      senc(z.357,
                           hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'), z.347),
                                            <$Them.331, pk(x.658), $Me.330, pk(~idKey.334)>)),
                                'msg_key')), 
                      msgKeyIndicator.338, DH_neutral, %1, 
                      <$Them.331, pk(x.658), $Me.330, pk(~idKey.334)>, None, 
                      Just(encap(z.347, pqpk(~kemSk.335))), Just(preKeyHash.339)>,
                     x.658)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.658)
        z     = z.347
        z.1   = DH_neutral
        z.2   = true
        z.3   = z.357
    
    21. $Me   = $Me.330
        $Them = $Them.331
        ~idKey
              = ~idKey.334
        ~kemSk
              = ~kemSk.335
        ciphertext
              = senc(z.357,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'),
                                           decap(kemEncap.337, ~kemSk.335)),
                                      <$Them.331, pk(x.658), $Me.330, pk(~idKey.334)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.337
        msgKeyIndicator
              = msgKeyIndicator.338
        preKeyHash
              = preKeyHash.339
        signature
              = sign(<'msg_sig', 
                      senc(z.357,
                           hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'),
                                                 decap(kemEncap.337, ~kemSk.335)),
                                            <$Them.331, pk(x.658), $Me.330, pk(~idKey.334)>)),
                                'msg_key')), 
                      msgKeyIndicator.338, DH_neutral, %1, 
                      <$Them.331, pk(x.658), $Me.330, pk(~idKey.334)>, None, 
                      Just(kemEncap.337), Just(preKeyHash.339)>,
                     x.658)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.658)
        z     = decap(kemEncap.337, ~kemSk.335)
        z.1   = DH_neutral
        z.2   = true
        z.3   = z.357
    
    22. $Me   = $Me.331
        $Them = $Them.332
        ~ecdhSk
              = ~ecdhSk.333
        ~idKey
              = ~idKey.335
        ~kemSk
              = ~kemSk.336
        ciphertext
              = senc(z.358,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.349, '0'), z.348),
                                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                          'msg_key'))
        kemEncap
              = encap(z.348, pqpk(~kemSk.336))
        msgKeyIndicator
              = msgKeyIndicator.339
        preKeyHash
              = preKeyHash.340
        signature
              = sign(<'msg_sig', 
                      senc(z.358,
                           hkdf(suffix(hkdf(hkdf(hkdf(z.349, '0'), z.348),
                                            <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                                'msg_key')), 
                      msgKeyIndicator.339, z.349^inv(~ecdhSk.333), %1, 
                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>, None, 
                      Just(encap(z.348, pqpk(~kemSk.336))), Just(preKeyHash.340)>,
                     x.660)
        theirEcdhPk
              = z.349^inv(~ecdhSk.333)
        theirIdPk
              = pk(x.660)
        z     = z.348
        z.1   = z.349
        z.2   = true
        z.3   = z.358
    
    23. $Me   = $Me.331
        $Them = $Them.332
        ~ecdhSk
              = ~ecdhSk.333
        ~idKey
              = ~idKey.335
        ~kemSk
              = ~kemSk.336
        ciphertext
              = senc(z.358,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.349, '0'),
                                           decap(kemEncap.338, ~kemSk.336)),
                                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.338
        msgKeyIndicator
              = msgKeyIndicator.339
        preKeyHash
              = preKeyHash.340
        signature
              = sign(<'msg_sig', 
                      senc(z.358,
                           hkdf(suffix(hkdf(hkdf(hkdf(z.349, '0'),
                                                 decap(kemEncap.338, ~kemSk.336)),
                                            <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                                'msg_key')), 
                      msgKeyIndicator.339, z.349^inv(~ecdhSk.333), %1, 
                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>, None, 
                      Just(kemEncap.338), Just(preKeyHash.340)>,
                     x.660)
        theirEcdhPk
              = z.349^inv(~ecdhSk.333)
        theirIdPk
              = pk(x.660)
        z     = decap(kemEncap.338, ~kemSk.336)
        z.1   = z.349
        z.2   = true
        z.3   = z.358
    
    24. $Me   = $Me.331
        $Them = $Them.332
        ~ecdhSk
              = ~ecdhSk.333
        ~idKey
              = ~idKey.335
        ~kemSk
              = ~kemSk.336
        ciphertext
              = senc(z.358,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.345^~ecdhSk.333, '0'),
                                           z.348),
                                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                          'msg_key'))
        kemEncap
              = encap(z.348, pqpk(~kemSk.336))
        msgKeyIndicator
              = msgKeyIndicator.339
        preKeyHash
              = preKeyHash.340
        signature
              = sign(<'msg_sig', 
                      senc(z.358,
                           hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.345^~ecdhSk.333, '0'),
                                                 z.348),
                                            <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                                'msg_key')), 
                      msgKeyIndicator.339, theirEcdhPk.345, %1, 
                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>, None, 
                      Just(encap(z.348, pqpk(~kemSk.336))), Just(preKeyHash.340)>,
                     x.660)
        theirEcdhPk
              = theirEcdhPk.345
        theirIdPk
              = pk(x.660)
        z     = z.348
        z.1   = theirEcdhPk.345^~ecdhSk.333
        z.2   = true
        z.3   = z.358
    
    25. $Me   = $Me.331
        $Them = $Them.332
        ~ecdhSk
              = ~ecdhSk.333
        ~idKey
              = ~idKey.335
        ~kemSk
              = ~kemSk.336
        ciphertext
              = senc(z.358,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.345^~ecdhSk.333, '0'),
                                           decap(kemEncap.338, ~kemSk.336)),
                                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.338
        msgKeyIndicator
              = msgKeyIndicator.339
        preKeyHash
              = preKeyHash.340
        signature
              = sign(<'msg_sig', 
                      senc(z.358,
                           hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.345^~ecdhSk.333, '0'),
                                                 decap(kemEncap.338, ~kemSk.336)),
                                            <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>)),
                                'msg_key')), 
                      msgKeyIndicator.339, theirEcdhPk.345, %1, 
                      <$Them.332, pk(x.660), $Me.331, pk(~idKey.335)>, None, 
                      Just(kemEncap.338), Just(preKeyHash.340)>,
                     x.660)
        theirEcdhPk
              = theirEcdhPk.345
        theirIdPk
              = pk(x.660)
        z     = decap(kemEncap.338, ~kemSk.336)
        z.1   = theirEcdhPk.345^~ecdhSk.333
        z.2   = true
        z.3   = z.358
    
    26. $Me   = $Me.331
        $Them = $Them.332
        ~ecdhSk
              = ~ecdhSk.333
        ~idKey
              = ~idKey.335
        ~kemSk
              = ~kemSk.336
        ciphertext
              = senc(z.358,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.658^(x.659*inv(x.660)), '0'), z.348),
                                      <$Them.332, theirIdPk.346, $Me.331, pk(~idKey.335)>)),
                          'msg_key'))
        kemEncap
              = encap(z.348, pqpk(~kemSk.336))
        msgKeyIndicator
              = msgKeyIndicator.339
        preKeyHash
              = preKeyHash.340
        signature
              = signature.342
        theirEcdhPk
              = x.658^(x.659*inv((~ecdhSk.333*x.660)))
        theirIdPk
              = theirIdPk.346
        z     = z.348
        z.1   = x.658^(x.659*inv(x.660))
        z.2   = verify(signature.342,
                       <'msg_sig', 
                        senc(z.358,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.658^(x.659*inv(x.660)), '0'), z.348),
                                              <$Them.332, theirIdPk.346, $Me.331, pk(~idKey.335)>)),
                                  'msg_key')), 
                        msgKeyIndicator.339, x.658^(x.659*inv((~ecdhSk.333*x.660))), %1, 
                        <$Them.332, theirIdPk.346, $Me.331, pk(~idKey.335)>, None, 
                        Just(encap(z.348, pqpk(~kemSk.336))), Just(preKeyHash.340)>,
                       theirIdPk.346)
        z.3   = z.358
    
    27. $Me   = $Me.331
        $Them = $Them.332
        ~ecdhSk
              = ~ecdhSk.333
        ~idKey
              = ~idKey.335
        ~kemSk
              = ~kemSk.336
        ciphertext
              = senc(z.358,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.658^(x.659*inv(x.660)), '0'),
                                           decap(kemEncap.338, ~kemSk.336)),
                                      <$Them.332, theirIdPk.346, $Me.331, pk(~idKey.335)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.338
        msgKeyIndicator
              = msgKeyIndicator.339
        preKeyHash
              = preKeyHash.340
        signature
              = signature.342
        theirEcdhPk
              = x.658^(x.659*inv((~ecdhSk.333*x.660)))
        theirIdPk
              = theirIdPk.346
        z     = decap(kemEncap.338, ~kemSk.336)
        z.1   = x.658^(x.659*inv(x.660))
        z.2   = verify(signature.342,
                       <'msg_sig', 
                        senc(z.358,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.658^(x.659*inv(x.660)), '0'),
                                                   decap(kemEncap.338, ~kemSk.336)),
                                              <$Them.332, theirIdPk.346, $Me.331, pk(~idKey.335)>)),
                                  'msg_key')), 
                        msgKeyIndicator.339, x.658^(x.659*inv((~ecdhSk.333*x.660))), %1, 
                        <$Them.332, theirIdPk.346, $Me.331, pk(~idKey.335)>, None, 
                        Just(kemEncap.338), Just(preKeyHash.340)>,
                       theirIdPk.346)
        z.3   = z.358
    
    28. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = ciphertext.338
        kemEncap
              = encap(z.349, pqpk(~kemSk.337))
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = signature.343
        theirEcdhPk
              = x.661^x.662
        theirIdPk
              = theirIdPk.347
        z     = z.349
        z.1   = x.661^(~ecdhSk.334*x.662)
        z.2   = verify(signature.343,
                       <'msg_sig', ciphertext.338, msgKeyIndicator.340, x.661^x.662, %1, 
                        <$Them.333, theirIdPk.347, $Me.332, pk(~idKey.336)>, None, 
                        Just(encap(z.349, pqpk(~kemSk.337))), Just(preKeyHash.341)>,
                       theirIdPk.347)
        z.3   = sdec(ciphertext.338,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.661^(~ecdhSk.334*x.662), '0'), z.349),
                                      <$Them.333, theirIdPk.347, $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
    
    29. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = senc(z.359,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.659^x.660, '0'), z.349),
                                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
        kemEncap
              = encap(z.349, pqpk(~kemSk.337))
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = sign(<'msg_sig', 
                      senc(z.359,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.659^x.660, '0'), z.349),
                                            <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                                'msg_key')), 
                      msgKeyIndicator.340, x.659^(x.660*inv(~ecdhSk.334)), %1, 
                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>, None, 
                      Just(encap(z.349, pqpk(~kemSk.337))), Just(preKeyHash.341)>,
                     x.662)
        theirEcdhPk
              = x.659^(x.660*inv(~ecdhSk.334))
        theirIdPk
              = pk(x.662)
        z     = z.349
        z.1   = x.659^x.660
        z.2   = true
        z.3   = z.359
    
    30. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = senc(z.359,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.659^x.660, '0'),
                                           decap(kemEncap.339, ~kemSk.337)),
                                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.339
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = sign(<'msg_sig', 
                      senc(z.359,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.659^x.660, '0'),
                                                 decap(kemEncap.339, ~kemSk.337)),
                                            <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                                'msg_key')), 
                      msgKeyIndicator.340, x.659^(x.660*inv(~ecdhSk.334)), %1, 
                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>, None, 
                      Just(kemEncap.339), Just(preKeyHash.341)>,
                     x.662)
        theirEcdhPk
              = x.659^(x.660*inv(~ecdhSk.334))
        theirIdPk
              = pk(x.662)
        z     = decap(kemEncap.339, ~kemSk.337)
        z.1   = x.659^x.660
        z.2   = true
        z.3   = z.359
    
    31. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = senc(z.359,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.659^inv(x.660), '0'), z.349),
                                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
        kemEncap
              = encap(z.349, pqpk(~kemSk.337))
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = sign(<'msg_sig', 
                      senc(z.359,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.659^inv(x.660), '0'), z.349),
                                            <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                                'msg_key')), 
                      msgKeyIndicator.340, x.659^inv((~ecdhSk.334*x.660)), %1, 
                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>, None, 
                      Just(encap(z.349, pqpk(~kemSk.337))), Just(preKeyHash.341)>,
                     x.662)
        theirEcdhPk
              = x.659^inv((~ecdhSk.334*x.660))
        theirIdPk
              = pk(x.662)
        z     = z.349
        z.1   = x.659^inv(x.660)
        z.2   = true
        z.3   = z.359
    
    32. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = senc(z.359,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.659^inv(x.660), '0'),
                                           decap(kemEncap.339, ~kemSk.337)),
                                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.339
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = sign(<'msg_sig', 
                      senc(z.359,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.659^inv(x.660), '0'),
                                                 decap(kemEncap.339, ~kemSk.337)),
                                            <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                                'msg_key')), 
                      msgKeyIndicator.340, x.659^inv((~ecdhSk.334*x.660)), %1, 
                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>, None, 
                      Just(kemEncap.339), Just(preKeyHash.341)>,
                     x.662)
        theirEcdhPk
              = x.659^inv((~ecdhSk.334*x.660))
        theirIdPk
              = pk(x.662)
        z     = decap(kemEncap.339, ~kemSk.337)
        z.1   = x.659^inv(x.660)
        z.2   = true
        z.3   = z.359
    
    33. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = senc(z.359,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.659^(~ecdhSk.334*x.660), '0'), z.349),
                                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
        kemEncap
              = encap(z.349, pqpk(~kemSk.337))
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = sign(<'msg_sig', 
                      senc(z.359,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.659^(~ecdhSk.334*x.660), '0'), z.349),
                                            <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                                'msg_key')), 
                      msgKeyIndicator.340, x.659^x.660, %1, 
                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>, None, 
                      Just(encap(z.349, pqpk(~kemSk.337))), Just(preKeyHash.341)>,
                     x.662)
        theirEcdhPk
              = x.659^x.660
        theirIdPk
              = pk(x.662)
        z     = z.349
        z.1   = x.659^(~ecdhSk.334*x.660)
        z.2   = true
        z.3   = z.359
    
    34. $Me   = $Me.332
        $Them = $Them.333
        ~ecdhSk
              = ~ecdhSk.334
        ~idKey
              = ~idKey.336
        ~kemSk
              = ~kemSk.337
        ciphertext
              = senc(z.359,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.659^(~ecdhSk.334*x.660), '0'),
                                           decap(kemEncap.339, ~kemSk.337)),
                                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.339
        msgKeyIndicator
              = msgKeyIndicator.340
        preKeyHash
              = preKeyHash.341
        signature
              = sign(<'msg_sig', 
                      senc(z.359,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.659^(~ecdhSk.334*x.660), '0'),
                                                 decap(kemEncap.339, ~kemSk.337)),
                                            <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>)),
                                'msg_key')), 
                      msgKeyIndicator.340, x.659^x.660, %1, 
                      <$Them.333, pk(x.662), $Me.332, pk(~idKey.336)>, None, 
                      Just(kemEncap.339), Just(preKeyHash.341)>,
                     x.662)
        theirEcdhPk
              = x.659^x.660
        theirIdPk
              = pk(x.662)
        z     = decap(kemEncap.339, ~kemSk.337)
        z.1   = x.659^(~ecdhSk.334*x.660)
        z.2   = true
        z.3   = z.359
    
    35. $Me   = $Me.333
        $Them = $Them.334
        ~ecdhSk
              = ~ecdhSk.335
        ~idKey
              = ~idKey.337
        ~kemSk
              = ~kemSk.338
        ciphertext
              = senc(z.360,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.660^(x.661*inv(x.662)), '0'), z.350),
                                      <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>)),
                          'msg_key'))
        kemEncap
              = encap(z.350, pqpk(~kemSk.338))
        msgKeyIndicator
              = msgKeyIndicator.341
        preKeyHash
              = preKeyHash.342
        signature
              = sign(<'msg_sig', 
                      senc(z.360,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.660^(x.661*inv(x.662)), '0'), z.350),
                                            <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>)),
                                'msg_key')), 
                      msgKeyIndicator.341, x.660^(x.661*inv((~ecdhSk.335*x.662))), %1, 
                      <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>, None, 
                      Just(encap(z.350, pqpk(~kemSk.338))), Just(preKeyHash.342)>,
                     x.664)
        theirEcdhPk
              = x.660^(x.661*inv((~ecdhSk.335*x.662)))
        theirIdPk
              = pk(x.664)
        z     = z.350
        z.1   = x.660^(x.661*inv(x.662))
        z.2   = true
        z.3   = z.360
    
    36. $Me   = $Me.333
        $Them = $Them.334
        ~ecdhSk
              = ~ecdhSk.335
        ~idKey
              = ~idKey.337
        ~kemSk
              = ~kemSk.338
        ciphertext
              = senc(z.360,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.660^(x.661*inv(x.662)), '0'),
                                           decap(kemEncap.340, ~kemSk.338)),
                                      <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.340
        msgKeyIndicator
              = msgKeyIndicator.341
        preKeyHash
              = preKeyHash.342
        signature
              = sign(<'msg_sig', 
                      senc(z.360,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.660^(x.661*inv(x.662)), '0'),
                                                 decap(kemEncap.340, ~kemSk.338)),
                                            <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>)),
                                'msg_key')), 
                      msgKeyIndicator.341, x.660^(x.661*inv((~ecdhSk.335*x.662))), %1, 
                      <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>, None, 
                      Just(kemEncap.340), Just(preKeyHash.342)>,
                     x.664)
        theirEcdhPk
              = x.660^(x.661*inv((~ecdhSk.335*x.662)))
        theirIdPk
              = pk(x.664)
        z     = decap(kemEncap.340, ~kemSk.338)
        z.1   = x.660^(x.661*inv(x.662))
        z.2   = true
        z.3   = z.360
    
    37. $Me   = $Me.333
        $Them = $Them.334
        ~idKey
              = ~idKey.337
        ~kemSk
              = ~kemSk.338
        ciphertext
              = ciphertext.339
        kemEncap
              = kemEncap.340
        msgKeyIndicator
              = msgKeyIndicator.341
        preKeyHash
              = preKeyHash.342
        signature
              = sign(<'msg_sig', ciphertext.339, msgKeyIndicator.341, 
                      DH_neutral, %1, <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>, 
                      None, Just(kemEncap.340), Just(preKeyHash.342)>,
                     x.664)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.664)
        z     = decap(kemEncap.340, ~kemSk.338)
        z.1   = DH_neutral
        z.2   = true
        z.3   = sdec(ciphertext.339,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'),
                                           decap(kemEncap.340, ~kemSk.338)),
                                      <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>)),
                          'msg_key'))
    
    38. $Me   = $Me.333
        $Them = $Them.334
        ~idKey
              = ~idKey.337
        ~kemSk
              = ~kemSk.338
        ciphertext
              = ciphertext.339
        kemEncap
              = encap(z.350, pqpk(~kemSk.338))
        msgKeyIndicator
              = msgKeyIndicator.341
        preKeyHash
              = preKeyHash.342
        signature
              = sign(<'msg_sig', ciphertext.339, msgKeyIndicator.341, 
                      DH_neutral, %1, <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>, 
                      None, Just(encap(z.350, pqpk(~kemSk.338))), Just(preKeyHash.342)>,
                     x.664)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.664)
        z     = z.350
        z.1   = DH_neutral
        z.2   = true
        z.3   = sdec(ciphertext.339,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, '0'), z.350),
                                      <$Them.334, pk(x.664), $Me.333, pk(~idKey.337)>)),
                          'msg_key'))
    
    39. $Me   = $Me.334
        $Them = $Them.335
        ~ecdhSk
              = ~ecdhSk.336
        ~idKey
              = ~idKey.338
        ~kemSk
              = ~kemSk.339
        ciphertext
              = ciphertext.340
        kemEncap
              = kemEncap.341
        msgKeyIndicator
              = msgKeyIndicator.342
        preKeyHash
              = preKeyHash.343
        signature
              = sign(<'msg_sig', ciphertext.340, msgKeyIndicator.342, 
                      theirEcdhPk.348, %1, 
                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>, None, 
                      Just(kemEncap.341), Just(preKeyHash.343)>,
                     x.666)
        theirEcdhPk
              = theirEcdhPk.348
        theirIdPk
              = pk(x.666)
        z     = decap(kemEncap.341, ~kemSk.339)
        z.1   = theirEcdhPk.348^~ecdhSk.336
        z.2   = true
        z.3   = sdec(ciphertext.340,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.348^~ecdhSk.336, '0'),
                                           decap(kemEncap.341, ~kemSk.339)),
                                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>)),
                          'msg_key'))
    
    40. $Me   = $Me.334
        $Them = $Them.335
        ~ecdhSk
              = ~ecdhSk.336
        ~idKey
              = ~idKey.338
        ~kemSk
              = ~kemSk.339
        ciphertext
              = ciphertext.340
        kemEncap
              = kemEncap.341
        msgKeyIndicator
              = msgKeyIndicator.342
        preKeyHash
              = preKeyHash.343
        signature
              = sign(<'msg_sig', ciphertext.340, msgKeyIndicator.342, 
                      z.352^inv(~ecdhSk.336), %1, 
                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>, None, 
                      Just(kemEncap.341), Just(preKeyHash.343)>,
                     x.666)
        theirEcdhPk
              = z.352^inv(~ecdhSk.336)
        theirIdPk
              = pk(x.666)
        z     = decap(kemEncap.341, ~kemSk.339)
        z.1   = z.352
        z.2   = true
        z.3   = sdec(ciphertext.340,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.352, '0'),
                                           decap(kemEncap.341, ~kemSk.339)),
                                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>)),
                          'msg_key'))
    
    41. $Me   = $Me.334
        $Them = $Them.335
        ~ecdhSk
              = ~ecdhSk.336
        ~idKey
              = ~idKey.338
        ~kemSk
              = ~kemSk.339
        ciphertext
              = ciphertext.340
        kemEncap
              = encap(z.351, pqpk(~kemSk.339))
        msgKeyIndicator
              = msgKeyIndicator.342
        preKeyHash
              = preKeyHash.343
        signature
              = sign(<'msg_sig', ciphertext.340, msgKeyIndicator.342, 
                      theirEcdhPk.348, %1, 
                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>, None, 
                      Just(encap(z.351, pqpk(~kemSk.339))), Just(preKeyHash.343)>,
                     x.666)
        theirEcdhPk
              = theirEcdhPk.348
        theirIdPk
              = pk(x.666)
        z     = z.351
        z.1   = theirEcdhPk.348^~ecdhSk.336
        z.2   = true
        z.3   = sdec(ciphertext.340,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.348^~ecdhSk.336, '0'),
                                           z.351),
                                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>)),
                          'msg_key'))
    
    42. $Me   = $Me.334
        $Them = $Them.335
        ~ecdhSk
              = ~ecdhSk.336
        ~idKey
              = ~idKey.338
        ~kemSk
              = ~kemSk.339
        ciphertext
              = ciphertext.340
        kemEncap
              = encap(z.351, pqpk(~kemSk.339))
        msgKeyIndicator
              = msgKeyIndicator.342
        preKeyHash
              = preKeyHash.343
        signature
              = sign(<'msg_sig', ciphertext.340, msgKeyIndicator.342, 
                      z.352^inv(~ecdhSk.336), %1, 
                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>, None, 
                      Just(encap(z.351, pqpk(~kemSk.339))), Just(preKeyHash.343)>,
                     x.666)
        theirEcdhPk
              = z.352^inv(~ecdhSk.336)
        theirIdPk
              = pk(x.666)
        z     = z.351
        z.1   = z.352
        z.2   = true
        z.3   = sdec(ciphertext.340,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.352, '0'), z.351),
                                      <$Them.335, pk(x.666), $Me.334, pk(~idKey.338)>)),
                          'msg_key'))
    
    43. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = kemEncap.342
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = signature.346
        theirEcdhPk
              = x.667^inv((~ecdhSk.337*x.668))
        theirIdPk
              = theirIdPk.350
        z     = decap(kemEncap.342, ~kemSk.340)
        z.1   = x.667^inv(x.668)
        z.2   = verify(signature.346,
                       <'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                        x.667^inv((~ecdhSk.337*x.668)), %1, 
                        <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>, None, 
                        Just(kemEncap.342), Just(preKeyHash.344)>,
                       theirIdPk.350)
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.667^inv(x.668), '0'),
                                           decap(kemEncap.342, ~kemSk.340)),
                                      <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    44. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = kemEncap.342
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = signature.346
        theirEcdhPk
              = x.667^(x.668*inv(~ecdhSk.337))
        theirIdPk
              = theirIdPk.350
        z     = decap(kemEncap.342, ~kemSk.340)
        z.1   = x.667^x.668
        z.2   = verify(signature.346,
                       <'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                        x.667^(x.668*inv(~ecdhSk.337)), %1, 
                        <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>, None, 
                        Just(kemEncap.342), Just(preKeyHash.344)>,
                       theirIdPk.350)
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.667^x.668, '0'),
                                           decap(kemEncap.342, ~kemSk.340)),
                                      <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    45. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = kemEncap.342
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = sign(<'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                      x.666^x.667, %1, <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>, 
                      None, Just(kemEncap.342), Just(preKeyHash.344)>,
                     x.668)
        theirEcdhPk
              = x.666^x.667
        theirIdPk
              = pk(x.668)
        z     = decap(kemEncap.342, ~kemSk.340)
        z.1   = x.666^(~ecdhSk.337*x.667)
        z.2   = true
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.666^(~ecdhSk.337*x.667), '0'),
                                           decap(kemEncap.342, ~kemSk.340)),
                                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    46. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = kemEncap.342
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = sign(<'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                      x.666^inv((~ecdhSk.337*x.667)), %1, 
                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>, None, 
                      Just(kemEncap.342), Just(preKeyHash.344)>,
                     x.668)
        theirEcdhPk
              = x.666^inv((~ecdhSk.337*x.667))
        theirIdPk
              = pk(x.668)
        z     = decap(kemEncap.342, ~kemSk.340)
        z.1   = x.666^inv(x.667)
        z.2   = true
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.666^inv(x.667), '0'),
                                           decap(kemEncap.342, ~kemSk.340)),
                                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    47. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = kemEncap.342
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = sign(<'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                      x.666^(x.667*inv(~ecdhSk.337)), %1, 
                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>, None, 
                      Just(kemEncap.342), Just(preKeyHash.344)>,
                     x.668)
        theirEcdhPk
              = x.666^(x.667*inv(~ecdhSk.337))
        theirIdPk
              = pk(x.668)
        z     = decap(kemEncap.342, ~kemSk.340)
        z.1   = x.666^x.667
        z.2   = true
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.666^x.667, '0'),
                                           decap(kemEncap.342, ~kemSk.340)),
                                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    48. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = encap(z.352, pqpk(~kemSk.340))
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = signature.346
        theirEcdhPk
              = x.667^inv((~ecdhSk.337*x.668))
        theirIdPk
              = theirIdPk.350
        z     = z.352
        z.1   = x.667^inv(x.668)
        z.2   = verify(signature.346,
                       <'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                        x.667^inv((~ecdhSk.337*x.668)), %1, 
                        <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>, None, 
                        Just(encap(z.352, pqpk(~kemSk.340))), Just(preKeyHash.344)>,
                       theirIdPk.350)
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.667^inv(x.668), '0'), z.352),
                                      <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    49. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = encap(z.352, pqpk(~kemSk.340))
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = signature.346
        theirEcdhPk
              = x.667^(x.668*inv(~ecdhSk.337))
        theirIdPk
              = theirIdPk.350
        z     = z.352
        z.1   = x.667^x.668
        z.2   = verify(signature.346,
                       <'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                        x.667^(x.668*inv(~ecdhSk.337)), %1, 
                        <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>, None, 
                        Just(encap(z.352, pqpk(~kemSk.340))), Just(preKeyHash.344)>,
                       theirIdPk.350)
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.667^x.668, '0'), z.352),
                                      <$Them.336, theirIdPk.350, $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    50. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = encap(z.352, pqpk(~kemSk.340))
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = sign(<'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                      x.666^x.667, %1, <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>, 
                      None, Just(encap(z.352, pqpk(~kemSk.340))), Just(preKeyHash.344)>,
                     x.668)
        theirEcdhPk
              = x.666^x.667
        theirIdPk
              = pk(x.668)
        z     = z.352
        z.1   = x.666^(~ecdhSk.337*x.667)
        z.2   = true
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.666^(~ecdhSk.337*x.667), '0'), z.352),
                                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    51. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = encap(z.352, pqpk(~kemSk.340))
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = sign(<'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                      x.666^inv((~ecdhSk.337*x.667)), %1, 
                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>, None, 
                      Just(encap(z.352, pqpk(~kemSk.340))), Just(preKeyHash.344)>,
                     x.668)
        theirEcdhPk
              = x.666^inv((~ecdhSk.337*x.667))
        theirIdPk
              = pk(x.668)
        z     = z.352
        z.1   = x.666^inv(x.667)
        z.2   = true
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.666^inv(x.667), '0'), z.352),
                                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    52. $Me   = $Me.335
        $Them = $Them.336
        ~ecdhSk
              = ~ecdhSk.337
        ~idKey
              = ~idKey.339
        ~kemSk
              = ~kemSk.340
        ciphertext
              = ciphertext.341
        kemEncap
              = encap(z.352, pqpk(~kemSk.340))
        msgKeyIndicator
              = msgKeyIndicator.343
        preKeyHash
              = preKeyHash.344
        signature
              = sign(<'msg_sig', ciphertext.341, msgKeyIndicator.343, 
                      x.666^(x.667*inv(~ecdhSk.337)), %1, 
                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>, None, 
                      Just(encap(z.352, pqpk(~kemSk.340))), Just(preKeyHash.344)>,
                     x.668)
        theirEcdhPk
              = x.666^(x.667*inv(~ecdhSk.337))
        theirIdPk
              = pk(x.668)
        z     = z.352
        z.1   = x.666^x.667
        z.2   = true
        z.3   = sdec(ciphertext.341,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.666^x.667, '0'), z.352),
                                      <$Them.336, pk(x.668), $Me.335, pk(~idKey.339)>)),
                          'msg_key'))
    
    53. $Me   = $Me.336
        $Them = $Them.337
        ~ecdhSk
              = ~ecdhSk.338
        ~idKey
              = ~idKey.340
        ~kemSk
              = ~kemSk.341
        ciphertext
              = ciphertext.342
        kemEncap
              = kemEncap.343
        msgKeyIndicator
              = msgKeyIndicator.344
        preKeyHash
              = preKeyHash.345
        signature
              = signature.347
        theirEcdhPk
              = x.668^(x.669*inv((~ecdhSk.338*x.670)))
        theirIdPk
              = theirIdPk.351
        z     = decap(kemEncap.343, ~kemSk.341)
        z.1   = x.668^(x.669*inv(x.670))
        z.2   = verify(signature.347,
                       <'msg_sig', ciphertext.342, msgKeyIndicator.344, 
                        x.668^(x.669*inv((~ecdhSk.338*x.670))), %1, 
                        <$Them.337, theirIdPk.351, $Me.336, pk(~idKey.340)>, None, 
                        Just(kemEncap.343), Just(preKeyHash.345)>,
                       theirIdPk.351)
        z.3   = sdec(ciphertext.342,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.668^(x.669*inv(x.670)), '0'),
                                           decap(kemEncap.343, ~kemSk.341)),
                                      <$Them.337, theirIdPk.351, $Me.336, pk(~idKey.340)>)),
                          'msg_key'))
    
    54. $Me   = $Me.336
        $Them = $Them.337
        ~ecdhSk
              = ~ecdhSk.338
        ~idKey
              = ~idKey.340
        ~kemSk
              = ~kemSk.341
        ciphertext
              = ciphertext.342
        kemEncap
              = kemEncap.343
        msgKeyIndicator
              = msgKeyIndicator.344
        preKeyHash
              = preKeyHash.345
        signature
              = sign(<'msg_sig', ciphertext.342, msgKeyIndicator.344, 
                      x.667^(x.668*inv((~ecdhSk.338*x.669))), %1, 
                      <$Them.337, pk(x.670), $Me.336, pk(~idKey.340)>, None, 
                      Just(kemEncap.343), Just(preKeyHash.345)>,
                     x.670)
        theirEcdhPk
              = x.667^(x.668*inv((~ecdhSk.338*x.669)))
        theirIdPk
              = pk(x.670)
        z     = decap(kemEncap.343, ~kemSk.341)
        z.1   = x.667^(x.668*inv(x.669))
        z.2   = true
        z.3   = sdec(ciphertext.342,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.667^(x.668*inv(x.669)), '0'),
                                           decap(kemEncap.343, ~kemSk.341)),
                                      <$Them.337, pk(x.670), $Me.336, pk(~idKey.340)>)),
                          'msg_key'))
    
    55. $Me   = $Me.336
        $Them = $Them.337
        ~ecdhSk
              = ~ecdhSk.338
        ~idKey
              = ~idKey.340
        ~kemSk
              = ~kemSk.341
        ciphertext
              = ciphertext.342
        kemEncap
              = encap(z.353, pqpk(~kemSk.341))
        msgKeyIndicator
              = msgKeyIndicator.344
        preKeyHash
              = preKeyHash.345
        signature
              = signature.347
        theirEcdhPk
              = x.668^(x.669*inv((~ecdhSk.338*x.670)))
        theirIdPk
              = theirIdPk.351
        z     = z.353
        z.1   = x.668^(x.669*inv(x.670))
        z.2   = verify(signature.347,
                       <'msg_sig', ciphertext.342, msgKeyIndicator.344, 
                        x.668^(x.669*inv((~ecdhSk.338*x.670))), %1, 
                        <$Them.337, theirIdPk.351, $Me.336, pk(~idKey.340)>, None, 
                        Just(encap(z.353, pqpk(~kemSk.341))), Just(preKeyHash.345)>,
                       theirIdPk.351)
        z.3   = sdec(ciphertext.342,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.668^(x.669*inv(x.670)), '0'), z.353),
                                      <$Them.337, theirIdPk.351, $Me.336, pk(~idKey.340)>)),
                          'msg_key'))
    
    56. $Me   = $Me.336
        $Them = $Them.337
        ~ecdhSk
              = ~ecdhSk.338
        ~idKey
              = ~idKey.340
        ~kemSk
              = ~kemSk.341
        ciphertext
              = ciphertext.342
        kemEncap
              = encap(z.353, pqpk(~kemSk.341))
        msgKeyIndicator
              = msgKeyIndicator.344
        preKeyHash
              = preKeyHash.345
        signature
              = sign(<'msg_sig', ciphertext.342, msgKeyIndicator.344, 
                      x.667^(x.668*inv((~ecdhSk.338*x.669))), %1, 
                      <$Them.337, pk(x.670), $Me.336, pk(~idKey.340)>, None, 
                      Just(encap(z.353, pqpk(~kemSk.341))), Just(preKeyHash.345)>,
                     x.670)
        theirEcdhPk
              = x.667^(x.668*inv((~ecdhSk.338*x.669)))
        theirIdPk
              = pk(x.670)
        z     = z.353
        z.1   = x.667^(x.668*inv(x.669))
        z.2   = true
        z.3   = sdec(ciphertext.342,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.667^(x.668*inv(x.669)), '0'), z.353),
                                      <$Them.337, pk(x.670), $Me.336, pk(~idKey.340)>)),
                          'msg_key'))
  */

rule (modulo E) ReceiveSymmetricRatchet[color=#ff7f50]:
   [
   !IdentityKey( $Me, ~idKey ),
   Session( ~id, %i, 'R', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
            theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
            rootKey, chainKey
   ),
   In( <ciphertext, signature, theirEcdhPk, (%i%+%1), 
        msgKeyIndicator, None, None, None>
   )
   ]
  --[
  PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
  Neq( theirEcdhPk, 'g' ),
  Eq( msgKeyIndicator, hkdf(hkdf(chainKey, 'msg_key'), 'msg_key_ind')
  ),
  Eq( verify(signature,
             <'msg_sig', ciphertext, msgKeyIndicator, theirEcdhPk, (%i%+%1), 
              <$Them, theirIdPk, $Me, pk(~idKey)>, None, None, None>,
             theirIdPk),
      true
  ),
  SessionInfo( ~id, (%i%+%1), $Me, $Them ),
  MessageReceived( ~id, (%i%+%1), $Them, $Me,
                   sdec(ciphertext, hkdf(chainKey, 'msg_key'))
  ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk, chainKey,
                  hkdf(chainKey, 'msg_key')
  ),
  SymmetricRatchet( ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            pqpk(~kemSk), maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
            rootKey, chainKey, hkdf(chainKey, 'msg_key')
  )
  ]->
   [
   Session( ~id, (%i%+%1), 'R', $Me, ~ecdhSk, ~kemSk, $Them,
            theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS,
            encapPk, rootKey, hkdf(chainKey, 'chain_key')
   ),
   !ChainKey( ~id, (%i%+%1), $Me, chainKey ),
   !MessageKey( ~id, (%i%+%1), $Me, hkdf(chainKey, 'msg_key') )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) ReceiveSymmetricRatchet[color=#ff7f50]:
     [
     !IdentityKey( $Me, ~idKey ),
     Session( ~id, %i, 'R', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
              theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
              rootKey, chainKey
     ),
     In( <ciphertext, signature, theirEcdhPk, (%i%+%1), 
          msgKeyIndicator, None, None, None>
     )
     ]
    --[
    PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
    Neq( theirEcdhPk, 'g' ),
    Eq( msgKeyIndicator, hkdf(hkdf(chainKey, 'msg_key'), 'msg_key_ind')
    ),
    Eq( z, true ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
    MessageReceived( ~id, (%i%+%1), $Them, $Me, z.1 ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk, chainKey,
                    hkdf(chainKey, 'msg_key')
    ),
    SymmetricRatchet( ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z.2, pqpk(~kemSk),
              maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk, rootKey,
              chainKey, hkdf(chainKey, 'msg_key')
    )
    ]->
     [
     Session( ~id, (%i%+%1), 'R', $Me, ~ecdhSk, ~kemSk, $Them,
              theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS,
              encapPk, rootKey, hkdf(chainKey, 'chain_key')
     ),
     !ChainKey( ~id, (%i%+%1), $Me, chainKey ),
     !MessageKey( ~id, (%i%+%1), $Me, hkdf(chainKey, 'msg_key') )
     ]
    variants (modulo AC)
     1. $Me   = $Me.46
        $Them = $Them.47
        ~ecdhSk
              = ~ecdhSk.48
        ~idKey
              = ~idKey.50
        chainKey
              = chainKey.52
        ciphertext
              = ciphertext.53
        msgKeyIndicator
              = msgKeyIndicator.58
        signature
              = signature.60
        theirEcdhPk
              = theirEcdhPk.61
        theirIdPk
              = theirIdPk.62
        z     = verify(signature.60,
                       <'msg_sig', ciphertext.53, msgKeyIndicator.58, theirEcdhPk.61, 
                        (%i.63%+%1), <$Them.47, theirIdPk.62, $Me.46, pk(~idKey.50)>, 
                        None, None, None>,
                       theirIdPk.62)
        %i    = %i.63
        z.1   = sdec(ciphertext.53, hkdf(chainKey.52, 'msg_key'))
        z.2   = theirEcdhPk.61^~ecdhSk.48
    
     2. $Me   = $Me.46
        $Them = $Them.47
        ~idKey
              = ~idKey.50
        chainKey
              = chainKey.52
        ciphertext
              = ciphertext.53
        msgKeyIndicator
              = msgKeyIndicator.58
        signature
              = signature.60
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.62
        z     = verify(signature.60,
                       <'msg_sig', ciphertext.53, msgKeyIndicator.58, DH_neutral, 
                        (%i.63%+%1), <$Them.47, theirIdPk.62, $Me.46, pk(~idKey.50)>, 
                        None, None, None>,
                       theirIdPk.62)
        %i    = %i.63
        z.1   = sdec(ciphertext.53, hkdf(chainKey.52, 'msg_key'))
        z.2   = DH_neutral
    
     3. $Me   = $Me.53
        $Them = $Them.54
        ~ecdhSk
              = ~ecdhSk.55
        ~idKey
              = ~idKey.57
        chainKey
              = chainKey.59
        ciphertext
              = senc(z.77, hkdf(chainKey.59, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.65
        signature
              = signature.67
        theirEcdhPk
              = theirEcdhPk.68
        theirIdPk
              = theirIdPk.69
        z     = verify(signature.67,
                       <'msg_sig', senc(z.77, hkdf(chainKey.59, 'msg_key')), 
                        msgKeyIndicator.65, theirEcdhPk.68, (%i.70%+%1), 
                        <$Them.54, theirIdPk.69, $Me.53, pk(~idKey.57)>, None, None, None>,
                       theirIdPk.69)
        %i    = %i.70
        z.1   = z.77
        z.2   = theirEcdhPk.68^~ecdhSk.55
    
     4. $Me   = $Me.53
        $Them = $Them.54
        ~idKey
              = ~idKey.57
        chainKey
              = chainKey.59
        ciphertext
              = senc(z.77, hkdf(chainKey.59, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.65
        signature
              = signature.67
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.69
        z     = verify(signature.67,
                       <'msg_sig', senc(z.77, hkdf(chainKey.59, 'msg_key')), 
                        msgKeyIndicator.65, DH_neutral, (%i.70%+%1), 
                        <$Them.54, theirIdPk.69, $Me.53, pk(~idKey.57)>, None, None, None>,
                       theirIdPk.69)
        %i    = %i.70
        z.1   = z.77
        z.2   = DH_neutral
    
     5. $Me   = $Me.55
        $Them = $Them.56
        ~ecdhSk
              = ~ecdhSk.57
        ~idKey
              = ~idKey.59
        chainKey
              = chainKey.61
        ciphertext
              = ciphertext.62
        msgKeyIndicator
              = msgKeyIndicator.67
        signature
              = signature.69
        theirEcdhPk
              = z.81^inv(~ecdhSk.57)
        theirIdPk
              = theirIdPk.71
        z     = verify(signature.69,
                       <'msg_sig', ciphertext.62, msgKeyIndicator.67, 
                        z.81^inv(~ecdhSk.57), (%i.72%+%1), 
                        <$Them.56, theirIdPk.71, $Me.55, pk(~idKey.59)>, None, None, None>,
                       theirIdPk.71)
        %i    = %i.72
        z.1   = sdec(ciphertext.62, hkdf(chainKey.61, 'msg_key'))
        z.2   = z.81
    
     6. $Me   = $Me.55
        $Them = $Them.56
        ~ecdhSk
              = ~ecdhSk.57
        ~idKey
              = ~idKey.59
        chainKey
              = chainKey.61
        ciphertext
              = senc(z.79, hkdf(chainKey.61, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.67
        signature
              = signature.69
        theirEcdhPk
              = z.81^inv(~ecdhSk.57)
        theirIdPk
              = theirIdPk.71
        z     = verify(signature.69,
                       <'msg_sig', senc(z.79, hkdf(chainKey.61, 'msg_key')), 
                        msgKeyIndicator.67, z.81^inv(~ecdhSk.57), (%i.72%+%1), 
                        <$Them.56, theirIdPk.71, $Me.55, pk(~idKey.59)>, None, None, None>,
                       theirIdPk.71)
        %i    = %i.72
        z.1   = z.79
        z.2   = z.81
    
     7. $Me   = $Me.258
        $Them = $Them.259
        ~ecdhSk
              = ~ecdhSk.260
        ~idKey
              = ~idKey.262
        chainKey
              = chainKey.264
        ciphertext
              = ciphertext.265
        msgKeyIndicator
              = msgKeyIndicator.270
        signature
              = signature.272
        theirEcdhPk
              = x.513^x.514
        theirIdPk
              = theirIdPk.274
        z     = verify(signature.272,
                       <'msg_sig', ciphertext.265, msgKeyIndicator.270, x.513^x.514, 
                        (%i.275%+%1), <$Them.259, theirIdPk.274, $Me.258, pk(~idKey.262)>, 
                        None, None, None>,
                       theirIdPk.274)
        %i    = %i.275
        z.1   = sdec(ciphertext.265, hkdf(chainKey.264, 'msg_key'))
        z.2   = x.513^(~ecdhSk.260*x.514)
    
     8. $Me   = $Me.267
        $Them = $Them.268
        ~ecdhSk
              = ~ecdhSk.269
        ~idKey
              = ~idKey.271
        chainKey
              = chainKey.273
        ciphertext
              = senc(z.291, hkdf(chainKey.273, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.279
        signature
              = signature.281
        theirEcdhPk
              = x.531^x.532
        theirIdPk
              = theirIdPk.283
        z     = verify(signature.281,
                       <'msg_sig', senc(z.291, hkdf(chainKey.273, 'msg_key')), 
                        msgKeyIndicator.279, x.531^x.532, (%i.284%+%1), 
                        <$Them.268, theirIdPk.283, $Me.267, pk(~idKey.271)>, None, None, 
                        None>,
                       theirIdPk.283)
        %i    = %i.284
        z.1   = z.291
        z.2   = x.531^(~ecdhSk.269*x.532)
    
     9. $Me   = $Me.271
        $Them = $Them.272
        ~ecdhSk
              = ~ecdhSk.273
        ~idKey
              = ~idKey.275
        chainKey
              = chainKey.277
        ciphertext
              = ciphertext.278
        msgKeyIndicator
              = msgKeyIndicator.283
        signature
              = signature.285
        theirEcdhPk
              = x.539^inv((~ecdhSk.273*x.540))
        theirIdPk
              = theirIdPk.287
        z     = verify(signature.285,
                       <'msg_sig', ciphertext.278, msgKeyIndicator.283, 
                        x.539^inv((~ecdhSk.273*x.540)), (%i.288%+%1), 
                        <$Them.272, theirIdPk.287, $Me.271, pk(~idKey.275)>, None, None, 
                        None>,
                       theirIdPk.287)
        %i    = %i.288
        z.1   = sdec(ciphertext.278, hkdf(chainKey.277, 'msg_key'))
        z.2   = x.539^inv(x.540)
    
    10. $Me   = $Me.271
        $Them = $Them.272
        ~ecdhSk
              = ~ecdhSk.273
        ~idKey
              = ~idKey.275
        chainKey
              = chainKey.277
        ciphertext
              = ciphertext.278
        msgKeyIndicator
              = msgKeyIndicator.283
        signature
              = signature.285
        theirEcdhPk
              = x.539^(x.540*inv(~ecdhSk.273))
        theirIdPk
              = theirIdPk.287
        z     = verify(signature.285,
                       <'msg_sig', ciphertext.278, msgKeyIndicator.283, 
                        x.539^(x.540*inv(~ecdhSk.273)), (%i.288%+%1), 
                        <$Them.272, theirIdPk.287, $Me.271, pk(~idKey.275)>, None, None, 
                        None>,
                       theirIdPk.287)
        %i    = %i.288
        z.1   = sdec(ciphertext.278, hkdf(chainKey.277, 'msg_key'))
        z.2   = x.539^x.540
    
    11. $Me   = $Me.271
        $Them = $Them.272
        ~ecdhSk
              = ~ecdhSk.273
        ~idKey
              = ~idKey.275
        chainKey
              = chainKey.277
        ciphertext
              = senc(z.295, hkdf(chainKey.277, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.283
        signature
              = signature.285
        theirEcdhPk
              = x.539^inv((~ecdhSk.273*x.540))
        theirIdPk
              = theirIdPk.287
        z     = verify(signature.285,
                       <'msg_sig', senc(z.295, hkdf(chainKey.277, 'msg_key')), 
                        msgKeyIndicator.283, x.539^inv((~ecdhSk.273*x.540)), (%i.288%+%1), 
                        <$Them.272, theirIdPk.287, $Me.271, pk(~idKey.275)>, None, None, 
                        None>,
                       theirIdPk.287)
        %i    = %i.288
        z.1   = z.295
        z.2   = x.539^inv(x.540)
    
    12. $Me   = $Me.271
        $Them = $Them.272
        ~ecdhSk
              = ~ecdhSk.273
        ~idKey
              = ~idKey.275
        chainKey
              = chainKey.277
        ciphertext
              = senc(z.295, hkdf(chainKey.277, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.283
        signature
              = signature.285
        theirEcdhPk
              = x.539^(x.540*inv(~ecdhSk.273))
        theirIdPk
              = theirIdPk.287
        z     = verify(signature.285,
                       <'msg_sig', senc(z.295, hkdf(chainKey.277, 'msg_key')), 
                        msgKeyIndicator.283, x.539^(x.540*inv(~ecdhSk.273)), (%i.288%+%1), 
                        <$Them.272, theirIdPk.287, $Me.271, pk(~idKey.275)>, None, None, 
                        None>,
                       theirIdPk.287)
        %i    = %i.288
        z.1   = z.295
        z.2   = x.539^x.540
    
    13. $Me   = $Me.272
        $Them = $Them.273
        ~ecdhSk
              = ~ecdhSk.274
        ~idKey
              = ~idKey.276
        chainKey
              = chainKey.278
        ciphertext
              = ciphertext.279
        msgKeyIndicator
              = msgKeyIndicator.284
        signature
              = signature.286
        theirEcdhPk
              = x.540^(x.541*inv((~ecdhSk.274*x.542)))
        theirIdPk
              = theirIdPk.288
        z     = verify(signature.286,
                       <'msg_sig', ciphertext.279, msgKeyIndicator.284, 
                        x.540^(x.541*inv((~ecdhSk.274*x.542))), (%i.289%+%1), 
                        <$Them.273, theirIdPk.288, $Me.272, pk(~idKey.276)>, None, None, 
                        None>,
                       theirIdPk.288)
        %i    = %i.289
        z.1   = sdec(ciphertext.279, hkdf(chainKey.278, 'msg_key'))
        z.2   = x.540^(x.541*inv(x.542))
    
    14. $Me   = $Me.272
        $Them = $Them.273
        ~ecdhSk
              = ~ecdhSk.274
        ~idKey
              = ~idKey.276
        chainKey
              = chainKey.278
        ciphertext
              = senc(z.296, hkdf(chainKey.278, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.284
        signature
              = signature.286
        theirEcdhPk
              = x.540^(x.541*inv((~ecdhSk.274*x.542)))
        theirIdPk
              = theirIdPk.288
        z     = verify(signature.286,
                       <'msg_sig', senc(z.296, hkdf(chainKey.278, 'msg_key')), 
                        msgKeyIndicator.284, x.540^(x.541*inv((~ecdhSk.274*x.542))), 
                        (%i.289%+%1), <$Them.273, theirIdPk.288, $Me.272, pk(~idKey.276)>, 
                        None, None, None>,
                       theirIdPk.288)
        %i    = %i.289
        z.1   = z.296
        z.2   = x.540^(x.541*inv(x.542))
    
    15. $Me   = $Me.272
        $Them = $Them.273
        ~idKey
              = ~idKey.276
        chainKey
              = chainKey.278
        ciphertext
              = ciphertext.279
        msgKeyIndicator
              = msgKeyIndicator.284
        signature
              = sign(<'msg_sig', ciphertext.279, msgKeyIndicator.284, 
                      DH_neutral, (%i.289%+%1), 
                      <$Them.273, pk(x.542), $Me.272, pk(~idKey.276)>, None, None, None>,
                     x.542)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.542)
        z     = true
        %i    = %i.289
        z.1   = sdec(ciphertext.279, hkdf(chainKey.278, 'msg_key'))
        z.2   = DH_neutral
    
    16. $Me   = $Me.272
        $Them = $Them.273
        ~idKey
              = ~idKey.276
        chainKey
              = chainKey.278
        ciphertext
              = senc(z.296, hkdf(chainKey.278, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.284
        signature
              = sign(<'msg_sig', senc(z.296, hkdf(chainKey.278, 'msg_key')), 
                      msgKeyIndicator.284, DH_neutral, (%i.289%+%1), 
                      <$Them.273, pk(x.542), $Me.272, pk(~idKey.276)>, None, None, None>,
                     x.542)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.542)
        z     = true
        %i    = %i.289
        z.1   = z.296
        z.2   = DH_neutral
    
    17. $Me   = $Me.273
        $Them = $Them.274
        ~ecdhSk
              = ~ecdhSk.275
        ~idKey
              = ~idKey.277
        chainKey
              = chainKey.279
        ciphertext
              = ciphertext.280
        msgKeyIndicator
              = msgKeyIndicator.285
        signature
              = sign(<'msg_sig', ciphertext.280, msgKeyIndicator.285, 
                      theirEcdhPk.288, (%i.290%+%1), 
                      <$Them.274, pk(x.544), $Me.273, pk(~idKey.277)>, None, None, None>,
                     x.544)
        theirEcdhPk
              = theirEcdhPk.288
        theirIdPk
              = pk(x.544)
        z     = true
        %i    = %i.290
        z.1   = sdec(ciphertext.280, hkdf(chainKey.279, 'msg_key'))
        z.2   = theirEcdhPk.288^~ecdhSk.275
    
    18. $Me   = $Me.273
        $Them = $Them.274
        ~ecdhSk
              = ~ecdhSk.275
        ~idKey
              = ~idKey.277
        chainKey
              = chainKey.279
        ciphertext
              = ciphertext.280
        msgKeyIndicator
              = msgKeyIndicator.285
        signature
              = sign(<'msg_sig', ciphertext.280, msgKeyIndicator.285, 
                      z.299^inv(~ecdhSk.275), (%i.290%+%1), 
                      <$Them.274, pk(x.544), $Me.273, pk(~idKey.277)>, None, None, None>,
                     x.544)
        theirEcdhPk
              = z.299^inv(~ecdhSk.275)
        theirIdPk
              = pk(x.544)
        z     = true
        %i    = %i.290
        z.1   = sdec(ciphertext.280, hkdf(chainKey.279, 'msg_key'))
        z.2   = z.299
    
    19. $Me   = $Me.273
        $Them = $Them.274
        ~ecdhSk
              = ~ecdhSk.275
        ~idKey
              = ~idKey.277
        chainKey
              = chainKey.279
        ciphertext
              = senc(z.297, hkdf(chainKey.279, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.285
        signature
              = sign(<'msg_sig', senc(z.297, hkdf(chainKey.279, 'msg_key')), 
                      msgKeyIndicator.285, theirEcdhPk.288, (%i.290%+%1), 
                      <$Them.274, pk(x.544), $Me.273, pk(~idKey.277)>, None, None, None>,
                     x.544)
        theirEcdhPk
              = theirEcdhPk.288
        theirIdPk
              = pk(x.544)
        z     = true
        %i    = %i.290
        z.1   = z.297
        z.2   = theirEcdhPk.288^~ecdhSk.275
    
    20. $Me   = $Me.273
        $Them = $Them.274
        ~ecdhSk
              = ~ecdhSk.275
        ~idKey
              = ~idKey.277
        chainKey
              = chainKey.279
        ciphertext
              = senc(z.297, hkdf(chainKey.279, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.285
        signature
              = sign(<'msg_sig', senc(z.297, hkdf(chainKey.279, 'msg_key')), 
                      msgKeyIndicator.285, z.299^inv(~ecdhSk.275), (%i.290%+%1), 
                      <$Them.274, pk(x.544), $Me.273, pk(~idKey.277)>, None, None, None>,
                     x.544)
        theirEcdhPk
              = z.299^inv(~ecdhSk.275)
        theirIdPk
              = pk(x.544)
        z     = true
        %i    = %i.290
        z.1   = z.297
        z.2   = z.299
    
    21. $Me   = $Me.274
        $Them = $Them.275
        ~ecdhSk
              = ~ecdhSk.276
        ~idKey
              = ~idKey.278
        chainKey
              = chainKey.280
        ciphertext
              = ciphertext.281
        msgKeyIndicator
              = msgKeyIndicator.286
        signature
              = sign(<'msg_sig', ciphertext.281, msgKeyIndicator.286, 
                      x.543^x.544, (%i.291%+%1), 
                      <$Them.275, pk(x.546), $Me.274, pk(~idKey.278)>, None, None, None>,
                     x.546)
        theirEcdhPk
              = x.543^x.544
        theirIdPk
              = pk(x.546)
        z     = true
        %i    = %i.291
        z.1   = sdec(ciphertext.281, hkdf(chainKey.280, 'msg_key'))
        z.2   = x.543^(~ecdhSk.276*x.544)
    
    22. $Me   = $Me.274
        $Them = $Them.275
        ~ecdhSk
              = ~ecdhSk.276
        ~idKey
              = ~idKey.278
        chainKey
              = chainKey.280
        ciphertext
              = ciphertext.281
        msgKeyIndicator
              = msgKeyIndicator.286
        signature
              = sign(<'msg_sig', ciphertext.281, msgKeyIndicator.286, 
                      x.543^inv((~ecdhSk.276*x.544)), (%i.291%+%1), 
                      <$Them.275, pk(x.546), $Me.274, pk(~idKey.278)>, None, None, None>,
                     x.546)
        theirEcdhPk
              = x.543^inv((~ecdhSk.276*x.544))
        theirIdPk
              = pk(x.546)
        z     = true
        %i    = %i.291
        z.1   = sdec(ciphertext.281, hkdf(chainKey.280, 'msg_key'))
        z.2   = x.543^inv(x.544)
    
    23. $Me   = $Me.274
        $Them = $Them.275
        ~ecdhSk
              = ~ecdhSk.276
        ~idKey
              = ~idKey.278
        chainKey
              = chainKey.280
        ciphertext
              = ciphertext.281
        msgKeyIndicator
              = msgKeyIndicator.286
        signature
              = sign(<'msg_sig', ciphertext.281, msgKeyIndicator.286, 
                      x.543^(x.544*inv(~ecdhSk.276)), (%i.291%+%1), 
                      <$Them.275, pk(x.546), $Me.274, pk(~idKey.278)>, None, None, None>,
                     x.546)
        theirEcdhPk
              = x.543^(x.544*inv(~ecdhSk.276))
        theirIdPk
              = pk(x.546)
        z     = true
        %i    = %i.291
        z.1   = sdec(ciphertext.281, hkdf(chainKey.280, 'msg_key'))
        z.2   = x.543^x.544
    
    24. $Me   = $Me.274
        $Them = $Them.275
        ~ecdhSk
              = ~ecdhSk.276
        ~idKey
              = ~idKey.278
        chainKey
              = chainKey.280
        ciphertext
              = senc(z.298, hkdf(chainKey.280, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.286
        signature
              = sign(<'msg_sig', senc(z.298, hkdf(chainKey.280, 'msg_key')), 
                      msgKeyIndicator.286, x.543^x.544, (%i.291%+%1), 
                      <$Them.275, pk(x.546), $Me.274, pk(~idKey.278)>, None, None, None>,
                     x.546)
        theirEcdhPk
              = x.543^x.544
        theirIdPk
              = pk(x.546)
        z     = true
        %i    = %i.291
        z.1   = z.298
        z.2   = x.543^(~ecdhSk.276*x.544)
    
    25. $Me   = $Me.274
        $Them = $Them.275
        ~ecdhSk
              = ~ecdhSk.276
        ~idKey
              = ~idKey.278
        chainKey
              = chainKey.280
        ciphertext
              = senc(z.298, hkdf(chainKey.280, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.286
        signature
              = sign(<'msg_sig', senc(z.298, hkdf(chainKey.280, 'msg_key')), 
                      msgKeyIndicator.286, x.543^inv((~ecdhSk.276*x.544)), (%i.291%+%1), 
                      <$Them.275, pk(x.546), $Me.274, pk(~idKey.278)>, None, None, None>,
                     x.546)
        theirEcdhPk
              = x.543^inv((~ecdhSk.276*x.544))
        theirIdPk
              = pk(x.546)
        z     = true
        %i    = %i.291
        z.1   = z.298
        z.2   = x.543^inv(x.544)
    
    26. $Me   = $Me.274
        $Them = $Them.275
        ~ecdhSk
              = ~ecdhSk.276
        ~idKey
              = ~idKey.278
        chainKey
              = chainKey.280
        ciphertext
              = senc(z.298, hkdf(chainKey.280, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.286
        signature
              = sign(<'msg_sig', senc(z.298, hkdf(chainKey.280, 'msg_key')), 
                      msgKeyIndicator.286, x.543^(x.544*inv(~ecdhSk.276)), (%i.291%+%1), 
                      <$Them.275, pk(x.546), $Me.274, pk(~idKey.278)>, None, None, None>,
                     x.546)
        theirEcdhPk
              = x.543^(x.544*inv(~ecdhSk.276))
        theirIdPk
              = pk(x.546)
        z     = true
        %i    = %i.291
        z.1   = z.298
        z.2   = x.543^x.544
    
    27. $Me   = $Me.275
        $Them = $Them.276
        ~ecdhSk
              = ~ecdhSk.277
        ~idKey
              = ~idKey.279
        chainKey
              = chainKey.281
        ciphertext
              = ciphertext.282
        msgKeyIndicator
              = msgKeyIndicator.287
        signature
              = sign(<'msg_sig', ciphertext.282, msgKeyIndicator.287, 
                      x.544^(x.545*inv((~ecdhSk.277*x.546))), (%i.292%+%1), 
                      <$Them.276, pk(x.548), $Me.275, pk(~idKey.279)>, None, None, None>,
                     x.548)
        theirEcdhPk
              = x.544^(x.545*inv((~ecdhSk.277*x.546)))
        theirIdPk
              = pk(x.548)
        z     = true
        %i    = %i.292
        z.1   = sdec(ciphertext.282, hkdf(chainKey.281, 'msg_key'))
        z.2   = x.544^(x.545*inv(x.546))
    
    28. $Me   = $Me.275
        $Them = $Them.276
        ~ecdhSk
              = ~ecdhSk.277
        ~idKey
              = ~idKey.279
        chainKey
              = chainKey.281
        ciphertext
              = senc(z.299, hkdf(chainKey.281, 'msg_key'))
        msgKeyIndicator
              = msgKeyIndicator.287
        signature
              = sign(<'msg_sig', senc(z.299, hkdf(chainKey.281, 'msg_key')), 
                      msgKeyIndicator.287, x.544^(x.545*inv((~ecdhSk.277*x.546))), 
                      (%i.292%+%1), <$Them.276, pk(x.548), $Me.275, pk(~idKey.279)>, 
                      None, None, None>,
                     x.548)
        theirEcdhPk
              = x.544^(x.545*inv((~ecdhSk.277*x.546)))
        theirIdPk
              = pk(x.548)
        z     = true
        %i    = %i.292
        z.1   = z.299
        z.2   = x.544^(x.545*inv(x.546))
    // loop breaker: [1]
  */

rule (modulo E) SomeFreshKemSk[color=#6495ed]:
   [ Fr( ~newKemSk ) ]
  --[ PrePQAttack( ) ]->
   [
   NewKemKey( $Me, $Them, Just(~newKemSk), Just(pqpk(~newKemSk)) ),
   !KemKey( $Me, ~newKemSk )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoFreshKemSk[color=#6495ed]:
   [ ] --[ PrePQAttack( ) ]-> [ NewKemKey( $Me, $Them, None, None ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) PublicKeyRatchetNewSenderSomeNewKemSS[color=#b4d9ef]:
   [
   Fr( ~ecdhSk ), Fr( ~kemSS ), Fr( ~msg ),
   !IdentityKey( $Me, ~idKey ),
   Session( ~id, %i, 'R', $Me, discard0, ~oldKemSk, $Them, theirIdPk,
            theirEcdhPk, discard1, Just(theirKemPk), discard2, discard3,
            rootKey, discard4
   ),
   NewKemKey( $Me, $Them, maybeNewKemSk, maybeMyNewKemPk )
   ]
  --[
  PrePQAttack( ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
  PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk,
                    theirEcdhPk^~ecdhSk, default(maybeMyNewKemPk, pqpk(~oldKemSk)),
                    Just(theirKemPk), None, ~kemSS, theirKemPk,
                    prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                                <$Me, pk(~idKey), $Them, theirIdPk>))
  ),
  PKRatchet( ), ToSender( ),
  MessageSent( ~id, (%i%+%1), $Me, $Them, ~msg ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, ~kemSS, theirKemPk,
                  suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                              <$Me, pk(~idKey), $Them, theirIdPk>)),
                  hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                                   <$Me, pk(~idKey), $Them, theirIdPk>)),
                       'msg_key')
  ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            default(maybeMyNewKemPk, pqpk(~oldKemSk)), Just(theirKemPk), None,
            ~kemSS, theirKemPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                             <$Me, pk(~idKey), $Them, theirIdPk>)),
                 'msg_key')
  ),
  ECDHKeyGen( ~id, $Me, $Them, 'g'^~ecdhSk ),
  KemKeyGen( ~id, $Me, $Them, maybeMyNewKemPk ),
  NewKemSS( ~id, $Me, $Them, ~kemSS, theirKemPk ),
  PublicKeyRatchetNewSender( ~id, (%i%+%1), $Me, $Them,
                             hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                                  <$Me, pk(~idKey), $Them, theirIdPk>)
  )
  ]->
   [
   Out( <
         senc(~msg,
              hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key')), 
         sign(<'msg_sig', 
               senc(~msg,
                    hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key')), 
               hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                          ~kemSS),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key'),
                    'msg_key_ind'), 
               'g'^~ecdhSk, (%i%+%1), <$Me, pk(~idKey), $Them, theirIdPk>, 
               maybeMyNewKemPk, Just(encap(~kemSS, theirKemPk)), None>,
              ~idKey), 
         'g'^~ecdhSk, (%i%+%1), 
         hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                    ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key'),
              'msg_key_ind'), 
         maybeMyNewKemPk, Just(encap(~kemSS, theirKemPk)), None>
   ),
   Session( ~id, (%i%+%1), 'S', $Me, ~ecdhSk,
            default(maybeNewKemSk, ~oldKemSk), $Them, theirIdPk, theirEcdhPk,
            Just(theirKemPk), None, ~kemSS, theirKemPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                             <$Me, pk(~idKey), $Them, theirIdPk>)),
                 'chain_key')
   ),
   Out( 'g'^~ecdhSk ), !NonPQSecKey( ~ecdhSk ),
   !RootKey( ~id, (%i%+%1), $Me, ~kemSS,
             prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                         <$Me, pk(~idKey), $Them, theirIdPk>))
   ),
   !ChainKey( ~id, (%i%+%1), $Me,
              suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>))
   ),
   !MessageKey( ~id, (%i%+%1), $Me,
                hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), ~kemSS),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key')
   ),
   !ECDHKey( ~id, $Me, ~ecdhSk )
   ]

  /*
  rule (modulo AC) PublicKeyRatchetNewSenderSomeNewKemSS[color=#b4d9ef]:
     [
     Fr( ~ecdhSk ), Fr( ~kemSS ), Fr( ~msg ),
     !IdentityKey( $Me, ~idKey ),
     Session( ~id, %i, 'R', $Me, discard0, ~oldKemSk, $Them, theirIdPk,
              theirEcdhPk, discard1, Just(theirKemPk), discard2, discard3,
              rootKey, discard4
     ),
     NewKemKey( $Me, $Them, maybeNewKemSk, maybeMyNewKemPk )
     ]
    --[
    PrePQAttack( ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
    PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, z.2,
                      Just(theirKemPk), None, ~kemSS, theirKemPk,
                      prefix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                  <$Me, pk(~idKey), $Them, theirIdPk>))
    ),
    PKRatchet( ), ToSender( ),
    MessageSent( ~id, (%i%+%1), $Me, $Them, ~msg ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, ~kemSS, theirKemPk,
                    suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                <$Me, pk(~idKey), $Them, theirIdPk>)),
                    hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key')
    ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, z.2,
              Just(theirKemPk), None, ~kemSS, theirKemPk,
              prefix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key')
    ),
    ECDHKeyGen( ~id, $Me, $Them, 'g'^~ecdhSk ),
    KemKeyGen( ~id, $Me, $Them, maybeMyNewKemPk ),
    NewKemSS( ~id, $Me, $Them, ~kemSS, theirKemPk ),
    PublicKeyRatchetNewSender( ~id, (%i%+%1), $Me, $Them,
                               hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                    <$Me, pk(~idKey), $Them, theirIdPk>)
    )
    ]->
     [
     Out( <
           senc(~msg,
                hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key')), 
           sign(<'msg_sig', 
                 senc(~msg,
                      hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                       <$Me, pk(~idKey), $Them, theirIdPk>)),
                           'msg_key')), 
                 hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                       <$Me, pk(~idKey), $Them, theirIdPk>)),
                           'msg_key'),
                      'msg_key_ind'), 
                 'g'^~ecdhSk, (%i%+%1), <$Me, pk(~idKey), $Them, theirIdPk>, 
                 maybeMyNewKemPk, Just(encap(~kemSS, theirKemPk)), None>,
                ~idKey), 
           'g'^~ecdhSk, (%i%+%1), 
           hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key'),
                'msg_key_ind'), 
           maybeMyNewKemPk, Just(encap(~kemSS, theirKemPk)), None>
     ),
     Session( ~id, (%i%+%1), 'S', $Me, ~ecdhSk, z.1, $Them, theirIdPk,
              theirEcdhPk, Just(theirKemPk), None, ~kemSS, theirKemPk,
              prefix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'chain_key')
     ),
     Out( 'g'^~ecdhSk ), !NonPQSecKey( ~ecdhSk ),
     !RootKey( ~id, (%i%+%1), $Me, ~kemSS,
               prefix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                           <$Me, pk(~idKey), $Them, theirIdPk>))
     ),
     !ChainKey( ~id, (%i%+%1), $Me,
                suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                            <$Me, pk(~idKey), $Them, theirIdPk>))
     ),
     !MessageKey( ~id, (%i%+%1), $Me,
                  hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                   <$Me, pk(~idKey), $Them, theirIdPk>)),
                       'msg_key')
     ),
     !ECDHKey( ~id, $Me, ~ecdhSk )
     ]
    variants (modulo AC)
     1. ~ecdhSk
              = ~ecdhSk.46
        ~oldKemSk
              = ~oldKemSk.51
        maybeMyNewKemPk
              = maybeMyNewKemPk.57
        maybeNewKemSk
              = maybeNewKemSk.58
        theirEcdhPk
              = theirEcdhPk.60
        z     = theirEcdhPk.60^~ecdhSk.46
        z.1   = default(maybeNewKemSk.58, ~oldKemSk.51)
        z.2   = default(maybeMyNewKemPk.57, pqpk(~oldKemSk.51))
    
     2. ~ecdhSk
              = ~ecdhSk.46
        ~oldKemSk
              = ~oldKemSk.51
        maybeMyNewKemPk
              = maybeMyNewKemPk.57
        maybeNewKemSk
              = None
        theirEcdhPk
              = theirEcdhPk.60
        z     = theirEcdhPk.60^~ecdhSk.46
        z.1   = ~oldKemSk.51
        z.2   = default(maybeMyNewKemPk.57, pqpk(~oldKemSk.51))
    
     3. ~ecdhSk
              = ~ecdhSk.46
        ~oldKemSk
              = ~oldKemSk.51
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.58
        theirEcdhPk
              = theirEcdhPk.60
        z     = theirEcdhPk.60^~ecdhSk.46
        z.1   = default(maybeNewKemSk.58, ~oldKemSk.51)
        z.2   = pqpk(~oldKemSk.51)
    
     4. ~ecdhSk
              = ~ecdhSk.46
        ~oldKemSk
              = ~oldKemSk.51
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = theirEcdhPk.60
        z     = theirEcdhPk.60^~ecdhSk.46
        z.1   = ~oldKemSk.51
        z.2   = pqpk(~oldKemSk.51)
    
     5. ~ecdhSk
              = ~ecdhSk.51
        ~oldKemSk
              = ~oldKemSk.56
        maybeMyNewKemPk
              = maybeMyNewKemPk.62
        maybeNewKemSk
              = maybeNewKemSk.63
        theirEcdhPk
              = z.70^inv(~ecdhSk.51)
        z     = z.70
        z.1   = default(maybeNewKemSk.63, ~oldKemSk.56)
        z.2   = default(maybeMyNewKemPk.62, pqpk(~oldKemSk.56))
    
     6. ~ecdhSk
              = ~ecdhSk.51
        ~oldKemSk
              = ~oldKemSk.56
        maybeMyNewKemPk
              = maybeMyNewKemPk.62
        maybeNewKemSk
              = None
        theirEcdhPk
              = z.70^inv(~ecdhSk.51)
        z     = z.70
        z.1   = ~oldKemSk.56
        z.2   = default(maybeMyNewKemPk.62, pqpk(~oldKemSk.56))
    
     7. ~ecdhSk
              = ~ecdhSk.51
        ~oldKemSk
              = ~oldKemSk.56
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.63
        theirEcdhPk
              = z.70^inv(~ecdhSk.51)
        z     = z.70
        z.1   = default(maybeNewKemSk.63, ~oldKemSk.56)
        z.2   = pqpk(~oldKemSk.56)
    
     8. ~ecdhSk
              = ~ecdhSk.51
        ~oldKemSk
              = ~oldKemSk.56
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = z.70^inv(~ecdhSk.51)
        z     = z.70
        z.1   = ~oldKemSk.56
        z.2   = pqpk(~oldKemSk.56)
    
     9. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.62
        maybeMyNewKemPk
              = maybeMyNewKemPk.68
        maybeNewKemSk
              = Just(z.82)
        theirEcdhPk
              = theirEcdhPk.71
        z     = theirEcdhPk.71^~ecdhSk.57
        z.1   = z.82
        z.2   = default(maybeMyNewKemPk.68, pqpk(~oldKemSk.62))
    
    10. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.62
        maybeMyNewKemPk
              = maybeMyNewKemPk.68
        maybeNewKemSk
              = Just(z.82)
        theirEcdhPk
              = z.76^inv(~ecdhSk.57)
        z     = z.76
        z.1   = z.82
        z.2   = default(maybeMyNewKemPk.68, pqpk(~oldKemSk.62))
    
    11. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.62
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.82)
        theirEcdhPk
              = theirEcdhPk.71
        z     = theirEcdhPk.71^~ecdhSk.57
        z.1   = z.82
        z.2   = pqpk(~oldKemSk.62)
    
    12. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.62
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.82)
        theirEcdhPk
              = z.76^inv(~ecdhSk.57)
        z     = z.76
        z.1   = z.82
        z.2   = pqpk(~oldKemSk.62)
    
    13. ~ecdhSk
              = ~ecdhSk.59
        ~oldKemSk
              = ~oldKemSk.64
        maybeMyNewKemPk
              = Just(z.86)
        maybeNewKemSk
              = maybeNewKemSk.71
        theirEcdhPk
              = theirEcdhPk.73
        z     = theirEcdhPk.73^~ecdhSk.59
        z.1   = default(maybeNewKemSk.71, ~oldKemSk.64)
        z.2   = z.86
    
    14. ~ecdhSk
              = ~ecdhSk.59
        ~oldKemSk
              = ~oldKemSk.64
        maybeMyNewKemPk
              = Just(z.86)
        maybeNewKemSk
              = maybeNewKemSk.71
        theirEcdhPk
              = z.78^inv(~ecdhSk.59)
        z     = z.78
        z.1   = default(maybeNewKemSk.71, ~oldKemSk.64)
        z.2   = z.86
    
    15. ~ecdhSk
              = ~ecdhSk.59
        ~oldKemSk
              = ~oldKemSk.64
        maybeMyNewKemPk
              = Just(z.86)
        maybeNewKemSk
              = None
        theirEcdhPk
              = theirEcdhPk.73
        z     = theirEcdhPk.73^~ecdhSk.59
        z.1   = ~oldKemSk.64
        z.2   = z.86
    
    16. ~ecdhSk
              = ~ecdhSk.59
        ~oldKemSk
              = ~oldKemSk.64
        maybeMyNewKemPk
              = Just(z.86)
        maybeNewKemSk
              = None
        theirEcdhPk
              = z.78^inv(~ecdhSk.59)
        z     = z.78
        z.1   = ~oldKemSk.64
        z.2   = z.86
    
    17. ~ecdhSk
              = ~ecdhSk.59
        maybeMyNewKemPk
              = Just(z.86)
        maybeNewKemSk
              = Just(z.84)
        theirEcdhPk
              = theirEcdhPk.73
        z     = theirEcdhPk.73^~ecdhSk.59
        z.1   = z.84
        z.2   = z.86
    
    18. ~ecdhSk
              = ~ecdhSk.59
        maybeMyNewKemPk
              = Just(z.86)
        maybeNewKemSk
              = Just(z.84)
        theirEcdhPk
              = z.78^inv(~ecdhSk.59)
        z     = z.78
        z.1   = z.84
        z.2   = z.86
    
    19. ~ecdhSk
              = ~ecdhSk.300
        ~oldKemSk
              = ~oldKemSk.305
        maybeMyNewKemPk
              = maybeMyNewKemPk.311
        maybeNewKemSk
              = maybeNewKemSk.312
        theirEcdhPk
              = x.595^x.596
        z     = x.595^(~ecdhSk.300*x.596)
        z.1   = default(maybeNewKemSk.312, ~oldKemSk.305)
        z.2   = default(maybeMyNewKemPk.311, pqpk(~oldKemSk.305))
    
    20. ~ecdhSk
              = ~ecdhSk.300
        ~oldKemSk
              = ~oldKemSk.305
        maybeMyNewKemPk
              = maybeMyNewKemPk.311
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.595^x.596
        z     = x.595^(~ecdhSk.300*x.596)
        z.1   = ~oldKemSk.305
        z.2   = default(maybeMyNewKemPk.311, pqpk(~oldKemSk.305))
    
    21. ~ecdhSk
              = ~ecdhSk.300
        ~oldKemSk
              = ~oldKemSk.305
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.312
        theirEcdhPk
              = x.595^x.596
        z     = x.595^(~ecdhSk.300*x.596)
        z.1   = default(maybeNewKemSk.312, ~oldKemSk.305)
        z.2   = pqpk(~oldKemSk.305)
    
    22. ~ecdhSk
              = ~ecdhSk.300
        ~oldKemSk
              = ~oldKemSk.305
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.595^x.596
        z     = x.595^(~ecdhSk.300*x.596)
        z.1   = ~oldKemSk.305
        z.2   = pqpk(~oldKemSk.305)
    
    23. ~ecdhSk
              = ~ecdhSk.302
        ~oldKemSk
              = ~oldKemSk.307
        maybeMyNewKemPk
              = maybeMyNewKemPk.313
        maybeNewKemSk
              = Just(z.327)
        theirEcdhPk
              = x.599^x.600
        z     = x.599^(~ecdhSk.302*x.600)
        z.1   = z.327
        z.2   = default(maybeMyNewKemPk.313, pqpk(~oldKemSk.307))
    
    24. ~ecdhSk
              = ~ecdhSk.302
        ~oldKemSk
              = ~oldKemSk.307
        maybeMyNewKemPk
              = Just(z.329)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.599^x.600
        z     = x.599^(~ecdhSk.302*x.600)
        z.1   = ~oldKemSk.307
        z.2   = z.329
    
    25. ~ecdhSk
              = ~ecdhSk.302
        ~oldKemSk
              = ~oldKemSk.307
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.327)
        theirEcdhPk
              = x.599^x.600
        z     = x.599^(~ecdhSk.302*x.600)
        z.1   = z.327
        z.2   = pqpk(~oldKemSk.307)
    
    26. ~ecdhSk
              = ~ecdhSk.303
        ~oldKemSk
              = ~oldKemSk.308
        maybeMyNewKemPk
              = Just(z.330)
        maybeNewKemSk
              = maybeNewKemSk.315
        theirEcdhPk
              = x.601^x.602
        z     = x.601^(~ecdhSk.303*x.602)
        z.1   = default(maybeNewKemSk.315, ~oldKemSk.308)
        z.2   = z.330
    
    27. ~ecdhSk
              = ~ecdhSk.303
        maybeMyNewKemPk
              = Just(z.330)
        maybeNewKemSk
              = Just(z.328)
        theirEcdhPk
              = x.601^x.602
        z     = x.601^(~ecdhSk.303*x.602)
        z.1   = z.328
        z.2   = z.330
    
    28. ~ecdhSk
              = ~ecdhSk.312
        ~oldKemSk
              = ~oldKemSk.317
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.619^inv((~ecdhSk.312*x.620))
        z     = x.619^inv(x.620)
        z.1   = ~oldKemSk.317
        z.2   = pqpk(~oldKemSk.317)
    
    29. ~ecdhSk
              = ~ecdhSk.312
        ~oldKemSk
              = ~oldKemSk.317
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.619^(x.620*inv(~ecdhSk.312))
        z     = x.619^x.620
        z.1   = ~oldKemSk.317
        z.2   = pqpk(~oldKemSk.317)
    
    30. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = maybeMyNewKemPk.324
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.621^inv((~ecdhSk.313*x.622))
        z     = x.621^inv(x.622)
        z.1   = ~oldKemSk.318
        z.2   = default(maybeMyNewKemPk.324, pqpk(~oldKemSk.318))
    
    31. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = maybeMyNewKemPk.324
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.621^(x.622*inv(~ecdhSk.313))
        z     = x.621^x.622
        z.1   = ~oldKemSk.318
        z.2   = default(maybeMyNewKemPk.324, pqpk(~oldKemSk.318))
    
    32. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = Just(z.340)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.621^inv((~ecdhSk.313*x.622))
        z     = x.621^inv(x.622)
        z.1   = ~oldKemSk.318
        z.2   = z.340
    
    33. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = Just(z.340)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.621^(x.622*inv(~ecdhSk.313))
        z     = x.621^x.622
        z.1   = ~oldKemSk.318
        z.2   = z.340
    
    34. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.325
        theirEcdhPk
              = x.621^inv((~ecdhSk.313*x.622))
        z     = x.621^inv(x.622)
        z.1   = default(maybeNewKemSk.325, ~oldKemSk.318)
        z.2   = pqpk(~oldKemSk.318)
    
    35. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.325
        theirEcdhPk
              = x.621^(x.622*inv(~ecdhSk.313))
        z     = x.621^x.622
        z.1   = default(maybeNewKemSk.325, ~oldKemSk.318)
        z.2   = pqpk(~oldKemSk.318)
    
    36. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.338)
        theirEcdhPk
              = x.621^inv((~ecdhSk.313*x.622))
        z     = x.621^inv(x.622)
        z.1   = z.338
        z.2   = pqpk(~oldKemSk.318)
    
    37. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.338)
        theirEcdhPk
              = x.621^(x.622*inv(~ecdhSk.313))
        z     = x.621^x.622
        z.1   = z.338
        z.2   = pqpk(~oldKemSk.318)
    
    38. ~ecdhSk
              = ~ecdhSk.313
        ~oldKemSk
              = ~oldKemSk.318
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.620^(x.621*inv((~ecdhSk.313*x.622)))
        z     = x.620^(x.621*inv(x.622))
        z.1   = ~oldKemSk.318
        z.2   = pqpk(~oldKemSk.318)
    
    39. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = maybeMyNewKemPk.325
        maybeNewKemSk
              = maybeNewKemSk.326
        theirEcdhPk
              = x.623^inv((~ecdhSk.314*x.624))
        z     = x.623^inv(x.624)
        z.1   = default(maybeNewKemSk.326, ~oldKemSk.319)
        z.2   = default(maybeMyNewKemPk.325, pqpk(~oldKemSk.319))
    
    40. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = maybeMyNewKemPk.325
        maybeNewKemSk
              = maybeNewKemSk.326
        theirEcdhPk
              = x.623^(x.624*inv(~ecdhSk.314))
        z     = x.623^x.624
        z.1   = default(maybeNewKemSk.326, ~oldKemSk.319)
        z.2   = default(maybeMyNewKemPk.325, pqpk(~oldKemSk.319))
    
    41. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = maybeMyNewKemPk.325
        maybeNewKemSk
              = Just(z.339)
        theirEcdhPk
              = x.623^inv((~ecdhSk.314*x.624))
        z     = x.623^inv(x.624)
        z.1   = z.339
        z.2   = default(maybeMyNewKemPk.325, pqpk(~oldKemSk.319))
    
    42. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = maybeMyNewKemPk.325
        maybeNewKemSk
              = Just(z.339)
        theirEcdhPk
              = x.623^(x.624*inv(~ecdhSk.314))
        z     = x.623^x.624
        z.1   = z.339
        z.2   = default(maybeMyNewKemPk.325, pqpk(~oldKemSk.319))
    
    43. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = maybeMyNewKemPk.325
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.622^(x.623*inv((~ecdhSk.314*x.624)))
        z     = x.622^(x.623*inv(x.624))
        z.1   = ~oldKemSk.319
        z.2   = default(maybeMyNewKemPk.325, pqpk(~oldKemSk.319))
    
    44. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = Just(z.341)
        maybeNewKemSk
              = maybeNewKemSk.326
        theirEcdhPk
              = x.623^inv((~ecdhSk.314*x.624))
        z     = x.623^inv(x.624)
        z.1   = default(maybeNewKemSk.326, ~oldKemSk.319)
        z.2   = z.341
    
    45. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = Just(z.341)
        maybeNewKemSk
              = maybeNewKemSk.326
        theirEcdhPk
              = x.623^(x.624*inv(~ecdhSk.314))
        z     = x.623^x.624
        z.1   = default(maybeNewKemSk.326, ~oldKemSk.319)
        z.2   = z.341
    
    46. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = Just(z.341)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.622^(x.623*inv((~ecdhSk.314*x.624)))
        z     = x.622^(x.623*inv(x.624))
        z.1   = ~oldKemSk.319
        z.2   = z.341
    
    47. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.326
        theirEcdhPk
              = x.622^(x.623*inv((~ecdhSk.314*x.624)))
        z     = x.622^(x.623*inv(x.624))
        z.1   = default(maybeNewKemSk.326, ~oldKemSk.319)
        z.2   = pqpk(~oldKemSk.319)
    
    48. ~ecdhSk
              = ~ecdhSk.314
        ~oldKemSk
              = ~oldKemSk.319
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.339)
        theirEcdhPk
              = x.622^(x.623*inv((~ecdhSk.314*x.624)))
        z     = x.622^(x.623*inv(x.624))
        z.1   = z.339
        z.2   = pqpk(~oldKemSk.319)
    
    49. ~ecdhSk
              = ~ecdhSk.314
        maybeMyNewKemPk
              = Just(z.341)
        maybeNewKemSk
              = Just(z.339)
        theirEcdhPk
              = x.623^inv((~ecdhSk.314*x.624))
        z     = x.623^inv(x.624)
        z.1   = z.339
        z.2   = z.341
    
    50. ~ecdhSk
              = ~ecdhSk.314
        maybeMyNewKemPk
              = Just(z.341)
        maybeNewKemSk
              = Just(z.339)
        theirEcdhPk
              = x.623^(x.624*inv(~ecdhSk.314))
        z     = x.623^x.624
        z.1   = z.339
        z.2   = z.341
    
    51. ~ecdhSk
              = ~ecdhSk.315
        ~oldKemSk
              = ~oldKemSk.320
        maybeMyNewKemPk
              = maybeMyNewKemPk.326
        maybeNewKemSk
              = maybeNewKemSk.327
        theirEcdhPk
              = x.624^(x.625*inv((~ecdhSk.315*x.626)))
        z     = x.624^(x.625*inv(x.626))
        z.1   = default(maybeNewKemSk.327, ~oldKemSk.320)
        z.2   = default(maybeMyNewKemPk.326, pqpk(~oldKemSk.320))
    
    52. ~ecdhSk
              = ~ecdhSk.315
        ~oldKemSk
              = ~oldKemSk.320
        maybeMyNewKemPk
              = maybeMyNewKemPk.326
        maybeNewKemSk
              = Just(z.340)
        theirEcdhPk
              = x.624^(x.625*inv((~ecdhSk.315*x.626)))
        z     = x.624^(x.625*inv(x.626))
        z.1   = z.340
        z.2   = default(maybeMyNewKemPk.326, pqpk(~oldKemSk.320))
    
    53. ~ecdhSk
              = ~ecdhSk.315
        ~oldKemSk
              = ~oldKemSk.320
        maybeMyNewKemPk
              = Just(z.342)
        maybeNewKemSk
              = maybeNewKemSk.327
        theirEcdhPk
              = x.624^(x.625*inv((~ecdhSk.315*x.626)))
        z     = x.624^(x.625*inv(x.626))
        z.1   = default(maybeNewKemSk.327, ~oldKemSk.320)
        z.2   = z.342
    
    54. ~ecdhSk
              = ~ecdhSk.315
        maybeMyNewKemPk
              = Just(z.342)
        maybeNewKemSk
              = Just(z.340)
        theirEcdhPk
              = x.624^(x.625*inv((~ecdhSk.315*x.626)))
        z     = x.624^(x.625*inv(x.626))
        z.1   = z.340
        z.2   = z.342
    
    55. ~oldKemSk
              = ~oldKemSk.32
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = ~oldKemSk.32
        z.2   = pqpk(~oldKemSk.32)
    
    56. ~oldKemSk
              = ~oldKemSk.38
        maybeMyNewKemPk
              = maybeMyNewKemPk.44
        maybeNewKemSk
              = None
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = ~oldKemSk.38
        z.2   = default(maybeMyNewKemPk.44, pqpk(~oldKemSk.38))
    
    57. ~oldKemSk
              = ~oldKemSk.39
        maybeMyNewKemPk
              = maybeMyNewKemPk.45
        maybeNewKemSk
              = maybeNewKemSk.46
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = default(maybeNewKemSk.46, ~oldKemSk.39)
        z.2   = default(maybeMyNewKemPk.45, pqpk(~oldKemSk.39))
    
    58. ~oldKemSk
              = ~oldKemSk.39
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.46
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = default(maybeNewKemSk.46, ~oldKemSk.39)
        z.2   = pqpk(~oldKemSk.39)
    
    59. ~oldKemSk
              = ~oldKemSk.52
        maybeMyNewKemPk
              = maybeMyNewKemPk.58
        maybeNewKemSk
              = Just(z.72)
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = z.72
        z.2   = default(maybeMyNewKemPk.58, pqpk(~oldKemSk.52))
    
    60. ~oldKemSk
              = ~oldKemSk.52
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.72)
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = z.72
        z.2   = pqpk(~oldKemSk.52)
    
    61. ~oldKemSk
              = ~oldKemSk.54
        maybeMyNewKemPk
              = Just(z.76)
        maybeNewKemSk
              = maybeNewKemSk.61
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = default(maybeNewKemSk.61, ~oldKemSk.54)
        z.2   = z.76
    
    62. ~oldKemSk
              = ~oldKemSk.54
        maybeMyNewKemPk
              = Just(z.76)
        maybeNewKemSk
              = None
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = ~oldKemSk.54
        z.2   = z.76
    
    63. maybeMyNewKemPk
              = Just(z.36)
        maybeNewKemSk
              = Just(z.34)
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = z.34
        z.2   = z.36
  */

rule (modulo E) PublicKeyRatchetNewSenderNoNewKemSS[color=#b4d9ef]:
   [
   Fr( ~ecdhSk ), Fr( ~msg ), !IdentityKey( $Me, ~idKey ),
   Session( ~id, %i, 'R', $Me, discard0, ~oldKemSk, $Them, theirIdPk,
            theirEcdhPk, maybeTheirKemPk, None, kemSS, encapPk, rootKey,
            discard1
   ),
   NewKemKey( $Me, $Them, maybeNewKemSk, maybeMyNewKemPk )
   ]
  --[
  PrePQAttack( ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
  PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk,
                    theirEcdhPk^~ecdhSk, default(maybeMyNewKemPk, pqpk(~oldKemSk)),
                    maybeTheirKemPk, None, kemSS, encapPk,
                    prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                <$Me, pk(~idKey), $Them, theirIdPk>))
  ),
  PKRatchet( ), ToSender( ),
  MessageSent( ~id, (%i%+%1), $Me, $Them, ~msg ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk,
                  suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                              <$Me, pk(~idKey), $Them, theirIdPk>)),
                  hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                   <$Me, pk(~idKey), $Them, theirIdPk>)),
                       'msg_key')
  ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            default(maybeMyNewKemPk, pqpk(~oldKemSk)), maybeTheirKemPk, None,
            kemSS, encapPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                             <$Me, pk(~idKey), $Them, theirIdPk>)),
                 'msg_key')
  ),
  ECDHKeyGen( ~id, $Me, $Them, 'g'^~ecdhSk ),
  KemKeyGen( ~id, $Me, $Them, maybeMyNewKemPk ),
  PublicKeyRatchetNewSender( ~id, (%i%+%1), $Me, $Them,
                             hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                  <$Me, pk(~idKey), $Them, theirIdPk>)
  )
  ]->
   [
   Out( <
         senc(~msg,
              hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key')), 
         sign(<'msg_sig', 
               senc(~msg,
                    hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key')), 
               hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                          '0'),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key'),
                    'msg_key_ind'), 
               'g'^~ecdhSk, (%i%+%1), <$Me, pk(~idKey), $Them, theirIdPk>, 
               maybeMyNewKemPk, None, None>,
              ~idKey), 
         'g'^~ecdhSk, (%i%+%1), 
         hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                    '0'),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key'),
              'msg_key_ind'), 
         maybeMyNewKemPk, None, None>
   ),
   Session( ~id, (%i%+%1), 'S', $Me, ~ecdhSk,
            default(maybeNewKemSk, ~oldKemSk), $Them, theirIdPk, theirEcdhPk,
            maybeTheirKemPk, None, kemSS, encapPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                        <$Me, pk(~idKey), $Them, theirIdPk>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                             <$Me, pk(~idKey), $Them, theirIdPk>)),
                 'chain_key')
   ),
   Out( 'g'^~ecdhSk ), !NonPQSecKey( ~ecdhSk ),
   !RootKey( ~id, (%i%+%1), $Me, kemSS,
             prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                         <$Me, pk(~idKey), $Them, theirIdPk>))
   ),
   !ChainKey( ~id, (%i%+%1), $Me,
              suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                          <$Me, pk(~idKey), $Them, theirIdPk>))
   ),
   !MessageKey( ~id, (%i%+%1), $Me,
                hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key')
   ),
   !ECDHKey( ~id, $Me, ~ecdhSk )
   ]

  /*
  rule (modulo AC) PublicKeyRatchetNewSenderNoNewKemSS[color=#b4d9ef]:
     [
     Fr( ~ecdhSk ), Fr( ~msg ), !IdentityKey( $Me, ~idKey ),
     Session( ~id, %i, 'R', $Me, discard0, ~oldKemSk, $Them, theirIdPk,
              theirEcdhPk, maybeTheirKemPk, None, kemSS, encapPk, rootKey,
              discard1
     ),
     NewKemKey( $Me, $Them, maybeNewKemSk, maybeMyNewKemPk )
     ]
    --[
    PrePQAttack( ), SessionInfo( ~id, (%i%+%1), $Me, $Them ),
    PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, z.2,
                      maybeTheirKemPk, None, kemSS, encapPk,
                      prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                  <$Me, pk(~idKey), $Them, theirIdPk>))
    ),
    PKRatchet( ), ToSender( ),
    MessageSent( ~id, (%i%+%1), $Me, $Them, ~msg ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk,
                    suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                <$Me, pk(~idKey), $Them, theirIdPk>)),
                    hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                     <$Me, pk(~idKey), $Them, theirIdPk>)),
                         'msg_key')
    ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, z.2,
              maybeTheirKemPk, None, kemSS, encapPk,
              prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'msg_key')
    ),
    ECDHKeyGen( ~id, $Me, $Them, 'g'^~ecdhSk ),
    KemKeyGen( ~id, $Me, $Them, maybeMyNewKemPk ),
    PublicKeyRatchetNewSender( ~id, (%i%+%1), $Me, $Them,
                               hkdf(hkdf(hkdf(z, rootKey), '0'),
                                    <$Me, pk(~idKey), $Them, theirIdPk>)
    )
    ]->
     [
     Out( <
           senc(~msg,
                hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key')), 
           sign(<'msg_sig', 
                 senc(~msg,
                      hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                       <$Me, pk(~idKey), $Them, theirIdPk>)),
                           'msg_key')), 
                 hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                       <$Me, pk(~idKey), $Them, theirIdPk>)),
                           'msg_key'),
                      'msg_key_ind'), 
                 'g'^~ecdhSk, (%i%+%1), <$Me, pk(~idKey), $Them, theirIdPk>, 
                 maybeMyNewKemPk, None, None>,
                ~idKey), 
           'g'^~ecdhSk, (%i%+%1), 
           hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                 <$Me, pk(~idKey), $Them, theirIdPk>)),
                     'msg_key'),
                'msg_key_ind'), 
           maybeMyNewKemPk, None, None>
     ),
     Session( ~id, (%i%+%1), 'S', $Me, ~ecdhSk, z.1, $Them, theirIdPk,
              theirEcdhPk, maybeTheirKemPk, None, kemSS, encapPk,
              prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                          <$Me, pk(~idKey), $Them, theirIdPk>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                               <$Me, pk(~idKey), $Them, theirIdPk>)),
                   'chain_key')
     ),
     Out( 'g'^~ecdhSk ), !NonPQSecKey( ~ecdhSk ),
     !RootKey( ~id, (%i%+%1), $Me, kemSS,
               prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                           <$Me, pk(~idKey), $Them, theirIdPk>))
     ),
     !ChainKey( ~id, (%i%+%1), $Me,
                suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                            <$Me, pk(~idKey), $Them, theirIdPk>))
     ),
     !MessageKey( ~id, (%i%+%1), $Me,
                  hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                   <$Me, pk(~idKey), $Them, theirIdPk>)),
                       'msg_key')
     ),
     !ECDHKey( ~id, $Me, ~ecdhSk )
     ]
    variants (modulo AC)
     1. ~ecdhSk
              = ~ecdhSk.44
        ~oldKemSk
              = ~oldKemSk.48
        maybeMyNewKemPk
              = maybeMyNewKemPk.53
        maybeNewKemSk
              = maybeNewKemSk.54
        theirEcdhPk
              = theirEcdhPk.57
        z     = theirEcdhPk.57^~ecdhSk.44
        z.1   = default(maybeNewKemSk.54, ~oldKemSk.48)
        z.2   = default(maybeMyNewKemPk.53, pqpk(~oldKemSk.48))
    
     2. ~ecdhSk
              = ~ecdhSk.44
        ~oldKemSk
              = ~oldKemSk.48
        maybeMyNewKemPk
              = maybeMyNewKemPk.53
        maybeNewKemSk
              = None
        theirEcdhPk
              = theirEcdhPk.57
        z     = theirEcdhPk.57^~ecdhSk.44
        z.1   = ~oldKemSk.48
        z.2   = default(maybeMyNewKemPk.53, pqpk(~oldKemSk.48))
    
     3. ~ecdhSk
              = ~ecdhSk.44
        ~oldKemSk
              = ~oldKemSk.48
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.54
        theirEcdhPk
              = theirEcdhPk.57
        z     = theirEcdhPk.57^~ecdhSk.44
        z.1   = default(maybeNewKemSk.54, ~oldKemSk.48)
        z.2   = pqpk(~oldKemSk.48)
    
     4. ~ecdhSk
              = ~ecdhSk.44
        ~oldKemSk
              = ~oldKemSk.48
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = theirEcdhPk.57
        z     = theirEcdhPk.57^~ecdhSk.44
        z.1   = ~oldKemSk.48
        z.2   = pqpk(~oldKemSk.48)
    
     5. ~ecdhSk
              = ~ecdhSk.48
        ~oldKemSk
              = ~oldKemSk.52
        maybeMyNewKemPk
              = maybeMyNewKemPk.57
        maybeNewKemSk
              = maybeNewKemSk.58
        theirEcdhPk
              = z.65^inv(~ecdhSk.48)
        z     = z.65
        z.1   = default(maybeNewKemSk.58, ~oldKemSk.52)
        z.2   = default(maybeMyNewKemPk.57, pqpk(~oldKemSk.52))
    
     6. ~ecdhSk
              = ~ecdhSk.48
        ~oldKemSk
              = ~oldKemSk.52
        maybeMyNewKemPk
              = maybeMyNewKemPk.57
        maybeNewKemSk
              = None
        theirEcdhPk
              = z.65^inv(~ecdhSk.48)
        z     = z.65
        z.1   = ~oldKemSk.52
        z.2   = default(maybeMyNewKemPk.57, pqpk(~oldKemSk.52))
    
     7. ~ecdhSk
              = ~ecdhSk.48
        ~oldKemSk
              = ~oldKemSk.52
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.58
        theirEcdhPk
              = z.65^inv(~ecdhSk.48)
        z     = z.65
        z.1   = default(maybeNewKemSk.58, ~oldKemSk.52)
        z.2   = pqpk(~oldKemSk.52)
    
     8. ~ecdhSk
              = ~ecdhSk.48
        ~oldKemSk
              = ~oldKemSk.52
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = z.65^inv(~ecdhSk.48)
        z     = z.65
        z.1   = ~oldKemSk.52
        z.2   = pqpk(~oldKemSk.52)
    
     9. ~ecdhSk
              = ~ecdhSk.55
        ~oldKemSk
              = ~oldKemSk.59
        maybeMyNewKemPk
              = maybeMyNewKemPk.64
        maybeNewKemSk
              = Just(z.79)
        theirEcdhPk
              = theirEcdhPk.68
        z     = theirEcdhPk.68^~ecdhSk.55
        z.1   = z.79
        z.2   = default(maybeMyNewKemPk.64, pqpk(~oldKemSk.59))
    
    10. ~ecdhSk
              = ~ecdhSk.55
        ~oldKemSk
              = ~oldKemSk.59
        maybeMyNewKemPk
              = maybeMyNewKemPk.64
        maybeNewKemSk
              = Just(z.79)
        theirEcdhPk
              = z.72^inv(~ecdhSk.55)
        z     = z.72
        z.1   = z.79
        z.2   = default(maybeMyNewKemPk.64, pqpk(~oldKemSk.59))
    
    11. ~ecdhSk
              = ~ecdhSk.55
        ~oldKemSk
              = ~oldKemSk.59
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.79)
        theirEcdhPk
              = theirEcdhPk.68
        z     = theirEcdhPk.68^~ecdhSk.55
        z.1   = z.79
        z.2   = pqpk(~oldKemSk.59)
    
    12. ~ecdhSk
              = ~ecdhSk.55
        ~oldKemSk
              = ~oldKemSk.59
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.79)
        theirEcdhPk
              = z.72^inv(~ecdhSk.55)
        z     = z.72
        z.1   = z.79
        z.2   = pqpk(~oldKemSk.59)
    
    13. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.61
        maybeMyNewKemPk
              = Just(z.83)
        maybeNewKemSk
              = maybeNewKemSk.67
        theirEcdhPk
              = theirEcdhPk.70
        z     = theirEcdhPk.70^~ecdhSk.57
        z.1   = default(maybeNewKemSk.67, ~oldKemSk.61)
        z.2   = z.83
    
    14. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.61
        maybeMyNewKemPk
              = Just(z.83)
        maybeNewKemSk
              = maybeNewKemSk.67
        theirEcdhPk
              = z.74^inv(~ecdhSk.57)
        z     = z.74
        z.1   = default(maybeNewKemSk.67, ~oldKemSk.61)
        z.2   = z.83
    
    15. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.61
        maybeMyNewKemPk
              = Just(z.83)
        maybeNewKemSk
              = None
        theirEcdhPk
              = theirEcdhPk.70
        z     = theirEcdhPk.70^~ecdhSk.57
        z.1   = ~oldKemSk.61
        z.2   = z.83
    
    16. ~ecdhSk
              = ~ecdhSk.57
        ~oldKemSk
              = ~oldKemSk.61
        maybeMyNewKemPk
              = Just(z.83)
        maybeNewKemSk
              = None
        theirEcdhPk
              = z.74^inv(~ecdhSk.57)
        z     = z.74
        z.1   = ~oldKemSk.61
        z.2   = z.83
    
    17. ~ecdhSk
              = ~ecdhSk.57
        maybeMyNewKemPk
              = Just(z.83)
        maybeNewKemSk
              = Just(z.81)
        theirEcdhPk
              = theirEcdhPk.70
        z     = theirEcdhPk.70^~ecdhSk.57
        z.1   = z.81
        z.2   = z.83
    
    18. ~ecdhSk
              = ~ecdhSk.57
        maybeMyNewKemPk
              = Just(z.83)
        maybeNewKemSk
              = Just(z.81)
        theirEcdhPk
              = z.74^inv(~ecdhSk.57)
        z     = z.74
        z.1   = z.81
        z.2   = z.83
    
    19. ~ecdhSk
              = ~ecdhSk.318
        ~oldKemSk
              = ~oldKemSk.322
        maybeMyNewKemPk
              = maybeMyNewKemPk.327
        maybeNewKemSk
              = maybeNewKemSk.328
        theirEcdhPk
              = x.631^x.632
        z     = x.631^(~ecdhSk.318*x.632)
        z.1   = default(maybeNewKemSk.328, ~oldKemSk.322)
        z.2   = default(maybeMyNewKemPk.327, pqpk(~oldKemSk.322))
    
    20. ~ecdhSk
              = ~ecdhSk.318
        ~oldKemSk
              = ~oldKemSk.322
        maybeMyNewKemPk
              = maybeMyNewKemPk.327
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.631^x.632
        z     = x.631^(~ecdhSk.318*x.632)
        z.1   = ~oldKemSk.322
        z.2   = default(maybeMyNewKemPk.327, pqpk(~oldKemSk.322))
    
    21. ~ecdhSk
              = ~ecdhSk.318
        ~oldKemSk
              = ~oldKemSk.322
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.328
        theirEcdhPk
              = x.631^x.632
        z     = x.631^(~ecdhSk.318*x.632)
        z.1   = default(maybeNewKemSk.328, ~oldKemSk.322)
        z.2   = pqpk(~oldKemSk.322)
    
    22. ~ecdhSk
              = ~ecdhSk.318
        ~oldKemSk
              = ~oldKemSk.322
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.631^x.632
        z     = x.631^(~ecdhSk.318*x.632)
        z.1   = ~oldKemSk.322
        z.2   = pqpk(~oldKemSk.322)
    
    23. ~ecdhSk
              = ~ecdhSk.321
        ~oldKemSk
              = ~oldKemSk.325
        maybeMyNewKemPk
              = maybeMyNewKemPk.330
        maybeNewKemSk
              = Just(z.345)
        theirEcdhPk
              = x.637^x.638
        z     = x.637^(~ecdhSk.321*x.638)
        z.1   = z.345
        z.2   = default(maybeMyNewKemPk.330, pqpk(~oldKemSk.325))
    
    24. ~ecdhSk
              = ~ecdhSk.321
        ~oldKemSk
              = ~oldKemSk.325
        maybeMyNewKemPk
              = Just(z.347)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.637^x.638
        z     = x.637^(~ecdhSk.321*x.638)
        z.1   = ~oldKemSk.325
        z.2   = z.347
    
    25. ~ecdhSk
              = ~ecdhSk.321
        ~oldKemSk
              = ~oldKemSk.325
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.345)
        theirEcdhPk
              = x.637^x.638
        z     = x.637^(~ecdhSk.321*x.638)
        z.1   = z.345
        z.2   = pqpk(~oldKemSk.325)
    
    26. ~ecdhSk
              = ~ecdhSk.322
        ~oldKemSk
              = ~oldKemSk.326
        maybeMyNewKemPk
              = Just(z.348)
        maybeNewKemSk
              = maybeNewKemSk.332
        theirEcdhPk
              = x.639^x.640
        z     = x.639^(~ecdhSk.322*x.640)
        z.1   = default(maybeNewKemSk.332, ~oldKemSk.326)
        z.2   = z.348
    
    27. ~ecdhSk
              = ~ecdhSk.322
        maybeMyNewKemPk
              = Just(z.348)
        maybeNewKemSk
              = Just(z.346)
        theirEcdhPk
              = x.639^x.640
        z     = x.639^(~ecdhSk.322*x.640)
        z.1   = z.346
        z.2   = z.348
    
    28. ~ecdhSk
              = ~ecdhSk.329
        ~oldKemSk
              = ~oldKemSk.333
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.653^inv((~ecdhSk.329*x.654))
        z     = x.653^inv(x.654)
        z.1   = ~oldKemSk.333
        z.2   = pqpk(~oldKemSk.333)
    
    29. ~ecdhSk
              = ~ecdhSk.329
        ~oldKemSk
              = ~oldKemSk.333
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.653^(x.654*inv(~ecdhSk.329))
        z     = x.653^x.654
        z.1   = ~oldKemSk.333
        z.2   = pqpk(~oldKemSk.333)
    
    30. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = maybeMyNewKemPk.339
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.655^inv((~ecdhSk.330*x.656))
        z     = x.655^inv(x.656)
        z.1   = ~oldKemSk.334
        z.2   = default(maybeMyNewKemPk.339, pqpk(~oldKemSk.334))
    
    31. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = maybeMyNewKemPk.339
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.655^(x.656*inv(~ecdhSk.330))
        z     = x.655^x.656
        z.1   = ~oldKemSk.334
        z.2   = default(maybeMyNewKemPk.339, pqpk(~oldKemSk.334))
    
    32. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = Just(z.356)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.655^inv((~ecdhSk.330*x.656))
        z     = x.655^inv(x.656)
        z.1   = ~oldKemSk.334
        z.2   = z.356
    
    33. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = Just(z.356)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.655^(x.656*inv(~ecdhSk.330))
        z     = x.655^x.656
        z.1   = ~oldKemSk.334
        z.2   = z.356
    
    34. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.340
        theirEcdhPk
              = x.655^inv((~ecdhSk.330*x.656))
        z     = x.655^inv(x.656)
        z.1   = default(maybeNewKemSk.340, ~oldKemSk.334)
        z.2   = pqpk(~oldKemSk.334)
    
    35. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.340
        theirEcdhPk
              = x.655^(x.656*inv(~ecdhSk.330))
        z     = x.655^x.656
        z.1   = default(maybeNewKemSk.340, ~oldKemSk.334)
        z.2   = pqpk(~oldKemSk.334)
    
    36. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.354)
        theirEcdhPk
              = x.655^inv((~ecdhSk.330*x.656))
        z     = x.655^inv(x.656)
        z.1   = z.354
        z.2   = pqpk(~oldKemSk.334)
    
    37. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.354)
        theirEcdhPk
              = x.655^(x.656*inv(~ecdhSk.330))
        z     = x.655^x.656
        z.1   = z.354
        z.2   = pqpk(~oldKemSk.334)
    
    38. ~ecdhSk
              = ~ecdhSk.330
        ~oldKemSk
              = ~oldKemSk.334
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.654^(x.655*inv((~ecdhSk.330*x.656)))
        z     = x.654^(x.655*inv(x.656))
        z.1   = ~oldKemSk.334
        z.2   = pqpk(~oldKemSk.334)
    
    39. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = maybeMyNewKemPk.340
        maybeNewKemSk
              = maybeNewKemSk.341
        theirEcdhPk
              = x.657^inv((~ecdhSk.331*x.658))
        z     = x.657^inv(x.658)
        z.1   = default(maybeNewKemSk.341, ~oldKemSk.335)
        z.2   = default(maybeMyNewKemPk.340, pqpk(~oldKemSk.335))
    
    40. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = maybeMyNewKemPk.340
        maybeNewKemSk
              = maybeNewKemSk.341
        theirEcdhPk
              = x.657^(x.658*inv(~ecdhSk.331))
        z     = x.657^x.658
        z.1   = default(maybeNewKemSk.341, ~oldKemSk.335)
        z.2   = default(maybeMyNewKemPk.340, pqpk(~oldKemSk.335))
    
    41. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = maybeMyNewKemPk.340
        maybeNewKemSk
              = Just(z.355)
        theirEcdhPk
              = x.657^inv((~ecdhSk.331*x.658))
        z     = x.657^inv(x.658)
        z.1   = z.355
        z.2   = default(maybeMyNewKemPk.340, pqpk(~oldKemSk.335))
    
    42. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = maybeMyNewKemPk.340
        maybeNewKemSk
              = Just(z.355)
        theirEcdhPk
              = x.657^(x.658*inv(~ecdhSk.331))
        z     = x.657^x.658
        z.1   = z.355
        z.2   = default(maybeMyNewKemPk.340, pqpk(~oldKemSk.335))
    
    43. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = maybeMyNewKemPk.340
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.656^(x.657*inv((~ecdhSk.331*x.658)))
        z     = x.656^(x.657*inv(x.658))
        z.1   = ~oldKemSk.335
        z.2   = default(maybeMyNewKemPk.340, pqpk(~oldKemSk.335))
    
    44. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = Just(z.357)
        maybeNewKemSk
              = maybeNewKemSk.341
        theirEcdhPk
              = x.657^inv((~ecdhSk.331*x.658))
        z     = x.657^inv(x.658)
        z.1   = default(maybeNewKemSk.341, ~oldKemSk.335)
        z.2   = z.357
    
    45. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = Just(z.357)
        maybeNewKemSk
              = maybeNewKemSk.341
        theirEcdhPk
              = x.657^(x.658*inv(~ecdhSk.331))
        z     = x.657^x.658
        z.1   = default(maybeNewKemSk.341, ~oldKemSk.335)
        z.2   = z.357
    
    46. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = Just(z.357)
        maybeNewKemSk
              = None
        theirEcdhPk
              = x.656^(x.657*inv((~ecdhSk.331*x.658)))
        z     = x.656^(x.657*inv(x.658))
        z.1   = ~oldKemSk.335
        z.2   = z.357
    
    47. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.341
        theirEcdhPk
              = x.656^(x.657*inv((~ecdhSk.331*x.658)))
        z     = x.656^(x.657*inv(x.658))
        z.1   = default(maybeNewKemSk.341, ~oldKemSk.335)
        z.2   = pqpk(~oldKemSk.335)
    
    48. ~ecdhSk
              = ~ecdhSk.331
        ~oldKemSk
              = ~oldKemSk.335
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.355)
        theirEcdhPk
              = x.656^(x.657*inv((~ecdhSk.331*x.658)))
        z     = x.656^(x.657*inv(x.658))
        z.1   = z.355
        z.2   = pqpk(~oldKemSk.335)
    
    49. ~ecdhSk
              = ~ecdhSk.331
        maybeMyNewKemPk
              = Just(z.357)
        maybeNewKemSk
              = Just(z.355)
        theirEcdhPk
              = x.657^inv((~ecdhSk.331*x.658))
        z     = x.657^inv(x.658)
        z.1   = z.355
        z.2   = z.357
    
    50. ~ecdhSk
              = ~ecdhSk.331
        maybeMyNewKemPk
              = Just(z.357)
        maybeNewKemSk
              = Just(z.355)
        theirEcdhPk
              = x.657^(x.658*inv(~ecdhSk.331))
        z     = x.657^x.658
        z.1   = z.355
        z.2   = z.357
    
    51. ~ecdhSk
              = ~ecdhSk.332
        ~oldKemSk
              = ~oldKemSk.336
        maybeMyNewKemPk
              = maybeMyNewKemPk.341
        maybeNewKemSk
              = maybeNewKemSk.342
        theirEcdhPk
              = x.658^(x.659*inv((~ecdhSk.332*x.660)))
        z     = x.658^(x.659*inv(x.660))
        z.1   = default(maybeNewKemSk.342, ~oldKemSk.336)
        z.2   = default(maybeMyNewKemPk.341, pqpk(~oldKemSk.336))
    
    52. ~ecdhSk
              = ~ecdhSk.332
        ~oldKemSk
              = ~oldKemSk.336
        maybeMyNewKemPk
              = maybeMyNewKemPk.341
        maybeNewKemSk
              = Just(z.356)
        theirEcdhPk
              = x.658^(x.659*inv((~ecdhSk.332*x.660)))
        z     = x.658^(x.659*inv(x.660))
        z.1   = z.356
        z.2   = default(maybeMyNewKemPk.341, pqpk(~oldKemSk.336))
    
    53. ~ecdhSk
              = ~ecdhSk.332
        ~oldKemSk
              = ~oldKemSk.336
        maybeMyNewKemPk
              = Just(z.358)
        maybeNewKemSk
              = maybeNewKemSk.342
        theirEcdhPk
              = x.658^(x.659*inv((~ecdhSk.332*x.660)))
        z     = x.658^(x.659*inv(x.660))
        z.1   = default(maybeNewKemSk.342, ~oldKemSk.336)
        z.2   = z.358
    
    54. ~ecdhSk
              = ~ecdhSk.332
        maybeMyNewKemPk
              = Just(z.358)
        maybeNewKemSk
              = Just(z.356)
        theirEcdhPk
              = x.658^(x.659*inv((~ecdhSk.332*x.660)))
        z     = x.658^(x.659*inv(x.660))
        z.1   = z.356
        z.2   = z.358
    
    55. ~oldKemSk
              = ~oldKemSk.31
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = None
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = ~oldKemSk.31
        z.2   = pqpk(~oldKemSk.31)
    
    56. ~oldKemSk
              = ~oldKemSk.36
        maybeMyNewKemPk
              = maybeMyNewKemPk.41
        maybeNewKemSk
              = None
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = ~oldKemSk.36
        z.2   = default(maybeMyNewKemPk.41, pqpk(~oldKemSk.36))
    
    57. ~oldKemSk
              = ~oldKemSk.37
        maybeMyNewKemPk
              = maybeMyNewKemPk.42
        maybeNewKemSk
              = maybeNewKemSk.43
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = default(maybeNewKemSk.43, ~oldKemSk.37)
        z.2   = default(maybeMyNewKemPk.42, pqpk(~oldKemSk.37))
    
    58. ~oldKemSk
              = ~oldKemSk.37
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = maybeNewKemSk.43
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = default(maybeNewKemSk.43, ~oldKemSk.37)
        z.2   = pqpk(~oldKemSk.37)
    
    59. ~oldKemSk
              = ~oldKemSk.51
        maybeMyNewKemPk
              = maybeMyNewKemPk.56
        maybeNewKemSk
              = Just(z.71)
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = z.71
        z.2   = default(maybeMyNewKemPk.56, pqpk(~oldKemSk.51))
    
    60. ~oldKemSk
              = ~oldKemSk.51
        maybeMyNewKemPk
              = None
        maybeNewKemSk
              = Just(z.71)
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = z.71
        z.2   = pqpk(~oldKemSk.51)
    
    61. ~oldKemSk
              = ~oldKemSk.53
        maybeMyNewKemPk
              = Just(z.75)
        maybeNewKemSk
              = maybeNewKemSk.59
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = default(maybeNewKemSk.59, ~oldKemSk.53)
        z.2   = z.75
    
    62. ~oldKemSk
              = ~oldKemSk.53
        maybeMyNewKemPk
              = Just(z.75)
        maybeNewKemSk
              = None
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = ~oldKemSk.53
        z.2   = z.75
    
    63. maybeMyNewKemPk
              = Just(z.35)
        maybeNewKemSk
              = Just(z.33)
        theirEcdhPk
              = DH_neutral
        z     = DH_neutral
        z.1   = z.33
        z.2   = z.35
  */

rule (modulo E) PublicKeyRatchetNewReceiverNoNewKemSS[color=#b4d9ef]:
   [
   !IdentityKey( $Me, ~idKey ),
   Session( ~id, %i, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
            discard1, maybeTheirKemPk, None, kemSS, encapPk, rootKey, discard2
   ),
   In( <ciphertext, signature, theirEcdhPk, (%i%+%1), 
        msgKeyIndicator, maybeTheirNewKemPk, None, None>
   )
   ]
  --[
  PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
  Neq( theirEcdhPk, 'g' ),
  Eq( verify(signature,
             <'msg_sig', ciphertext, msgKeyIndicator, theirEcdhPk, (%i%+%1), 
              <$Them, theirIdPk, $Me, pk(~idKey)>, maybeTheirNewKemPk, None, None
             >,
             theirIdPk),
      true
  ),
  Eq( msgKeyIndicator,
      hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                 '0'),
                            <$Them, theirIdPk, $Me, pk(~idKey)>)),
                'msg_key'),
           'msg_key_ind')
  ),
  SessionInfo( ~id, (%i%+%1), $Me, $Them ),
  PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk,
                    theirEcdhPk^~ecdhSk, pqpk(~kemSk), maybeTheirKemPk,
                    maybeTheirNewKemPk, kemSS, encapPk,
                    prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                <$Them, theirIdPk, $Me, pk(~idKey)>))
  ),
  PKRatchet( ), ToReceiver( ),
  NewKemPublicKey( ~id, $Me, $Them, maybeTheirNewKemPk ),
  MessageReceived( ~id, (%i%+%1), $Them, $Me,
                   sdec(ciphertext,
                        hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                         <$Them, theirIdPk, $Me, pk(~idKey)>)),
                             'msg_key'))
  ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk,
                  suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                              <$Them, theirIdPk, $Me, pk(~idKey)>)),
                  hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                   <$Them, theirIdPk, $Me, pk(~idKey)>)),
                       'msg_key')
  ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            pqpk(~kemSk), maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                             <$Them, theirIdPk, $Me, pk(~idKey)>)),
                 'msg_key')
  ),
  PublicKeyRatchetNewReceiver( ~id, (%i%+%1), $Them, $Me,
                               hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                    <$Them, theirIdPk, $Me, pk(~idKey)>)
  )
  ]->
   [
   Session( ~id, (%i%+%1), 'R', $Me, ~ecdhSk, ~kemSk, $Them,
            theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS,
            encapPk,
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                             <$Them, theirIdPk, $Me, pk(~idKey)>)),
                 'chain_key')
   ),
   !RootKey( ~id, (%i%+%1), $Me, kemSS,
             prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                         <$Them, theirIdPk, $Me, pk(~idKey)>))
   ),
   !ChainKey( ~id, (%i%+%1), $Me,
              suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                          <$Them, theirIdPk, $Me, pk(~idKey)>))
   ),
   !MessageKey( ~id, (%i%+%1), $Me,
                hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey), '0'),
                                 <$Them, theirIdPk, $Me, pk(~idKey)>)),
                     'msg_key')
   )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) PublicKeyRatchetNewReceiverNoNewKemSS[color=#b4d9ef]:
     [
     !IdentityKey( $Me, ~idKey ),
     Session( ~id, %i, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
              discard1, maybeTheirKemPk, None, kemSS, encapPk, rootKey, discard2
     ),
     In( <ciphertext, signature, theirEcdhPk, (%i%+%1), 
          msgKeyIndicator, maybeTheirNewKemPk, None, None>
     )
     ]
    --[
    PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
    Neq( theirEcdhPk, 'g' ), Eq( z.1, true ),
    Eq( msgKeyIndicator,
        hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                              <$Them, theirIdPk, $Me, pk(~idKey)>)),
                  'msg_key'),
             'msg_key_ind')
    ),
    SessionInfo( ~id, (%i%+%1), $Me, $Them ),
    PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z,
                      pqpk(~kemSk), maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
                      prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                  <$Them, theirIdPk, $Me, pk(~idKey)>))
    ),
    PKRatchet( ), ToReceiver( ),
    NewKemPublicKey( ~id, $Me, $Them, maybeTheirNewKemPk ),
    MessageReceived( ~id, (%i%+%1), $Them, $Me, z.2 ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, kemSS, encapPk,
                    suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                <$Them, theirIdPk, $Me, pk(~idKey)>)),
                    hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                     <$Them, theirIdPk, $Me, pk(~idKey)>)),
                         'msg_key')
    ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z, pqpk(~kemSk),
              maybeTheirKemPk, maybeTheirNewKemPk, kemSS, encapPk,
              prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                               <$Them, theirIdPk, $Me, pk(~idKey)>)),
                   'msg_key')
    ),
    PublicKeyRatchetNewReceiver( ~id, (%i%+%1), $Them, $Me,
                                 hkdf(hkdf(hkdf(z, rootKey), '0'),
                                      <$Them, theirIdPk, $Me, pk(~idKey)>)
    )
    ]->
     [
     Session( ~id, (%i%+%1), 'R', $Me, ~ecdhSk, ~kemSk, $Them,
              theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, kemSS,
              encapPk,
              prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                               <$Them, theirIdPk, $Me, pk(~idKey)>)),
                   'chain_key')
     ),
     !RootKey( ~id, (%i%+%1), $Me, kemSS,
               prefix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                           <$Them, theirIdPk, $Me, pk(~idKey)>))
     ),
     !ChainKey( ~id, (%i%+%1), $Me,
                suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                            <$Them, theirIdPk, $Me, pk(~idKey)>))
     ),
     !MessageKey( ~id, (%i%+%1), $Me,
                  hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                   <$Them, theirIdPk, $Me, pk(~idKey)>)),
                       'msg_key')
     )
     ]
    variants (modulo AC)
     1. $Me   = $Me.50
        $Them = $Them.51
        ~ecdhSk
              = ~ecdhSk.52
        ~idKey
              = ~idKey.54
        ciphertext
              = ciphertext.56
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.62
        msgKeyIndicator
              = msgKeyIndicator.63
        rootKey
              = rootKey.64
        signature
              = signature.65
        theirEcdhPk
              = theirEcdhPk.66
        theirIdPk
              = theirIdPk.67
        z     = theirEcdhPk.66^~ecdhSk.52
        %i    = %i.68
        z.1   = verify(signature.65,
                       <'msg_sig', ciphertext.56, msgKeyIndicator.63, theirEcdhPk.66, 
                        (%i.68%+%1), <$Them.51, theirIdPk.67, $Me.50, pk(~idKey.54)>, 
                        maybeTheirNewKemPk.62, None, None>,
                       theirIdPk.67)
        z.2   = sdec(ciphertext.56,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.66^~ecdhSk.52, rootKey.64),
                                           '0'),
                                      <$Them.51, theirIdPk.67, $Me.50, pk(~idKey.54)>)),
                          'msg_key'))
    
     2. $Me   = $Me.50
        $Them = $Them.51
        ~idKey
              = ~idKey.54
        ciphertext
              = ciphertext.56
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.62
        msgKeyIndicator
              = msgKeyIndicator.63
        rootKey
              = rootKey.64
        signature
              = signature.65
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.67
        z     = DH_neutral
        %i    = %i.68
        z.1   = verify(signature.65,
                       <'msg_sig', ciphertext.56, msgKeyIndicator.63, DH_neutral, 
                        (%i.68%+%1), <$Them.51, theirIdPk.67, $Me.50, pk(~idKey.54)>, 
                        maybeTheirNewKemPk.62, None, None>,
                       theirIdPk.67)
        z.2   = sdec(ciphertext.56,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.64), '0'),
                                      <$Them.51, theirIdPk.67, $Me.50, pk(~idKey.54)>)),
                          'msg_key'))
    
     3. $Me   = $Me.53
        $Them = $Them.54
        ~ecdhSk
              = ~ecdhSk.55
        ~idKey
              = ~idKey.57
        ciphertext
              = ciphertext.59
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.65
        msgKeyIndicator
              = msgKeyIndicator.66
        rootKey
              = rootKey.67
        signature
              = signature.68
        theirEcdhPk
              = z.74^inv(~ecdhSk.55)
        theirIdPk
              = theirIdPk.70
        z     = z.74
        %i    = %i.71
        z.1   = verify(signature.68,
                       <'msg_sig', ciphertext.59, msgKeyIndicator.66, 
                        z.74^inv(~ecdhSk.55), (%i.71%+%1), 
                        <$Them.54, theirIdPk.70, $Me.53, pk(~idKey.57)>, 
                        maybeTheirNewKemPk.65, None, None>,
                       theirIdPk.70)
        z.2   = sdec(ciphertext.59,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.74, rootKey.67), '0'),
                                      <$Them.54, theirIdPk.70, $Me.53, pk(~idKey.57)>)),
                          'msg_key'))
    
     4. $Me   = $Me.61
        $Them = $Them.62
        ~ecdhSk
              = ~ecdhSk.63
        ~idKey
              = ~idKey.65
        ciphertext
              = senc(z.90,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.82, rootKey.75), '0'),
                                      <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.73
        msgKeyIndicator
              = msgKeyIndicator.74
        rootKey
              = rootKey.75
        signature
              = signature.76
        theirEcdhPk
              = z.82^inv(~ecdhSk.63)
        theirIdPk
              = theirIdPk.78
        z     = z.82
        %i    = %i.79
        z.1   = verify(signature.76,
                       <'msg_sig', 
                        senc(z.90,
                             hkdf(suffix(hkdf(hkdf(hkdf(z.82, rootKey.75), '0'),
                                              <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>)),
                                  'msg_key')), 
                        msgKeyIndicator.74, z.82^inv(~ecdhSk.63), (%i.79%+%1), 
                        <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>, 
                        maybeTheirNewKemPk.73, None, None>,
                       theirIdPk.78)
        z.2   = z.90
    
     5. $Me   = $Me.61
        $Them = $Them.62
        ~ecdhSk
              = ~ecdhSk.63
        ~idKey
              = ~idKey.65
        ciphertext
              = senc(z.90,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.77^~ecdhSk.63, rootKey.75),
                                           '0'),
                                      <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.73
        msgKeyIndicator
              = msgKeyIndicator.74
        rootKey
              = rootKey.75
        signature
              = signature.76
        theirEcdhPk
              = theirEcdhPk.77
        theirIdPk
              = theirIdPk.78
        z     = theirEcdhPk.77^~ecdhSk.63
        %i    = %i.79
        z.1   = verify(signature.76,
                       <'msg_sig', 
                        senc(z.90,
                             hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.77^~ecdhSk.63, rootKey.75),
                                                   '0'),
                                              <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>)),
                                  'msg_key')), 
                        msgKeyIndicator.74, theirEcdhPk.77, (%i.79%+%1), 
                        <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>, 
                        maybeTheirNewKemPk.73, None, None>,
                       theirIdPk.78)
        z.2   = z.90
    
     6. $Me   = $Me.61
        $Them = $Them.62
        ~idKey
              = ~idKey.65
        ciphertext
              = senc(z.90,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.75), '0'),
                                      <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.73
        msgKeyIndicator
              = msgKeyIndicator.74
        rootKey
              = rootKey.75
        signature
              = signature.76
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.78
        z     = DH_neutral
        %i    = %i.79
        z.1   = verify(signature.76,
                       <'msg_sig', 
                        senc(z.90,
                             hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.75), '0'),
                                              <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>)),
                                  'msg_key')), 
                        msgKeyIndicator.74, DH_neutral, (%i.79%+%1), 
                        <$Them.62, theirIdPk.78, $Me.61, pk(~idKey.65)>, 
                        maybeTheirNewKemPk.73, None, None>,
                       theirIdPk.78)
        z.2   = z.90
    
     7. $Me   = $Me.345
        $Them = $Them.346
        ~ecdhSk
              = ~ecdhSk.347
        ~idKey
              = ~idKey.349
        ciphertext
              = ciphertext.351
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.357
        msgKeyIndicator
              = msgKeyIndicator.358
        rootKey
              = rootKey.359
        signature
              = signature.360
        theirEcdhPk
              = x.687^x.688
        theirIdPk
              = theirIdPk.362
        z     = x.687^(~ecdhSk.347*x.688)
        %i    = %i.363
        z.1   = verify(signature.360,
                       <'msg_sig', ciphertext.351, msgKeyIndicator.358, x.687^x.688, 
                        (%i.363%+%1), <$Them.346, theirIdPk.362, $Me.345, pk(~idKey.349)>, 
                        maybeTheirNewKemPk.357, None, None>,
                       theirIdPk.362)
        z.2   = sdec(ciphertext.351,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.687^(~ecdhSk.347*x.688), rootKey.359),
                                           '0'),
                                      <$Them.346, theirIdPk.362, $Me.345, pk(~idKey.349)>)),
                          'msg_key'))
    
     8. $Me   = $Me.352
        $Them = $Them.353
        ~ecdhSk
              = ~ecdhSk.354
        ~idKey
              = ~idKey.356
        ciphertext
              = senc(z.381,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.701^x.702, rootKey.366), '0'),
                                      <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.364
        msgKeyIndicator
              = msgKeyIndicator.365
        rootKey
              = rootKey.366
        signature
              = signature.367
        theirEcdhPk
              = x.701^(x.702*inv(~ecdhSk.354))
        theirIdPk
              = theirIdPk.369
        z     = x.701^x.702
        %i    = %i.370
        z.1   = verify(signature.367,
                       <'msg_sig', 
                        senc(z.381,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.701^x.702, rootKey.366), '0'),
                                              <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>)),
                                  'msg_key')), 
                        msgKeyIndicator.365, x.701^(x.702*inv(~ecdhSk.354)), (%i.370%+%1), 
                        <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>, 
                        maybeTheirNewKemPk.364, None, None>,
                       theirIdPk.369)
        z.2   = z.381
    
     9. $Me   = $Me.352
        $Them = $Them.353
        ~ecdhSk
              = ~ecdhSk.354
        ~idKey
              = ~idKey.356
        ciphertext
              = senc(z.381,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.701^inv(x.702), rootKey.366), '0'),
                                      <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.364
        msgKeyIndicator
              = msgKeyIndicator.365
        rootKey
              = rootKey.366
        signature
              = signature.367
        theirEcdhPk
              = x.701^inv((~ecdhSk.354*x.702))
        theirIdPk
              = theirIdPk.369
        z     = x.701^inv(x.702)
        %i    = %i.370
        z.1   = verify(signature.367,
                       <'msg_sig', 
                        senc(z.381,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.701^inv(x.702), rootKey.366), '0'),
                                              <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>)),
                                  'msg_key')), 
                        msgKeyIndicator.365, x.701^inv((~ecdhSk.354*x.702)), (%i.370%+%1), 
                        <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>, 
                        maybeTheirNewKemPk.364, None, None>,
                       theirIdPk.369)
        z.2   = z.381
    
    10. $Me   = $Me.352
        $Them = $Them.353
        ~ecdhSk
              = ~ecdhSk.354
        ~idKey
              = ~idKey.356
        ciphertext
              = senc(z.381,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.701^(~ecdhSk.354*x.702), rootKey.366),
                                           '0'),
                                      <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.364
        msgKeyIndicator
              = msgKeyIndicator.365
        rootKey
              = rootKey.366
        signature
              = signature.367
        theirEcdhPk
              = x.701^x.702
        theirIdPk
              = theirIdPk.369
        z     = x.701^(~ecdhSk.354*x.702)
        %i    = %i.370
        z.1   = verify(signature.367,
                       <'msg_sig', 
                        senc(z.381,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.701^(~ecdhSk.354*x.702), rootKey.366),
                                                   '0'),
                                              <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>)),
                                  'msg_key')), 
                        msgKeyIndicator.365, x.701^x.702, (%i.370%+%1), 
                        <$Them.353, theirIdPk.369, $Me.352, pk(~idKey.356)>, 
                        maybeTheirNewKemPk.364, None, None>,
                       theirIdPk.369)
        z.2   = z.381
    
    11. $Me   = $Me.352
        $Them = $Them.353
        ~idKey
              = ~idKey.356
        ciphertext
              = senc(z.381,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.366), '0'),
                                      <$Them.353, pk(x.702), $Me.352, pk(~idKey.356)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.364
        msgKeyIndicator
              = msgKeyIndicator.365
        rootKey
              = rootKey.366
        signature
              = sign(<'msg_sig', 
                      senc(z.381,
                           hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.366), '0'),
                                            <$Them.353, pk(x.702), $Me.352, pk(~idKey.356)>)),
                                'msg_key')), 
                      msgKeyIndicator.365, DH_neutral, (%i.370%+%1), 
                      <$Them.353, pk(x.702), $Me.352, pk(~idKey.356)>, 
                      maybeTheirNewKemPk.364, None, None>,
                     x.702)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.702)
        z     = DH_neutral
        %i    = %i.370
        z.1   = true
        z.2   = z.381
    
    12. $Me   = $Me.353
        $Them = $Them.354
        ~ecdhSk
              = ~ecdhSk.355
        ~idKey
              = ~idKey.357
        ciphertext
              = senc(z.382,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.374, rootKey.367), '0'),
                                      <$Them.354, pk(x.704), $Me.353, pk(~idKey.357)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.365
        msgKeyIndicator
              = msgKeyIndicator.366
        rootKey
              = rootKey.367
        signature
              = sign(<'msg_sig', 
                      senc(z.382,
                           hkdf(suffix(hkdf(hkdf(hkdf(z.374, rootKey.367), '0'),
                                            <$Them.354, pk(x.704), $Me.353, pk(~idKey.357)>)),
                                'msg_key')), 
                      msgKeyIndicator.366, z.374^inv(~ecdhSk.355), (%i.371%+%1), 
                      <$Them.354, pk(x.704), $Me.353, pk(~idKey.357)>, 
                      maybeTheirNewKemPk.365, None, None>,
                     x.704)
        theirEcdhPk
              = z.374^inv(~ecdhSk.355)
        theirIdPk
              = pk(x.704)
        z     = z.374
        %i    = %i.371
        z.1   = true
        z.2   = z.382
    
    13. $Me   = $Me.353
        $Them = $Them.354
        ~ecdhSk
              = ~ecdhSk.355
        ~idKey
              = ~idKey.357
        ciphertext
              = senc(z.382,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.369^~ecdhSk.355,
                                                rootKey.367),
                                           '0'),
                                      <$Them.354, pk(x.704), $Me.353, pk(~idKey.357)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.365
        msgKeyIndicator
              = msgKeyIndicator.366
        rootKey
              = rootKey.367
        signature
              = sign(<'msg_sig', 
                      senc(z.382,
                           hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.369^~ecdhSk.355,
                                                      rootKey.367),
                                                 '0'),
                                            <$Them.354, pk(x.704), $Me.353, pk(~idKey.357)>)),
                                'msg_key')), 
                      msgKeyIndicator.366, theirEcdhPk.369, (%i.371%+%1), 
                      <$Them.354, pk(x.704), $Me.353, pk(~idKey.357)>, 
                      maybeTheirNewKemPk.365, None, None>,
                     x.704)
        theirEcdhPk
              = theirEcdhPk.369
        theirIdPk
              = pk(x.704)
        z     = theirEcdhPk.369^~ecdhSk.355
        %i    = %i.371
        z.1   = true
        z.2   = z.382
    
    14. $Me   = $Me.353
        $Them = $Them.354
        ~ecdhSk
              = ~ecdhSk.355
        ~idKey
              = ~idKey.357
        ciphertext
              = senc(z.382,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.702^(x.703*inv(x.704)), rootKey.367),
                                           '0'),
                                      <$Them.354, theirIdPk.370, $Me.353, pk(~idKey.357)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.365
        msgKeyIndicator
              = msgKeyIndicator.366
        rootKey
              = rootKey.367
        signature
              = signature.368
        theirEcdhPk
              = x.702^(x.703*inv((~ecdhSk.355*x.704)))
        theirIdPk
              = theirIdPk.370
        z     = x.702^(x.703*inv(x.704))
        %i    = %i.371
        z.1   = verify(signature.368,
                       <'msg_sig', 
                        senc(z.382,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.702^(x.703*inv(x.704)), rootKey.367),
                                                   '0'),
                                              <$Them.354, theirIdPk.370, $Me.353, pk(~idKey.357)>)),
                                  'msg_key')), 
                        msgKeyIndicator.366, x.702^(x.703*inv((~ecdhSk.355*x.704))), 
                        (%i.371%+%1), <$Them.354, theirIdPk.370, $Me.353, pk(~idKey.357)>, 
                        maybeTheirNewKemPk.365, None, None>,
                       theirIdPk.370)
        z.2   = z.382
    
    15. $Me   = $Me.354
        $Them = $Them.355
        ~ecdhSk
              = ~ecdhSk.356
        ~idKey
              = ~idKey.358
        ciphertext
              = senc(z.383,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.703^x.704, rootKey.368), '0'),
                                      <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.366
        msgKeyIndicator
              = msgKeyIndicator.367
        rootKey
              = rootKey.368
        signature
              = sign(<'msg_sig', 
                      senc(z.383,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.703^x.704, rootKey.368), '0'),
                                            <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>)),
                                'msg_key')), 
                      msgKeyIndicator.367, x.703^(x.704*inv(~ecdhSk.356)), (%i.372%+%1), 
                      <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>, 
                      maybeTheirNewKemPk.366, None, None>,
                     x.706)
        theirEcdhPk
              = x.703^(x.704*inv(~ecdhSk.356))
        theirIdPk
              = pk(x.706)
        z     = x.703^x.704
        %i    = %i.372
        z.1   = true
        z.2   = z.383
    
    16. $Me   = $Me.354
        $Them = $Them.355
        ~ecdhSk
              = ~ecdhSk.356
        ~idKey
              = ~idKey.358
        ciphertext
              = senc(z.383,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.703^inv(x.704), rootKey.368), '0'),
                                      <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.366
        msgKeyIndicator
              = msgKeyIndicator.367
        rootKey
              = rootKey.368
        signature
              = sign(<'msg_sig', 
                      senc(z.383,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.703^inv(x.704), rootKey.368), '0'),
                                            <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>)),
                                'msg_key')), 
                      msgKeyIndicator.367, x.703^inv((~ecdhSk.356*x.704)), (%i.372%+%1), 
                      <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>, 
                      maybeTheirNewKemPk.366, None, None>,
                     x.706)
        theirEcdhPk
              = x.703^inv((~ecdhSk.356*x.704))
        theirIdPk
              = pk(x.706)
        z     = x.703^inv(x.704)
        %i    = %i.372
        z.1   = true
        z.2   = z.383
    
    17. $Me   = $Me.354
        $Them = $Them.355
        ~ecdhSk
              = ~ecdhSk.356
        ~idKey
              = ~idKey.358
        ciphertext
              = senc(z.383,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.703^(~ecdhSk.356*x.704), rootKey.368),
                                           '0'),
                                      <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.366
        msgKeyIndicator
              = msgKeyIndicator.367
        rootKey
              = rootKey.368
        signature
              = sign(<'msg_sig', 
                      senc(z.383,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.703^(~ecdhSk.356*x.704), rootKey.368),
                                                 '0'),
                                            <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>)),
                                'msg_key')), 
                      msgKeyIndicator.367, x.703^x.704, (%i.372%+%1), 
                      <$Them.355, pk(x.706), $Me.354, pk(~idKey.358)>, 
                      maybeTheirNewKemPk.366, None, None>,
                     x.706)
        theirEcdhPk
              = x.703^x.704
        theirIdPk
              = pk(x.706)
        z     = x.703^(~ecdhSk.356*x.704)
        %i    = %i.372
        z.1   = true
        z.2   = z.383
    
    18. $Me   = $Me.355
        $Them = $Them.356
        ~ecdhSk
              = ~ecdhSk.357
        ~idKey
              = ~idKey.359
        ciphertext
              = senc(z.384,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.704^(x.705*inv(x.706)), rootKey.369),
                                           '0'),
                                      <$Them.356, pk(x.708), $Me.355, pk(~idKey.359)>)),
                          'msg_key'))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.367
        msgKeyIndicator
              = msgKeyIndicator.368
        rootKey
              = rootKey.369
        signature
              = sign(<'msg_sig', 
                      senc(z.384,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.704^(x.705*inv(x.706)), rootKey.369),
                                                 '0'),
                                            <$Them.356, pk(x.708), $Me.355, pk(~idKey.359)>)),
                                'msg_key')), 
                      msgKeyIndicator.368, x.704^(x.705*inv((~ecdhSk.357*x.706))), 
                      (%i.373%+%1), <$Them.356, pk(x.708), $Me.355, pk(~idKey.359)>, 
                      maybeTheirNewKemPk.367, None, None>,
                     x.708)
        theirEcdhPk
              = x.704^(x.705*inv((~ecdhSk.357*x.706)))
        theirIdPk
              = pk(x.708)
        z     = x.704^(x.705*inv(x.706))
        %i    = %i.373
        z.1   = true
        z.2   = z.384
    
    19. $Me   = $Me.359
        $Them = $Them.360
        ~ecdhSk
              = ~ecdhSk.361
        ~idKey
              = ~idKey.363
        ciphertext
              = ciphertext.365
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.371
        msgKeyIndicator
              = msgKeyIndicator.372
        rootKey
              = rootKey.373
        signature
              = signature.374
        theirEcdhPk
              = x.715^inv((~ecdhSk.361*x.716))
        theirIdPk
              = theirIdPk.376
        z     = x.715^inv(x.716)
        %i    = %i.377
        z.1   = verify(signature.374,
                       <'msg_sig', ciphertext.365, msgKeyIndicator.372, 
                        x.715^inv((~ecdhSk.361*x.716)), (%i.377%+%1), 
                        <$Them.360, theirIdPk.376, $Me.359, pk(~idKey.363)>, 
                        maybeTheirNewKemPk.371, None, None>,
                       theirIdPk.376)
        z.2   = sdec(ciphertext.365,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.715^inv(x.716), rootKey.373), '0'),
                                      <$Them.360, theirIdPk.376, $Me.359, pk(~idKey.363)>)),
                          'msg_key'))
    
    20. $Me   = $Me.359
        $Them = $Them.360
        ~ecdhSk
              = ~ecdhSk.361
        ~idKey
              = ~idKey.363
        ciphertext
              = ciphertext.365
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.371
        msgKeyIndicator
              = msgKeyIndicator.372
        rootKey
              = rootKey.373
        signature
              = signature.374
        theirEcdhPk
              = x.715^(x.716*inv(~ecdhSk.361))
        theirIdPk
              = theirIdPk.376
        z     = x.715^x.716
        %i    = %i.377
        z.1   = verify(signature.374,
                       <'msg_sig', ciphertext.365, msgKeyIndicator.372, 
                        x.715^(x.716*inv(~ecdhSk.361)), (%i.377%+%1), 
                        <$Them.360, theirIdPk.376, $Me.359, pk(~idKey.363)>, 
                        maybeTheirNewKemPk.371, None, None>,
                       theirIdPk.376)
        z.2   = sdec(ciphertext.365,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.715^x.716, rootKey.373), '0'),
                                      <$Them.360, theirIdPk.376, $Me.359, pk(~idKey.363)>)),
                          'msg_key'))
    
    21. $Me   = $Me.360
        $Them = $Them.361
        ~ecdhSk
              = ~ecdhSk.362
        ~idKey
              = ~idKey.364
        ciphertext
              = ciphertext.366
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.372
        msgKeyIndicator
              = msgKeyIndicator.373
        rootKey
              = rootKey.374
        signature
              = signature.375
        theirEcdhPk
              = x.716^(x.717*inv((~ecdhSk.362*x.718)))
        theirIdPk
              = theirIdPk.377
        z     = x.716^(x.717*inv(x.718))
        %i    = %i.378
        z.1   = verify(signature.375,
                       <'msg_sig', ciphertext.366, msgKeyIndicator.373, 
                        x.716^(x.717*inv((~ecdhSk.362*x.718))), (%i.378%+%1), 
                        <$Them.361, theirIdPk.377, $Me.360, pk(~idKey.364)>, 
                        maybeTheirNewKemPk.372, None, None>,
                       theirIdPk.377)
        z.2   = sdec(ciphertext.366,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.716^(x.717*inv(x.718)), rootKey.374),
                                           '0'),
                                      <$Them.361, theirIdPk.377, $Me.360, pk(~idKey.364)>)),
                          'msg_key'))
    
    22. $Me   = $Me.360
        $Them = $Them.361
        ~idKey
              = ~idKey.364
        ciphertext
              = ciphertext.366
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.372
        msgKeyIndicator
              = msgKeyIndicator.373
        rootKey
              = rootKey.374
        signature
              = sign(<'msg_sig', ciphertext.366, msgKeyIndicator.373, 
                      DH_neutral, (%i.378%+%1), 
                      <$Them.361, pk(x.718), $Me.360, pk(~idKey.364)>, 
                      maybeTheirNewKemPk.372, None, None>,
                     x.718)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.718)
        z     = DH_neutral
        %i    = %i.378
        z.1   = true
        z.2   = sdec(ciphertext.366,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.374), '0'),
                                      <$Them.361, pk(x.718), $Me.360, pk(~idKey.364)>)),
                          'msg_key'))
    
    23. $Me   = $Me.361
        $Them = $Them.362
        ~ecdhSk
              = ~ecdhSk.363
        ~idKey
              = ~idKey.365
        ciphertext
              = ciphertext.367
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.373
        msgKeyIndicator
              = msgKeyIndicator.374
        rootKey
              = rootKey.375
        signature
              = sign(<'msg_sig', ciphertext.367, msgKeyIndicator.374, 
                      theirEcdhPk.377, (%i.379%+%1), 
                      <$Them.362, pk(x.720), $Me.361, pk(~idKey.365)>, 
                      maybeTheirNewKemPk.373, None, None>,
                     x.720)
        theirEcdhPk
              = theirEcdhPk.377
        theirIdPk
              = pk(x.720)
        z     = theirEcdhPk.377^~ecdhSk.363
        %i    = %i.379
        z.1   = true
        z.2   = sdec(ciphertext.367,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.377^~ecdhSk.363,
                                                rootKey.375),
                                           '0'),
                                      <$Them.362, pk(x.720), $Me.361, pk(~idKey.365)>)),
                          'msg_key'))
    
    24. $Me   = $Me.361
        $Them = $Them.362
        ~ecdhSk
              = ~ecdhSk.363
        ~idKey
              = ~idKey.365
        ciphertext
              = ciphertext.367
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.373
        msgKeyIndicator
              = msgKeyIndicator.374
        rootKey
              = rootKey.375
        signature
              = sign(<'msg_sig', ciphertext.367, msgKeyIndicator.374, 
                      z.382^inv(~ecdhSk.363), (%i.379%+%1), 
                      <$Them.362, pk(x.720), $Me.361, pk(~idKey.365)>, 
                      maybeTheirNewKemPk.373, None, None>,
                     x.720)
        theirEcdhPk
              = z.382^inv(~ecdhSk.363)
        theirIdPk
              = pk(x.720)
        z     = z.382
        %i    = %i.379
        z.1   = true
        z.2   = sdec(ciphertext.367,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.382, rootKey.375), '0'),
                                      <$Them.362, pk(x.720), $Me.361, pk(~idKey.365)>)),
                          'msg_key'))
    
    25. $Me   = $Me.362
        $Them = $Them.363
        ~ecdhSk
              = ~ecdhSk.364
        ~idKey
              = ~idKey.366
        ciphertext
              = ciphertext.368
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.374
        msgKeyIndicator
              = msgKeyIndicator.375
        rootKey
              = rootKey.376
        signature
              = sign(<'msg_sig', ciphertext.368, msgKeyIndicator.375, 
                      x.719^x.720, (%i.380%+%1), 
                      <$Them.363, pk(x.722), $Me.362, pk(~idKey.366)>, 
                      maybeTheirNewKemPk.374, None, None>,
                     x.722)
        theirEcdhPk
              = x.719^x.720
        theirIdPk
              = pk(x.722)
        z     = x.719^(~ecdhSk.364*x.720)
        %i    = %i.380
        z.1   = true
        z.2   = sdec(ciphertext.368,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.719^(~ecdhSk.364*x.720), rootKey.376),
                                           '0'),
                                      <$Them.363, pk(x.722), $Me.362, pk(~idKey.366)>)),
                          'msg_key'))
    
    26. $Me   = $Me.362
        $Them = $Them.363
        ~ecdhSk
              = ~ecdhSk.364
        ~idKey
              = ~idKey.366
        ciphertext
              = ciphertext.368
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.374
        msgKeyIndicator
              = msgKeyIndicator.375
        rootKey
              = rootKey.376
        signature
              = sign(<'msg_sig', ciphertext.368, msgKeyIndicator.375, 
                      x.719^inv((~ecdhSk.364*x.720)), (%i.380%+%1), 
                      <$Them.363, pk(x.722), $Me.362, pk(~idKey.366)>, 
                      maybeTheirNewKemPk.374, None, None>,
                     x.722)
        theirEcdhPk
              = x.719^inv((~ecdhSk.364*x.720))
        theirIdPk
              = pk(x.722)
        z     = x.719^inv(x.720)
        %i    = %i.380
        z.1   = true
        z.2   = sdec(ciphertext.368,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.719^inv(x.720), rootKey.376), '0'),
                                      <$Them.363, pk(x.722), $Me.362, pk(~idKey.366)>)),
                          'msg_key'))
    
    27. $Me   = $Me.362
        $Them = $Them.363
        ~ecdhSk
              = ~ecdhSk.364
        ~idKey
              = ~idKey.366
        ciphertext
              = ciphertext.368
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.374
        msgKeyIndicator
              = msgKeyIndicator.375
        rootKey
              = rootKey.376
        signature
              = sign(<'msg_sig', ciphertext.368, msgKeyIndicator.375, 
                      x.719^(x.720*inv(~ecdhSk.364)), (%i.380%+%1), 
                      <$Them.363, pk(x.722), $Me.362, pk(~idKey.366)>, 
                      maybeTheirNewKemPk.374, None, None>,
                     x.722)
        theirEcdhPk
              = x.719^(x.720*inv(~ecdhSk.364))
        theirIdPk
              = pk(x.722)
        z     = x.719^x.720
        %i    = %i.380
        z.1   = true
        z.2   = sdec(ciphertext.368,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.719^x.720, rootKey.376), '0'),
                                      <$Them.363, pk(x.722), $Me.362, pk(~idKey.366)>)),
                          'msg_key'))
    
    28. $Me   = $Me.363
        $Them = $Them.364
        ~ecdhSk
              = ~ecdhSk.365
        ~idKey
              = ~idKey.367
        ciphertext
              = ciphertext.369
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.375
        msgKeyIndicator
              = msgKeyIndicator.376
        rootKey
              = rootKey.377
        signature
              = sign(<'msg_sig', ciphertext.369, msgKeyIndicator.376, 
                      x.720^(x.721*inv((~ecdhSk.365*x.722))), (%i.381%+%1), 
                      <$Them.364, pk(x.724), $Me.363, pk(~idKey.367)>, 
                      maybeTheirNewKemPk.375, None, None>,
                     x.724)
        theirEcdhPk
              = x.720^(x.721*inv((~ecdhSk.365*x.722)))
        theirIdPk
              = pk(x.724)
        z     = x.720^(x.721*inv(x.722))
        %i    = %i.381
        z.1   = true
        z.2   = sdec(ciphertext.369,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.720^(x.721*inv(x.722)), rootKey.377),
                                           '0'),
                                      <$Them.364, pk(x.724), $Me.363, pk(~idKey.367)>)),
                          'msg_key'))
    // loop breaker: [1]
  */

rule (modulo E) PublicKeyRatchetNewReceiverWithSomeNewKemSS[color=#b4d9ef]:
   [
   !IdentityKey( $Me, ~idKey ),
   Session( ~id, %i, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
            discard1, maybeTheirKemPk, None, discard2, discard3, rootKey,
            discard4
   ),
   In( <ciphertext, signature, theirEcdhPk, (%i%+%1), 
        msgKeyIndicator, maybeTheirNewKemPk, Just(kemEncap), None>
   )
   ]
  --[
  PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
  Neq( theirEcdhPk, 'g' ), Neq( decap(kemEncap, ~kemSk), '0' ),
  Eq( verify(signature,
             <'msg_sig', ciphertext, msgKeyIndicator, theirEcdhPk, (%i%+%1), 
              <$Them, theirIdPk, $Me, pk(~idKey)>, maybeTheirNewKemPk, 
              Just(kemEncap), None>,
             theirIdPk),
      true
  ),
  Eq( msgKeyIndicator,
      hkdf(hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                 decap(kemEncap, ~kemSk)),
                            <$Them, theirIdPk, $Me, pk(~idKey)>)),
                'msg_key'),
           'msg_key_ind')
  ),
  SessionInfo( ~id, (%i%+%1), $Me, $Them ),
  PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk,
                    theirEcdhPk^~ecdhSk, pqpk(~kemSk), maybeTheirKemPk,
                    maybeTheirNewKemPk, decap(kemEncap, ~kemSk), pqpk(~kemSk),
                    prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                     decap(kemEncap, ~kemSk)),
                                <$Them, theirIdPk, $Me, pk(~idKey)>))
  ),
  PKRatchet( ), ToReceiver( ),
  NewKemPublicKey( ~id, $Me, $Them, maybeTheirNewKemPk ),
  MessageReceived( ~id, (%i%+%1), $Them, $Me,
                   sdec(ciphertext,
                        hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                              decap(kemEncap, ~kemSk)),
                                         <$Them, theirIdPk, $Me, pk(~idKey)>)),
                             'msg_key'))
  ),
  SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, decap(kemEncap, ~kemSk),
                  pqpk(~kemSk),
                  suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                   decap(kemEncap, ~kemSk)),
                              <$Them, theirIdPk, $Me, pk(~idKey)>)),
                  hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                        decap(kemEncap, ~kemSk)),
                                   <$Them, theirIdPk, $Me, pk(~idKey)>)),
                       'msg_key')
  ),
  KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, theirEcdhPk^~ecdhSk,
            pqpk(~kemSk), maybeTheirKemPk, maybeTheirNewKemPk,
            decap(kemEncap, ~kemSk), pqpk(~kemSk),
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                             decap(kemEncap, ~kemSk)),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                             decap(kemEncap, ~kemSk)),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                  decap(kemEncap, ~kemSk)),
                             <$Them, theirIdPk, $Me, pk(~idKey)>)),
                 'msg_key')
  ),
  PublicKeyRatchetNewReceiver( ~id, (%i%+%1), $Them, $Me,
                               hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                         decap(kemEncap, ~kemSk)),
                                    <$Them, theirIdPk, $Me, pk(~idKey)>)
  ),
  DecapKemSS( ~id, $Me, $Them, decap(kemEncap, ~kemSk), pqpk(~kemSk)
  )
  ]->
   [
   Session( ~id, (%i%+%1), 'R', $Me, ~ecdhSk, ~kemSk, $Them,
            theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk,
            decap(kemEncap, ~kemSk), pqpk(~kemSk),
            prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                             decap(kemEncap, ~kemSk)),
                        <$Them, theirIdPk, $Me, pk(~idKey)>)),
            hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                  decap(kemEncap, ~kemSk)),
                             <$Them, theirIdPk, $Me, pk(~idKey)>)),
                 'chain_key')
   ),
   !RootKey( ~id, (%i%+%1), $Me, decap(kemEncap, ~kemSk),
             prefix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                              decap(kemEncap, ~kemSk)),
                         <$Them, theirIdPk, $Me, pk(~idKey)>))
   ),
   !ChainKey( ~id, (%i%+%1), $Me,
              suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                               decap(kemEncap, ~kemSk)),
                          <$Them, theirIdPk, $Me, pk(~idKey)>))
   ),
   !MessageKey( ~id, (%i%+%1), $Me,
                hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk^~ecdhSk, rootKey),
                                      decap(kemEncap, ~kemSk)),
                                 <$Them, theirIdPk, $Me, pk(~idKey)>)),
                     'msg_key')
   )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) PublicKeyRatchetNewReceiverWithSomeNewKemSS[color=#b4d9ef]:
     [
     !IdentityKey( $Me, ~idKey ),
     Session( ~id, %i, 'S', $Me, ~ecdhSk, ~kemSk, $Them, theirIdPk,
              discard1, maybeTheirKemPk, None, discard2, discard3, rootKey,
              discard4
     ),
     In( <ciphertext, signature, theirEcdhPk, (%i%+%1), 
          msgKeyIndicator, maybeTheirNewKemPk, Just(kemEncap), None>
     )
     ]
    --[
    PrePQAttack( ), Neq( theirEcdhPk, DH_neutral ),
    Neq( theirEcdhPk, 'g' ), Neq( z, '0' ), Eq( z.2, true ),
    Eq( msgKeyIndicator,
        hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                              <$Them, theirIdPk, $Me, pk(~idKey)>)),
                  'msg_key'),
             'msg_key_ind')
    ),
    SessionInfo( ~id, (%i%+%1), $Me, $Them ),
    PublicKeyRatchet( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z.1,
                      pqpk(~kemSk), maybeTheirKemPk, maybeTheirNewKemPk, z, pqpk(~kemSk),
                      prefix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                                  <$Them, theirIdPk, $Me, pk(~idKey)>))
    ),
    PKRatchet( ), ToReceiver( ),
    NewKemPublicKey( ~id, $Me, $Them, maybeTheirNewKemPk ),
    MessageReceived( ~id, (%i%+%1), $Them, $Me, z.3 ),
    SessionSecrets( 'g'^~ecdhSk, theirEcdhPk, z, pqpk(~kemSk),
                    suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                                <$Them, theirIdPk, $Me, pk(~idKey)>)),
                    hkdf(suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                                     <$Them, theirIdPk, $Me, pk(~idKey)>)),
                         'msg_key')
    ),
    KeysUsed( theirIdPk, 'g'^~ecdhSk, theirEcdhPk, z.1, pqpk(~kemSk),
              maybeTheirKemPk, maybeTheirNewKemPk, z, pqpk(~kemSk),
              prefix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                               <$Them, theirIdPk, $Me, pk(~idKey)>)),
                   'msg_key')
    ),
    PublicKeyRatchetNewReceiver( ~id, (%i%+%1), $Them, $Me,
                                 hkdf(hkdf(hkdf(z.1, rootKey), z),
                                      <$Them, theirIdPk, $Me, pk(~idKey)>)
    ),
    DecapKemSS( ~id, $Me, $Them, z, pqpk(~kemSk) )
    ]->
     [
     Session( ~id, (%i%+%1), 'R', $Me, ~ecdhSk, ~kemSk, $Them,
              theirIdPk, theirEcdhPk, maybeTheirKemPk, maybeTheirNewKemPk, z,
              pqpk(~kemSk),
              prefix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                          <$Them, theirIdPk, $Me, pk(~idKey)>)),
              hkdf(suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                               <$Them, theirIdPk, $Me, pk(~idKey)>)),
                   'chain_key')
     ),
     !RootKey( ~id, (%i%+%1), $Me, z,
               prefix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                           <$Them, theirIdPk, $Me, pk(~idKey)>))
     ),
     !ChainKey( ~id, (%i%+%1), $Me,
                suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                            <$Them, theirIdPk, $Me, pk(~idKey)>))
     ),
     !MessageKey( ~id, (%i%+%1), $Me,
                  hkdf(suffix(hkdf(hkdf(hkdf(z.1, rootKey), z),
                                   <$Them, theirIdPk, $Me, pk(~idKey)>)),
                       'msg_key')
     )
     ]
    variants (modulo AC)
     1. $Me   = $Me.53
        $Them = $Them.54
        ~ecdhSk
              = ~ecdhSk.55
        ~idKey
              = ~idKey.57
        ~kemSk
              = ~kemSk.58
        ciphertext
              = ciphertext.59
        kemEncap
              = kemEncap.64
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.66
        msgKeyIndicator
              = msgKeyIndicator.67
        rootKey
              = rootKey.68
        signature
              = signature.69
        theirEcdhPk
              = theirEcdhPk.70
        theirIdPk
              = theirIdPk.71
        z     = decap(kemEncap.64, ~kemSk.58)
        %i    = %i.72
        z.1   = theirEcdhPk.70^~ecdhSk.55
        z.2   = verify(signature.69,
                       <'msg_sig', ciphertext.59, msgKeyIndicator.67, theirEcdhPk.70, 
                        (%i.72%+%1), <$Them.54, theirIdPk.71, $Me.53, pk(~idKey.57)>, 
                        maybeTheirNewKemPk.66, Just(kemEncap.64), None>,
                       theirIdPk.71)
        z.3   = sdec(ciphertext.59,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.70^~ecdhSk.55, rootKey.68),
                                           decap(kemEncap.64, ~kemSk.58)),
                                      <$Them.54, theirIdPk.71, $Me.53, pk(~idKey.57)>)),
                          'msg_key'))
    
     2. $Me   = $Me.53
        $Them = $Them.54
        ~idKey
              = ~idKey.57
        ~kemSk
              = ~kemSk.58
        ciphertext
              = ciphertext.59
        kemEncap
              = kemEncap.64
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.66
        msgKeyIndicator
              = msgKeyIndicator.67
        rootKey
              = rootKey.68
        signature
              = signature.69
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.71
        z     = decap(kemEncap.64, ~kemSk.58)
        %i    = %i.72
        z.1   = DH_neutral
        z.2   = verify(signature.69,
                       <'msg_sig', ciphertext.59, msgKeyIndicator.67, DH_neutral, 
                        (%i.72%+%1), <$Them.54, theirIdPk.71, $Me.53, pk(~idKey.57)>, 
                        maybeTheirNewKemPk.66, Just(kemEncap.64), None>,
                       theirIdPk.71)
        z.3   = sdec(ciphertext.59,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.68),
                                           decap(kemEncap.64, ~kemSk.58)),
                                      <$Them.54, theirIdPk.71, $Me.53, pk(~idKey.57)>)),
                          'msg_key'))
    
     3. $Me   = $Me.56
        $Them = $Them.57
        ~ecdhSk
              = ~ecdhSk.58
        ~idKey
              = ~idKey.60
        ~kemSk
              = ~kemSk.61
        ciphertext
              = ciphertext.62
        kemEncap
              = encap(z.78, pqpk(~kemSk.61))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.69
        msgKeyIndicator
              = msgKeyIndicator.70
        rootKey
              = rootKey.71
        signature
              = signature.72
        theirEcdhPk
              = theirEcdhPk.73
        theirIdPk
              = theirIdPk.74
        z     = z.78
        %i    = %i.75
        z.1   = theirEcdhPk.73^~ecdhSk.58
        z.2   = verify(signature.72,
                       <'msg_sig', ciphertext.62, msgKeyIndicator.70, theirEcdhPk.73, 
                        (%i.75%+%1), <$Them.57, theirIdPk.74, $Me.56, pk(~idKey.60)>, 
                        maybeTheirNewKemPk.69, Just(encap(z.78, pqpk(~kemSk.61))), None>,
                       theirIdPk.74)
        z.3   = sdec(ciphertext.62,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.73^~ecdhSk.58, rootKey.71),
                                           z.78),
                                      <$Them.57, theirIdPk.74, $Me.56, pk(~idKey.60)>)),
                          'msg_key'))
    
     4. $Me   = $Me.56
        $Them = $Them.57
        ~idKey
              = ~idKey.60
        ~kemSk
              = ~kemSk.61
        ciphertext
              = ciphertext.62
        kemEncap
              = encap(z.78, pqpk(~kemSk.61))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.69
        msgKeyIndicator
              = msgKeyIndicator.70
        rootKey
              = rootKey.71
        signature
              = signature.72
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.74
        z     = z.78
        %i    = %i.75
        z.1   = DH_neutral
        z.2   = verify(signature.72,
                       <'msg_sig', ciphertext.62, msgKeyIndicator.70, DH_neutral, 
                        (%i.75%+%1), <$Them.57, theirIdPk.74, $Me.56, pk(~idKey.60)>, 
                        maybeTheirNewKemPk.69, Just(encap(z.78, pqpk(~kemSk.61))), None>,
                       theirIdPk.74)
        z.3   = sdec(ciphertext.62,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.71), z.78),
                                      <$Them.57, theirIdPk.74, $Me.56, pk(~idKey.60)>)),
                          'msg_key'))
    
     5. $Me   = $Me.57
        $Them = $Them.58
        ~ecdhSk
              = ~ecdhSk.59
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = ciphertext.63
        kemEncap
              = kemEncap.68
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.70
        msgKeyIndicator
              = msgKeyIndicator.71
        rootKey
              = rootKey.72
        signature
              = signature.73
        theirEcdhPk
              = z.80^inv(~ecdhSk.59)
        theirIdPk
              = theirIdPk.75
        z     = decap(kemEncap.68, ~kemSk.62)
        %i    = %i.76
        z.1   = z.80
        z.2   = verify(signature.73,
                       <'msg_sig', ciphertext.63, msgKeyIndicator.71, 
                        z.80^inv(~ecdhSk.59), (%i.76%+%1), 
                        <$Them.58, theirIdPk.75, $Me.57, pk(~idKey.61)>, 
                        maybeTheirNewKemPk.70, Just(kemEncap.68), None>,
                       theirIdPk.75)
        z.3   = sdec(ciphertext.63,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.80, rootKey.72),
                                           decap(kemEncap.68, ~kemSk.62)),
                                      <$Them.58, theirIdPk.75, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
    
     6. $Me   = $Me.57
        $Them = $Them.58
        ~ecdhSk
              = ~ecdhSk.59
        ~idKey
              = ~idKey.61
        ~kemSk
              = ~kemSk.62
        ciphertext
              = ciphertext.63
        kemEncap
              = encap(z.79, pqpk(~kemSk.62))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.70
        msgKeyIndicator
              = msgKeyIndicator.71
        rootKey
              = rootKey.72
        signature
              = signature.73
        theirEcdhPk
              = z.80^inv(~ecdhSk.59)
        theirIdPk
              = theirIdPk.75
        z     = z.79
        %i    = %i.76
        z.1   = z.80
        z.2   = verify(signature.73,
                       <'msg_sig', ciphertext.63, msgKeyIndicator.71, 
                        z.80^inv(~ecdhSk.59), (%i.76%+%1), 
                        <$Them.58, theirIdPk.75, $Me.57, pk(~idKey.61)>, 
                        maybeTheirNewKemPk.70, Just(encap(z.79, pqpk(~kemSk.62))), None>,
                       theirIdPk.75)
        z.3   = sdec(ciphertext.63,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.80, rootKey.72), z.79),
                                      <$Them.58, theirIdPk.75, $Me.57, pk(~idKey.61)>)),
                          'msg_key'))
    
     7. $Me   = $Me.65
        $Them = $Them.66
        ~ecdhSk
              = ~ecdhSk.67
        ~idKey
              = ~idKey.69
        ~kemSk
              = ~kemSk.70
        ciphertext
              = senc(z.96,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.88, rootKey.80), z.87),
                                      <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                          'msg_key'))
        kemEncap
              = encap(z.87, pqpk(~kemSk.70))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.78
        msgKeyIndicator
              = msgKeyIndicator.79
        rootKey
              = rootKey.80
        signature
              = signature.81
        theirEcdhPk
              = z.88^inv(~ecdhSk.67)
        theirIdPk
              = theirIdPk.83
        z     = z.87
        %i    = %i.84
        z.1   = z.88
        z.2   = verify(signature.81,
                       <'msg_sig', 
                        senc(z.96,
                             hkdf(suffix(hkdf(hkdf(hkdf(z.88, rootKey.80), z.87),
                                              <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                                  'msg_key')), 
                        msgKeyIndicator.79, z.88^inv(~ecdhSk.67), (%i.84%+%1), 
                        <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>, 
                        maybeTheirNewKemPk.78, Just(encap(z.87, pqpk(~kemSk.70))), None>,
                       theirIdPk.83)
        z.3   = z.96
    
     8. $Me   = $Me.65
        $Them = $Them.66
        ~ecdhSk
              = ~ecdhSk.67
        ~idKey
              = ~idKey.69
        ~kemSk
              = ~kemSk.70
        ciphertext
              = senc(z.96,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.88, rootKey.80),
                                           decap(kemEncap.76, ~kemSk.70)),
                                      <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.76
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.78
        msgKeyIndicator
              = msgKeyIndicator.79
        rootKey
              = rootKey.80
        signature
              = signature.81
        theirEcdhPk
              = z.88^inv(~ecdhSk.67)
        theirIdPk
              = theirIdPk.83
        z     = decap(kemEncap.76, ~kemSk.70)
        %i    = %i.84
        z.1   = z.88
        z.2   = verify(signature.81,
                       <'msg_sig', 
                        senc(z.96,
                             hkdf(suffix(hkdf(hkdf(hkdf(z.88, rootKey.80),
                                                   decap(kemEncap.76, ~kemSk.70)),
                                              <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                                  'msg_key')), 
                        msgKeyIndicator.79, z.88^inv(~ecdhSk.67), (%i.84%+%1), 
                        <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>, 
                        maybeTheirNewKemPk.78, Just(kemEncap.76), None>,
                       theirIdPk.83)
        z.3   = z.96
    
     9. $Me   = $Me.65
        $Them = $Them.66
        ~ecdhSk
              = ~ecdhSk.67
        ~idKey
              = ~idKey.69
        ~kemSk
              = ~kemSk.70
        ciphertext
              = senc(z.96,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.82^~ecdhSk.67, rootKey.80),
                                           z.87),
                                      <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                          'msg_key'))
        kemEncap
              = encap(z.87, pqpk(~kemSk.70))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.78
        msgKeyIndicator
              = msgKeyIndicator.79
        rootKey
              = rootKey.80
        signature
              = signature.81
        theirEcdhPk
              = theirEcdhPk.82
        theirIdPk
              = theirIdPk.83
        z     = z.87
        %i    = %i.84
        z.1   = theirEcdhPk.82^~ecdhSk.67
        z.2   = verify(signature.81,
                       <'msg_sig', 
                        senc(z.96,
                             hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.82^~ecdhSk.67, rootKey.80),
                                                   z.87),
                                              <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                                  'msg_key')), 
                        msgKeyIndicator.79, theirEcdhPk.82, (%i.84%+%1), 
                        <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>, 
                        maybeTheirNewKemPk.78, Just(encap(z.87, pqpk(~kemSk.70))), None>,
                       theirIdPk.83)
        z.3   = z.96
    
    10. $Me   = $Me.65
        $Them = $Them.66
        ~ecdhSk
              = ~ecdhSk.67
        ~idKey
              = ~idKey.69
        ~kemSk
              = ~kemSk.70
        ciphertext
              = senc(z.96,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.82^~ecdhSk.67, rootKey.80),
                                           decap(kemEncap.76, ~kemSk.70)),
                                      <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.76
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.78
        msgKeyIndicator
              = msgKeyIndicator.79
        rootKey
              = rootKey.80
        signature
              = signature.81
        theirEcdhPk
              = theirEcdhPk.82
        theirIdPk
              = theirIdPk.83
        z     = decap(kemEncap.76, ~kemSk.70)
        %i    = %i.84
        z.1   = theirEcdhPk.82^~ecdhSk.67
        z.2   = verify(signature.81,
                       <'msg_sig', 
                        senc(z.96,
                             hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.82^~ecdhSk.67, rootKey.80),
                                                   decap(kemEncap.76, ~kemSk.70)),
                                              <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                                  'msg_key')), 
                        msgKeyIndicator.79, theirEcdhPk.82, (%i.84%+%1), 
                        <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>, 
                        maybeTheirNewKemPk.78, Just(kemEncap.76), None>,
                       theirIdPk.83)
        z.3   = z.96
    
    11. $Me   = $Me.65
        $Them = $Them.66
        ~idKey
              = ~idKey.69
        ~kemSk
              = ~kemSk.70
        ciphertext
              = senc(z.96,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.80), z.87),
                                      <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                          'msg_key'))
        kemEncap
              = encap(z.87, pqpk(~kemSk.70))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.78
        msgKeyIndicator
              = msgKeyIndicator.79
        rootKey
              = rootKey.80
        signature
              = signature.81
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.83
        z     = z.87
        %i    = %i.84
        z.1   = DH_neutral
        z.2   = verify(signature.81,
                       <'msg_sig', 
                        senc(z.96,
                             hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.80), z.87),
                                              <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                                  'msg_key')), 
                        msgKeyIndicator.79, DH_neutral, (%i.84%+%1), 
                        <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>, 
                        maybeTheirNewKemPk.78, Just(encap(z.87, pqpk(~kemSk.70))), None>,
                       theirIdPk.83)
        z.3   = z.96
    
    12. $Me   = $Me.65
        $Them = $Them.66
        ~idKey
              = ~idKey.69
        ~kemSk
              = ~kemSk.70
        ciphertext
              = senc(z.96,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.80),
                                           decap(kemEncap.76, ~kemSk.70)),
                                      <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.76
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.78
        msgKeyIndicator
              = msgKeyIndicator.79
        rootKey
              = rootKey.80
        signature
              = signature.81
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = theirIdPk.83
        z     = decap(kemEncap.76, ~kemSk.70)
        %i    = %i.84
        z.1   = DH_neutral
        z.2   = verify(signature.81,
                       <'msg_sig', 
                        senc(z.96,
                             hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.80),
                                                   decap(kemEncap.76, ~kemSk.70)),
                                              <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>)),
                                  'msg_key')), 
                        msgKeyIndicator.79, DH_neutral, (%i.84%+%1), 
                        <$Them.66, theirIdPk.83, $Me.65, pk(~idKey.69)>, 
                        maybeTheirNewKemPk.78, Just(kemEncap.76), None>,
                       theirIdPk.83)
        z.3   = z.96
    
    13. $Me   = $Me.367
        $Them = $Them.368
        ~ecdhSk
              = ~ecdhSk.369
        ~idKey
              = ~idKey.371
        ~kemSk
              = ~kemSk.372
        ciphertext
              = ciphertext.373
        kemEncap
              = kemEncap.378
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.380
        msgKeyIndicator
              = msgKeyIndicator.381
        rootKey
              = rootKey.382
        signature
              = signature.383
        theirEcdhPk
              = x.731^x.732
        theirIdPk
              = theirIdPk.385
        z     = decap(kemEncap.378, ~kemSk.372)
        %i    = %i.386
        z.1   = x.731^(~ecdhSk.369*x.732)
        z.2   = verify(signature.383,
                       <'msg_sig', ciphertext.373, msgKeyIndicator.381, x.731^x.732, 
                        (%i.386%+%1), <$Them.368, theirIdPk.385, $Me.367, pk(~idKey.371)>, 
                        maybeTheirNewKemPk.380, Just(kemEncap.378), None>,
                       theirIdPk.385)
        z.3   = sdec(ciphertext.373,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.731^(~ecdhSk.369*x.732), rootKey.382),
                                           decap(kemEncap.378, ~kemSk.372)),
                                      <$Them.368, theirIdPk.385, $Me.367, pk(~idKey.371)>)),
                          'msg_key'))
    
    14. $Me   = $Me.374
        $Them = $Them.375
        ~ecdhSk
              = ~ecdhSk.376
        ~idKey
              = ~idKey.378
        ~kemSk
              = ~kemSk.379
        ciphertext
              = senc(z.405,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.745^x.746, rootKey.389), z.396),
                                      <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                          'msg_key'))
        kemEncap
              = encap(z.396, pqpk(~kemSk.379))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.387
        msgKeyIndicator
              = msgKeyIndicator.388
        rootKey
              = rootKey.389
        signature
              = signature.390
        theirEcdhPk
              = x.745^(x.746*inv(~ecdhSk.376))
        theirIdPk
              = theirIdPk.392
        z     = z.396
        %i    = %i.393
        z.1   = x.745^x.746
        z.2   = verify(signature.390,
                       <'msg_sig', 
                        senc(z.405,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.745^x.746, rootKey.389), z.396),
                                              <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                                  'msg_key')), 
                        msgKeyIndicator.388, x.745^(x.746*inv(~ecdhSk.376)), (%i.393%+%1), 
                        <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>, 
                        maybeTheirNewKemPk.387, Just(encap(z.396, pqpk(~kemSk.379))), None
                       >,
                       theirIdPk.392)
        z.3   = z.405
    
    15. $Me   = $Me.374
        $Them = $Them.375
        ~ecdhSk
              = ~ecdhSk.376
        ~idKey
              = ~idKey.378
        ~kemSk
              = ~kemSk.379
        ciphertext
              = senc(z.405,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.745^x.746, rootKey.389),
                                           decap(kemEncap.385, ~kemSk.379)),
                                      <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.385
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.387
        msgKeyIndicator
              = msgKeyIndicator.388
        rootKey
              = rootKey.389
        signature
              = signature.390
        theirEcdhPk
              = x.745^(x.746*inv(~ecdhSk.376))
        theirIdPk
              = theirIdPk.392
        z     = decap(kemEncap.385, ~kemSk.379)
        %i    = %i.393
        z.1   = x.745^x.746
        z.2   = verify(signature.390,
                       <'msg_sig', 
                        senc(z.405,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.745^x.746, rootKey.389),
                                                   decap(kemEncap.385, ~kemSk.379)),
                                              <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                                  'msg_key')), 
                        msgKeyIndicator.388, x.745^(x.746*inv(~ecdhSk.376)), (%i.393%+%1), 
                        <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>, 
                        maybeTheirNewKemPk.387, Just(kemEncap.385), None>,
                       theirIdPk.392)
        z.3   = z.405
    
    16. $Me   = $Me.374
        $Them = $Them.375
        ~ecdhSk
              = ~ecdhSk.376
        ~idKey
              = ~idKey.378
        ~kemSk
              = ~kemSk.379
        ciphertext
              = senc(z.405,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.745^inv(x.746), rootKey.389), z.396),
                                      <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                          'msg_key'))
        kemEncap
              = encap(z.396, pqpk(~kemSk.379))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.387
        msgKeyIndicator
              = msgKeyIndicator.388
        rootKey
              = rootKey.389
        signature
              = signature.390
        theirEcdhPk
              = x.745^inv((~ecdhSk.376*x.746))
        theirIdPk
              = theirIdPk.392
        z     = z.396
        %i    = %i.393
        z.1   = x.745^inv(x.746)
        z.2   = verify(signature.390,
                       <'msg_sig', 
                        senc(z.405,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.745^inv(x.746), rootKey.389), z.396),
                                              <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                                  'msg_key')), 
                        msgKeyIndicator.388, x.745^inv((~ecdhSk.376*x.746)), (%i.393%+%1), 
                        <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>, 
                        maybeTheirNewKemPk.387, Just(encap(z.396, pqpk(~kemSk.379))), None
                       >,
                       theirIdPk.392)
        z.3   = z.405
    
    17. $Me   = $Me.374
        $Them = $Them.375
        ~ecdhSk
              = ~ecdhSk.376
        ~idKey
              = ~idKey.378
        ~kemSk
              = ~kemSk.379
        ciphertext
              = senc(z.405,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.745^inv(x.746), rootKey.389),
                                           decap(kemEncap.385, ~kemSk.379)),
                                      <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.385
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.387
        msgKeyIndicator
              = msgKeyIndicator.388
        rootKey
              = rootKey.389
        signature
              = signature.390
        theirEcdhPk
              = x.745^inv((~ecdhSk.376*x.746))
        theirIdPk
              = theirIdPk.392
        z     = decap(kemEncap.385, ~kemSk.379)
        %i    = %i.393
        z.1   = x.745^inv(x.746)
        z.2   = verify(signature.390,
                       <'msg_sig', 
                        senc(z.405,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.745^inv(x.746), rootKey.389),
                                                   decap(kemEncap.385, ~kemSk.379)),
                                              <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                                  'msg_key')), 
                        msgKeyIndicator.388, x.745^inv((~ecdhSk.376*x.746)), (%i.393%+%1), 
                        <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>, 
                        maybeTheirNewKemPk.387, Just(kemEncap.385), None>,
                       theirIdPk.392)
        z.3   = z.405
    
    18. $Me   = $Me.374
        $Them = $Them.375
        ~ecdhSk
              = ~ecdhSk.376
        ~idKey
              = ~idKey.378
        ~kemSk
              = ~kemSk.379
        ciphertext
              = senc(z.405,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.745^(~ecdhSk.376*x.746), rootKey.389),
                                           z.396),
                                      <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                          'msg_key'))
        kemEncap
              = encap(z.396, pqpk(~kemSk.379))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.387
        msgKeyIndicator
              = msgKeyIndicator.388
        rootKey
              = rootKey.389
        signature
              = signature.390
        theirEcdhPk
              = x.745^x.746
        theirIdPk
              = theirIdPk.392
        z     = z.396
        %i    = %i.393
        z.1   = x.745^(~ecdhSk.376*x.746)
        z.2   = verify(signature.390,
                       <'msg_sig', 
                        senc(z.405,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.745^(~ecdhSk.376*x.746), rootKey.389),
                                                   z.396),
                                              <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                                  'msg_key')), 
                        msgKeyIndicator.388, x.745^x.746, (%i.393%+%1), 
                        <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>, 
                        maybeTheirNewKemPk.387, Just(encap(z.396, pqpk(~kemSk.379))), None
                       >,
                       theirIdPk.392)
        z.3   = z.405
    
    19. $Me   = $Me.374
        $Them = $Them.375
        ~ecdhSk
              = ~ecdhSk.376
        ~idKey
              = ~idKey.378
        ~kemSk
              = ~kemSk.379
        ciphertext
              = senc(z.405,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.745^(~ecdhSk.376*x.746), rootKey.389),
                                           decap(kemEncap.385, ~kemSk.379)),
                                      <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.385
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.387
        msgKeyIndicator
              = msgKeyIndicator.388
        rootKey
              = rootKey.389
        signature
              = signature.390
        theirEcdhPk
              = x.745^x.746
        theirIdPk
              = theirIdPk.392
        z     = decap(kemEncap.385, ~kemSk.379)
        %i    = %i.393
        z.1   = x.745^(~ecdhSk.376*x.746)
        z.2   = verify(signature.390,
                       <'msg_sig', 
                        senc(z.405,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.745^(~ecdhSk.376*x.746), rootKey.389),
                                                   decap(kemEncap.385, ~kemSk.379)),
                                              <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>)),
                                  'msg_key')), 
                        msgKeyIndicator.388, x.745^x.746, (%i.393%+%1), 
                        <$Them.375, theirIdPk.392, $Me.374, pk(~idKey.378)>, 
                        maybeTheirNewKemPk.387, Just(kemEncap.385), None>,
                       theirIdPk.392)
        z.3   = z.405
    
    20. $Me   = $Me.375
        $Them = $Them.376
        ~ecdhSk
              = ~ecdhSk.377
        ~idKey
              = ~idKey.379
        ~kemSk
              = ~kemSk.380
        ciphertext
              = senc(z.406,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.746^(x.747*inv(x.748)), rootKey.390),
                                           z.397),
                                      <$Them.376, theirIdPk.393, $Me.375, pk(~idKey.379)>)),
                          'msg_key'))
        kemEncap
              = encap(z.397, pqpk(~kemSk.380))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.388
        msgKeyIndicator
              = msgKeyIndicator.389
        rootKey
              = rootKey.390
        signature
              = signature.391
        theirEcdhPk
              = x.746^(x.747*inv((~ecdhSk.377*x.748)))
        theirIdPk
              = theirIdPk.393
        z     = z.397
        %i    = %i.394
        z.1   = x.746^(x.747*inv(x.748))
        z.2   = verify(signature.391,
                       <'msg_sig', 
                        senc(z.406,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.746^(x.747*inv(x.748)), rootKey.390),
                                                   z.397),
                                              <$Them.376, theirIdPk.393, $Me.375, pk(~idKey.379)>)),
                                  'msg_key')), 
                        msgKeyIndicator.389, x.746^(x.747*inv((~ecdhSk.377*x.748))), 
                        (%i.394%+%1), <$Them.376, theirIdPk.393, $Me.375, pk(~idKey.379)>, 
                        maybeTheirNewKemPk.388, Just(encap(z.397, pqpk(~kemSk.380))), None
                       >,
                       theirIdPk.393)
        z.3   = z.406
    
    21. $Me   = $Me.375
        $Them = $Them.376
        ~ecdhSk
              = ~ecdhSk.377
        ~idKey
              = ~idKey.379
        ~kemSk
              = ~kemSk.380
        ciphertext
              = senc(z.406,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.746^(x.747*inv(x.748)), rootKey.390),
                                           decap(kemEncap.386, ~kemSk.380)),
                                      <$Them.376, theirIdPk.393, $Me.375, pk(~idKey.379)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.386
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.388
        msgKeyIndicator
              = msgKeyIndicator.389
        rootKey
              = rootKey.390
        signature
              = signature.391
        theirEcdhPk
              = x.746^(x.747*inv((~ecdhSk.377*x.748)))
        theirIdPk
              = theirIdPk.393
        z     = decap(kemEncap.386, ~kemSk.380)
        %i    = %i.394
        z.1   = x.746^(x.747*inv(x.748))
        z.2   = verify(signature.391,
                       <'msg_sig', 
                        senc(z.406,
                             hkdf(suffix(hkdf(hkdf(hkdf(x.746^(x.747*inv(x.748)), rootKey.390),
                                                   decap(kemEncap.386, ~kemSk.380)),
                                              <$Them.376, theirIdPk.393, $Me.375, pk(~idKey.379)>)),
                                  'msg_key')), 
                        msgKeyIndicator.389, x.746^(x.747*inv((~ecdhSk.377*x.748))), 
                        (%i.394%+%1), <$Them.376, theirIdPk.393, $Me.375, pk(~idKey.379)>, 
                        maybeTheirNewKemPk.388, Just(kemEncap.386), None>,
                       theirIdPk.393)
        z.3   = z.406
    
    22. $Me   = $Me.375
        $Them = $Them.376
        ~idKey
              = ~idKey.379
        ~kemSk
              = ~kemSk.380
        ciphertext
              = senc(z.406,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.390), z.397),
                                      <$Them.376, pk(x.748), $Me.375, pk(~idKey.379)>)),
                          'msg_key'))
        kemEncap
              = encap(z.397, pqpk(~kemSk.380))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.388
        msgKeyIndicator
              = msgKeyIndicator.389
        rootKey
              = rootKey.390
        signature
              = sign(<'msg_sig', 
                      senc(z.406,
                           hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.390), z.397),
                                            <$Them.376, pk(x.748), $Me.375, pk(~idKey.379)>)),
                                'msg_key')), 
                      msgKeyIndicator.389, DH_neutral, (%i.394%+%1), 
                      <$Them.376, pk(x.748), $Me.375, pk(~idKey.379)>, 
                      maybeTheirNewKemPk.388, Just(encap(z.397, pqpk(~kemSk.380))), None
                     >,
                     x.748)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.748)
        z     = z.397
        %i    = %i.394
        z.1   = DH_neutral
        z.2   = true
        z.3   = z.406
    
    23. $Me   = $Me.375
        $Them = $Them.376
        ~idKey
              = ~idKey.379
        ~kemSk
              = ~kemSk.380
        ciphertext
              = senc(z.406,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.390),
                                           decap(kemEncap.386, ~kemSk.380)),
                                      <$Them.376, pk(x.748), $Me.375, pk(~idKey.379)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.386
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.388
        msgKeyIndicator
              = msgKeyIndicator.389
        rootKey
              = rootKey.390
        signature
              = sign(<'msg_sig', 
                      senc(z.406,
                           hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.390),
                                                 decap(kemEncap.386, ~kemSk.380)),
                                            <$Them.376, pk(x.748), $Me.375, pk(~idKey.379)>)),
                                'msg_key')), 
                      msgKeyIndicator.389, DH_neutral, (%i.394%+%1), 
                      <$Them.376, pk(x.748), $Me.375, pk(~idKey.379)>, 
                      maybeTheirNewKemPk.388, Just(kemEncap.386), None>,
                     x.748)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.748)
        z     = decap(kemEncap.386, ~kemSk.380)
        %i    = %i.394
        z.1   = DH_neutral
        z.2   = true
        z.3   = z.406
    
    24. $Me   = $Me.376
        $Them = $Them.377
        ~ecdhSk
              = ~ecdhSk.378
        ~idKey
              = ~idKey.380
        ~kemSk
              = ~kemSk.381
        ciphertext
              = senc(z.407,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.399, rootKey.391), z.398),
                                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                          'msg_key'))
        kemEncap
              = encap(z.398, pqpk(~kemSk.381))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.389
        msgKeyIndicator
              = msgKeyIndicator.390
        rootKey
              = rootKey.391
        signature
              = sign(<'msg_sig', 
                      senc(z.407,
                           hkdf(suffix(hkdf(hkdf(hkdf(z.399, rootKey.391), z.398),
                                            <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                                'msg_key')), 
                      msgKeyIndicator.390, z.399^inv(~ecdhSk.378), (%i.395%+%1), 
                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>, 
                      maybeTheirNewKemPk.389, Just(encap(z.398, pqpk(~kemSk.381))), None
                     >,
                     x.750)
        theirEcdhPk
              = z.399^inv(~ecdhSk.378)
        theirIdPk
              = pk(x.750)
        z     = z.398
        %i    = %i.395
        z.1   = z.399
        z.2   = true
        z.3   = z.407
    
    25. $Me   = $Me.376
        $Them = $Them.377
        ~ecdhSk
              = ~ecdhSk.378
        ~idKey
              = ~idKey.380
        ~kemSk
              = ~kemSk.381
        ciphertext
              = senc(z.407,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.399, rootKey.391),
                                           decap(kemEncap.387, ~kemSk.381)),
                                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.387
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.389
        msgKeyIndicator
              = msgKeyIndicator.390
        rootKey
              = rootKey.391
        signature
              = sign(<'msg_sig', 
                      senc(z.407,
                           hkdf(suffix(hkdf(hkdf(hkdf(z.399, rootKey.391),
                                                 decap(kemEncap.387, ~kemSk.381)),
                                            <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                                'msg_key')), 
                      msgKeyIndicator.390, z.399^inv(~ecdhSk.378), (%i.395%+%1), 
                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>, 
                      maybeTheirNewKemPk.389, Just(kemEncap.387), None>,
                     x.750)
        theirEcdhPk
              = z.399^inv(~ecdhSk.378)
        theirIdPk
              = pk(x.750)
        z     = decap(kemEncap.387, ~kemSk.381)
        %i    = %i.395
        z.1   = z.399
        z.2   = true
        z.3   = z.407
    
    26. $Me   = $Me.376
        $Them = $Them.377
        ~ecdhSk
              = ~ecdhSk.378
        ~idKey
              = ~idKey.380
        ~kemSk
              = ~kemSk.381
        ciphertext
              = senc(z.407,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.393^~ecdhSk.378,
                                                rootKey.391),
                                           z.398),
                                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                          'msg_key'))
        kemEncap
              = encap(z.398, pqpk(~kemSk.381))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.389
        msgKeyIndicator
              = msgKeyIndicator.390
        rootKey
              = rootKey.391
        signature
              = sign(<'msg_sig', 
                      senc(z.407,
                           hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.393^~ecdhSk.378,
                                                      rootKey.391),
                                                 z.398),
                                            <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                                'msg_key')), 
                      msgKeyIndicator.390, theirEcdhPk.393, (%i.395%+%1), 
                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>, 
                      maybeTheirNewKemPk.389, Just(encap(z.398, pqpk(~kemSk.381))), None
                     >,
                     x.750)
        theirEcdhPk
              = theirEcdhPk.393
        theirIdPk
              = pk(x.750)
        z     = z.398
        %i    = %i.395
        z.1   = theirEcdhPk.393^~ecdhSk.378
        z.2   = true
        z.3   = z.407
    
    27. $Me   = $Me.376
        $Them = $Them.377
        ~ecdhSk
              = ~ecdhSk.378
        ~idKey
              = ~idKey.380
        ~kemSk
              = ~kemSk.381
        ciphertext
              = senc(z.407,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.393^~ecdhSk.378,
                                                rootKey.391),
                                           decap(kemEncap.387, ~kemSk.381)),
                                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.387
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.389
        msgKeyIndicator
              = msgKeyIndicator.390
        rootKey
              = rootKey.391
        signature
              = sign(<'msg_sig', 
                      senc(z.407,
                           hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.393^~ecdhSk.378,
                                                      rootKey.391),
                                                 decap(kemEncap.387, ~kemSk.381)),
                                            <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>)),
                                'msg_key')), 
                      msgKeyIndicator.390, theirEcdhPk.393, (%i.395%+%1), 
                      <$Them.377, pk(x.750), $Me.376, pk(~idKey.380)>, 
                      maybeTheirNewKemPk.389, Just(kemEncap.387), None>,
                     x.750)
        theirEcdhPk
              = theirEcdhPk.393
        theirIdPk
              = pk(x.750)
        z     = decap(kemEncap.387, ~kemSk.381)
        %i    = %i.395
        z.1   = theirEcdhPk.393^~ecdhSk.378
        z.2   = true
        z.3   = z.407
    
    28. $Me   = $Me.377
        $Them = $Them.378
        ~ecdhSk
              = ~ecdhSk.379
        ~idKey
              = ~idKey.381
        ~kemSk
              = ~kemSk.382
        ciphertext
              = senc(z.408,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.748^x.749, rootKey.392), z.399),
                                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                          'msg_key'))
        kemEncap
              = encap(z.399, pqpk(~kemSk.382))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.390
        msgKeyIndicator
              = msgKeyIndicator.391
        rootKey
              = rootKey.392
        signature
              = sign(<'msg_sig', 
                      senc(z.408,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.748^x.749, rootKey.392), z.399),
                                            <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                                'msg_key')), 
                      msgKeyIndicator.391, x.748^(x.749*inv(~ecdhSk.379)), (%i.396%+%1), 
                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>, 
                      maybeTheirNewKemPk.390, Just(encap(z.399, pqpk(~kemSk.382))), None
                     >,
                     x.752)
        theirEcdhPk
              = x.748^(x.749*inv(~ecdhSk.379))
        theirIdPk
              = pk(x.752)
        z     = z.399
        %i    = %i.396
        z.1   = x.748^x.749
        z.2   = true
        z.3   = z.408
    
    29. $Me   = $Me.377
        $Them = $Them.378
        ~ecdhSk
              = ~ecdhSk.379
        ~idKey
              = ~idKey.381
        ~kemSk
              = ~kemSk.382
        ciphertext
              = senc(z.408,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.748^x.749, rootKey.392),
                                           decap(kemEncap.388, ~kemSk.382)),
                                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.388
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.390
        msgKeyIndicator
              = msgKeyIndicator.391
        rootKey
              = rootKey.392
        signature
              = sign(<'msg_sig', 
                      senc(z.408,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.748^x.749, rootKey.392),
                                                 decap(kemEncap.388, ~kemSk.382)),
                                            <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                                'msg_key')), 
                      msgKeyIndicator.391, x.748^(x.749*inv(~ecdhSk.379)), (%i.396%+%1), 
                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>, 
                      maybeTheirNewKemPk.390, Just(kemEncap.388), None>,
                     x.752)
        theirEcdhPk
              = x.748^(x.749*inv(~ecdhSk.379))
        theirIdPk
              = pk(x.752)
        z     = decap(kemEncap.388, ~kemSk.382)
        %i    = %i.396
        z.1   = x.748^x.749
        z.2   = true
        z.3   = z.408
    
    30. $Me   = $Me.377
        $Them = $Them.378
        ~ecdhSk
              = ~ecdhSk.379
        ~idKey
              = ~idKey.381
        ~kemSk
              = ~kemSk.382
        ciphertext
              = senc(z.408,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.748^inv(x.749), rootKey.392), z.399),
                                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                          'msg_key'))
        kemEncap
              = encap(z.399, pqpk(~kemSk.382))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.390
        msgKeyIndicator
              = msgKeyIndicator.391
        rootKey
              = rootKey.392
        signature
              = sign(<'msg_sig', 
                      senc(z.408,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.748^inv(x.749), rootKey.392), z.399),
                                            <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                                'msg_key')), 
                      msgKeyIndicator.391, x.748^inv((~ecdhSk.379*x.749)), (%i.396%+%1), 
                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>, 
                      maybeTheirNewKemPk.390, Just(encap(z.399, pqpk(~kemSk.382))), None
                     >,
                     x.752)
        theirEcdhPk
              = x.748^inv((~ecdhSk.379*x.749))
        theirIdPk
              = pk(x.752)
        z     = z.399
        %i    = %i.396
        z.1   = x.748^inv(x.749)
        z.2   = true
        z.3   = z.408
    
    31. $Me   = $Me.377
        $Them = $Them.378
        ~ecdhSk
              = ~ecdhSk.379
        ~idKey
              = ~idKey.381
        ~kemSk
              = ~kemSk.382
        ciphertext
              = senc(z.408,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.748^inv(x.749), rootKey.392),
                                           decap(kemEncap.388, ~kemSk.382)),
                                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.388
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.390
        msgKeyIndicator
              = msgKeyIndicator.391
        rootKey
              = rootKey.392
        signature
              = sign(<'msg_sig', 
                      senc(z.408,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.748^inv(x.749), rootKey.392),
                                                 decap(kemEncap.388, ~kemSk.382)),
                                            <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                                'msg_key')), 
                      msgKeyIndicator.391, x.748^inv((~ecdhSk.379*x.749)), (%i.396%+%1), 
                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>, 
                      maybeTheirNewKemPk.390, Just(kemEncap.388), None>,
                     x.752)
        theirEcdhPk
              = x.748^inv((~ecdhSk.379*x.749))
        theirIdPk
              = pk(x.752)
        z     = decap(kemEncap.388, ~kemSk.382)
        %i    = %i.396
        z.1   = x.748^inv(x.749)
        z.2   = true
        z.3   = z.408
    
    32. $Me   = $Me.377
        $Them = $Them.378
        ~ecdhSk
              = ~ecdhSk.379
        ~idKey
              = ~idKey.381
        ~kemSk
              = ~kemSk.382
        ciphertext
              = senc(z.408,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.748^(~ecdhSk.379*x.749), rootKey.392),
                                           z.399),
                                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                          'msg_key'))
        kemEncap
              = encap(z.399, pqpk(~kemSk.382))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.390
        msgKeyIndicator
              = msgKeyIndicator.391
        rootKey
              = rootKey.392
        signature
              = sign(<'msg_sig', 
                      senc(z.408,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.748^(~ecdhSk.379*x.749), rootKey.392),
                                                 z.399),
                                            <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                                'msg_key')), 
                      msgKeyIndicator.391, x.748^x.749, (%i.396%+%1), 
                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>, 
                      maybeTheirNewKemPk.390, Just(encap(z.399, pqpk(~kemSk.382))), None
                     >,
                     x.752)
        theirEcdhPk
              = x.748^x.749
        theirIdPk
              = pk(x.752)
        z     = z.399
        %i    = %i.396
        z.1   = x.748^(~ecdhSk.379*x.749)
        z.2   = true
        z.3   = z.408
    
    33. $Me   = $Me.377
        $Them = $Them.378
        ~ecdhSk
              = ~ecdhSk.379
        ~idKey
              = ~idKey.381
        ~kemSk
              = ~kemSk.382
        ciphertext
              = senc(z.408,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.748^(~ecdhSk.379*x.749), rootKey.392),
                                           decap(kemEncap.388, ~kemSk.382)),
                                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.388
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.390
        msgKeyIndicator
              = msgKeyIndicator.391
        rootKey
              = rootKey.392
        signature
              = sign(<'msg_sig', 
                      senc(z.408,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.748^(~ecdhSk.379*x.749), rootKey.392),
                                                 decap(kemEncap.388, ~kemSk.382)),
                                            <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>)),
                                'msg_key')), 
                      msgKeyIndicator.391, x.748^x.749, (%i.396%+%1), 
                      <$Them.378, pk(x.752), $Me.377, pk(~idKey.381)>, 
                      maybeTheirNewKemPk.390, Just(kemEncap.388), None>,
                     x.752)
        theirEcdhPk
              = x.748^x.749
        theirIdPk
              = pk(x.752)
        z     = decap(kemEncap.388, ~kemSk.382)
        %i    = %i.396
        z.1   = x.748^(~ecdhSk.379*x.749)
        z.2   = true
        z.3   = z.408
    
    34. $Me   = $Me.378
        $Them = $Them.379
        ~ecdhSk
              = ~ecdhSk.380
        ~idKey
              = ~idKey.382
        ~kemSk
              = ~kemSk.383
        ciphertext
              = senc(z.409,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.749^(x.750*inv(x.751)), rootKey.393),
                                           z.400),
                                      <$Them.379, pk(x.754), $Me.378, pk(~idKey.382)>)),
                          'msg_key'))
        kemEncap
              = encap(z.400, pqpk(~kemSk.383))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.391
        msgKeyIndicator
              = msgKeyIndicator.392
        rootKey
              = rootKey.393
        signature
              = sign(<'msg_sig', 
                      senc(z.409,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.749^(x.750*inv(x.751)), rootKey.393),
                                                 z.400),
                                            <$Them.379, pk(x.754), $Me.378, pk(~idKey.382)>)),
                                'msg_key')), 
                      msgKeyIndicator.392, x.749^(x.750*inv((~ecdhSk.380*x.751))), 
                      (%i.397%+%1), <$Them.379, pk(x.754), $Me.378, pk(~idKey.382)>, 
                      maybeTheirNewKemPk.391, Just(encap(z.400, pqpk(~kemSk.383))), None
                     >,
                     x.754)
        theirEcdhPk
              = x.749^(x.750*inv((~ecdhSk.380*x.751)))
        theirIdPk
              = pk(x.754)
        z     = z.400
        %i    = %i.397
        z.1   = x.749^(x.750*inv(x.751))
        z.2   = true
        z.3   = z.409
    
    35. $Me   = $Me.378
        $Them = $Them.379
        ~ecdhSk
              = ~ecdhSk.380
        ~idKey
              = ~idKey.382
        ~kemSk
              = ~kemSk.383
        ciphertext
              = senc(z.409,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.749^(x.750*inv(x.751)), rootKey.393),
                                           decap(kemEncap.389, ~kemSk.383)),
                                      <$Them.379, pk(x.754), $Me.378, pk(~idKey.382)>)),
                          'msg_key'))
        kemEncap
              = kemEncap.389
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.391
        msgKeyIndicator
              = msgKeyIndicator.392
        rootKey
              = rootKey.393
        signature
              = sign(<'msg_sig', 
                      senc(z.409,
                           hkdf(suffix(hkdf(hkdf(hkdf(x.749^(x.750*inv(x.751)), rootKey.393),
                                                 decap(kemEncap.389, ~kemSk.383)),
                                            <$Them.379, pk(x.754), $Me.378, pk(~idKey.382)>)),
                                'msg_key')), 
                      msgKeyIndicator.392, x.749^(x.750*inv((~ecdhSk.380*x.751))), 
                      (%i.397%+%1), <$Them.379, pk(x.754), $Me.378, pk(~idKey.382)>, 
                      maybeTheirNewKemPk.391, Just(kemEncap.389), None>,
                     x.754)
        theirEcdhPk
              = x.749^(x.750*inv((~ecdhSk.380*x.751)))
        theirIdPk
              = pk(x.754)
        z     = decap(kemEncap.389, ~kemSk.383)
        %i    = %i.397
        z.1   = x.749^(x.750*inv(x.751))
        z.2   = true
        z.3   = z.409
    
    36. $Me   = $Me.379
        $Them = $Them.380
        ~ecdhSk
              = ~ecdhSk.381
        ~idKey
              = ~idKey.383
        ~kemSk
              = ~kemSk.384
        ciphertext
              = ciphertext.385
        kemEncap
              = encap(z.401, pqpk(~kemSk.384))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.392
        msgKeyIndicator
              = msgKeyIndicator.393
        rootKey
              = rootKey.394
        signature
              = signature.395
        theirEcdhPk
              = x.755^x.756
        theirIdPk
              = theirIdPk.397
        z     = z.401
        %i    = %i.398
        z.1   = x.755^(~ecdhSk.381*x.756)
        z.2   = verify(signature.395,
                       <'msg_sig', ciphertext.385, msgKeyIndicator.393, x.755^x.756, 
                        (%i.398%+%1), <$Them.380, theirIdPk.397, $Me.379, pk(~idKey.383)>, 
                        maybeTheirNewKemPk.392, Just(encap(z.401, pqpk(~kemSk.384))), None
                       >,
                       theirIdPk.397)
        z.3   = sdec(ciphertext.385,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.755^(~ecdhSk.381*x.756), rootKey.394),
                                           z.401),
                                      <$Them.380, theirIdPk.397, $Me.379, pk(~idKey.383)>)),
                          'msg_key'))
    
    37. $Me   = $Me.382
        $Them = $Them.383
        ~ecdhSk
              = ~ecdhSk.384
        ~idKey
              = ~idKey.386
        ~kemSk
              = ~kemSk.387
        ciphertext
              = ciphertext.388
        kemEncap
              = kemEncap.393
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.395
        msgKeyIndicator
              = msgKeyIndicator.396
        rootKey
              = rootKey.397
        signature
              = signature.398
        theirEcdhPk
              = x.761^inv((~ecdhSk.384*x.762))
        theirIdPk
              = theirIdPk.400
        z     = decap(kemEncap.393, ~kemSk.387)
        %i    = %i.401
        z.1   = x.761^inv(x.762)
        z.2   = verify(signature.398,
                       <'msg_sig', ciphertext.388, msgKeyIndicator.396, 
                        x.761^inv((~ecdhSk.384*x.762)), (%i.401%+%1), 
                        <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>, 
                        maybeTheirNewKemPk.395, Just(kemEncap.393), None>,
                       theirIdPk.400)
        z.3   = sdec(ciphertext.388,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.761^inv(x.762), rootKey.397),
                                           decap(kemEncap.393, ~kemSk.387)),
                                      <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>)),
                          'msg_key'))
    
    38. $Me   = $Me.382
        $Them = $Them.383
        ~ecdhSk
              = ~ecdhSk.384
        ~idKey
              = ~idKey.386
        ~kemSk
              = ~kemSk.387
        ciphertext
              = ciphertext.388
        kemEncap
              = kemEncap.393
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.395
        msgKeyIndicator
              = msgKeyIndicator.396
        rootKey
              = rootKey.397
        signature
              = signature.398
        theirEcdhPk
              = x.761^(x.762*inv(~ecdhSk.384))
        theirIdPk
              = theirIdPk.400
        z     = decap(kemEncap.393, ~kemSk.387)
        %i    = %i.401
        z.1   = x.761^x.762
        z.2   = verify(signature.398,
                       <'msg_sig', ciphertext.388, msgKeyIndicator.396, 
                        x.761^(x.762*inv(~ecdhSk.384)), (%i.401%+%1), 
                        <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>, 
                        maybeTheirNewKemPk.395, Just(kemEncap.393), None>,
                       theirIdPk.400)
        z.3   = sdec(ciphertext.388,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.761^x.762, rootKey.397),
                                           decap(kemEncap.393, ~kemSk.387)),
                                      <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>)),
                          'msg_key'))
    
    39. $Me   = $Me.382
        $Them = $Them.383
        ~ecdhSk
              = ~ecdhSk.384
        ~idKey
              = ~idKey.386
        ~kemSk
              = ~kemSk.387
        ciphertext
              = ciphertext.388
        kemEncap
              = encap(z.404, pqpk(~kemSk.387))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.395
        msgKeyIndicator
              = msgKeyIndicator.396
        rootKey
              = rootKey.397
        signature
              = signature.398
        theirEcdhPk
              = x.761^inv((~ecdhSk.384*x.762))
        theirIdPk
              = theirIdPk.400
        z     = z.404
        %i    = %i.401
        z.1   = x.761^inv(x.762)
        z.2   = verify(signature.398,
                       <'msg_sig', ciphertext.388, msgKeyIndicator.396, 
                        x.761^inv((~ecdhSk.384*x.762)), (%i.401%+%1), 
                        <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>, 
                        maybeTheirNewKemPk.395, Just(encap(z.404, pqpk(~kemSk.387))), None
                       >,
                       theirIdPk.400)
        z.3   = sdec(ciphertext.388,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.761^inv(x.762), rootKey.397), z.404),
                                      <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>)),
                          'msg_key'))
    
    40. $Me   = $Me.382
        $Them = $Them.383
        ~ecdhSk
              = ~ecdhSk.384
        ~idKey
              = ~idKey.386
        ~kemSk
              = ~kemSk.387
        ciphertext
              = ciphertext.388
        kemEncap
              = encap(z.404, pqpk(~kemSk.387))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.395
        msgKeyIndicator
              = msgKeyIndicator.396
        rootKey
              = rootKey.397
        signature
              = signature.398
        theirEcdhPk
              = x.761^(x.762*inv(~ecdhSk.384))
        theirIdPk
              = theirIdPk.400
        z     = z.404
        %i    = %i.401
        z.1   = x.761^x.762
        z.2   = verify(signature.398,
                       <'msg_sig', ciphertext.388, msgKeyIndicator.396, 
                        x.761^(x.762*inv(~ecdhSk.384)), (%i.401%+%1), 
                        <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>, 
                        maybeTheirNewKemPk.395, Just(encap(z.404, pqpk(~kemSk.387))), None
                       >,
                       theirIdPk.400)
        z.3   = sdec(ciphertext.388,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.761^x.762, rootKey.397), z.404),
                                      <$Them.383, theirIdPk.400, $Me.382, pk(~idKey.386)>)),
                          'msg_key'))
    
    41. $Me   = $Me.383
        $Them = $Them.384
        ~ecdhSk
              = ~ecdhSk.385
        ~idKey
              = ~idKey.387
        ~kemSk
              = ~kemSk.388
        ciphertext
              = ciphertext.389
        kemEncap
              = kemEncap.394
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.396
        msgKeyIndicator
              = msgKeyIndicator.397
        rootKey
              = rootKey.398
        signature
              = signature.399
        theirEcdhPk
              = x.762^(x.763*inv((~ecdhSk.385*x.764)))
        theirIdPk
              = theirIdPk.401
        z     = decap(kemEncap.394, ~kemSk.388)
        %i    = %i.402
        z.1   = x.762^(x.763*inv(x.764))
        z.2   = verify(signature.399,
                       <'msg_sig', ciphertext.389, msgKeyIndicator.397, 
                        x.762^(x.763*inv((~ecdhSk.385*x.764))), (%i.402%+%1), 
                        <$Them.384, theirIdPk.401, $Me.383, pk(~idKey.387)>, 
                        maybeTheirNewKemPk.396, Just(kemEncap.394), None>,
                       theirIdPk.401)
        z.3   = sdec(ciphertext.389,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.762^(x.763*inv(x.764)), rootKey.398),
                                           decap(kemEncap.394, ~kemSk.388)),
                                      <$Them.384, theirIdPk.401, $Me.383, pk(~idKey.387)>)),
                          'msg_key'))
    
    42. $Me   = $Me.383
        $Them = $Them.384
        ~ecdhSk
              = ~ecdhSk.385
        ~idKey
              = ~idKey.387
        ~kemSk
              = ~kemSk.388
        ciphertext
              = ciphertext.389
        kemEncap
              = encap(z.405, pqpk(~kemSk.388))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.396
        msgKeyIndicator
              = msgKeyIndicator.397
        rootKey
              = rootKey.398
        signature
              = signature.399
        theirEcdhPk
              = x.762^(x.763*inv((~ecdhSk.385*x.764)))
        theirIdPk
              = theirIdPk.401
        z     = z.405
        %i    = %i.402
        z.1   = x.762^(x.763*inv(x.764))
        z.2   = verify(signature.399,
                       <'msg_sig', ciphertext.389, msgKeyIndicator.397, 
                        x.762^(x.763*inv((~ecdhSk.385*x.764))), (%i.402%+%1), 
                        <$Them.384, theirIdPk.401, $Me.383, pk(~idKey.387)>, 
                        maybeTheirNewKemPk.396, Just(encap(z.405, pqpk(~kemSk.388))), None
                       >,
                       theirIdPk.401)
        z.3   = sdec(ciphertext.389,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.762^(x.763*inv(x.764)), rootKey.398),
                                           z.405),
                                      <$Them.384, theirIdPk.401, $Me.383, pk(~idKey.387)>)),
                          'msg_key'))
    
    43. $Me   = $Me.383
        $Them = $Them.384
        ~idKey
              = ~idKey.387
        ~kemSk
              = ~kemSk.388
        ciphertext
              = ciphertext.389
        kemEncap
              = kemEncap.394
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.396
        msgKeyIndicator
              = msgKeyIndicator.397
        rootKey
              = rootKey.398
        signature
              = sign(<'msg_sig', ciphertext.389, msgKeyIndicator.397, 
                      DH_neutral, (%i.402%+%1), 
                      <$Them.384, pk(x.764), $Me.383, pk(~idKey.387)>, 
                      maybeTheirNewKemPk.396, Just(kemEncap.394), None>,
                     x.764)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.764)
        z     = decap(kemEncap.394, ~kemSk.388)
        %i    = %i.402
        z.1   = DH_neutral
        z.2   = true
        z.3   = sdec(ciphertext.389,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.398),
                                           decap(kemEncap.394, ~kemSk.388)),
                                      <$Them.384, pk(x.764), $Me.383, pk(~idKey.387)>)),
                          'msg_key'))
    
    44. $Me   = $Me.383
        $Them = $Them.384
        ~idKey
              = ~idKey.387
        ~kemSk
              = ~kemSk.388
        ciphertext
              = ciphertext.389
        kemEncap
              = encap(z.405, pqpk(~kemSk.388))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.396
        msgKeyIndicator
              = msgKeyIndicator.397
        rootKey
              = rootKey.398
        signature
              = sign(<'msg_sig', ciphertext.389, msgKeyIndicator.397, 
                      DH_neutral, (%i.402%+%1), 
                      <$Them.384, pk(x.764), $Me.383, pk(~idKey.387)>, 
                      maybeTheirNewKemPk.396, Just(encap(z.405, pqpk(~kemSk.388))), None
                     >,
                     x.764)
        theirEcdhPk
              = DH_neutral
        theirIdPk
              = pk(x.764)
        z     = z.405
        %i    = %i.402
        z.1   = DH_neutral
        z.2   = true
        z.3   = sdec(ciphertext.389,
                     hkdf(suffix(hkdf(hkdf(hkdf(DH_neutral, rootKey.398), z.405),
                                      <$Them.384, pk(x.764), $Me.383, pk(~idKey.387)>)),
                          'msg_key'))
    
    45. $Me   = $Me.384
        $Them = $Them.385
        ~ecdhSk
              = ~ecdhSk.386
        ~idKey
              = ~idKey.388
        ~kemSk
              = ~kemSk.389
        ciphertext
              = ciphertext.390
        kemEncap
              = kemEncap.395
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.397
        msgKeyIndicator
              = msgKeyIndicator.398
        rootKey
              = rootKey.399
        signature
              = sign(<'msg_sig', ciphertext.390, msgKeyIndicator.398, 
                      theirEcdhPk.401, (%i.403%+%1), 
                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>, 
                      maybeTheirNewKemPk.397, Just(kemEncap.395), None>,
                     x.766)
        theirEcdhPk
              = theirEcdhPk.401
        theirIdPk
              = pk(x.766)
        z     = decap(kemEncap.395, ~kemSk.389)
        %i    = %i.403
        z.1   = theirEcdhPk.401^~ecdhSk.386
        z.2   = true
        z.3   = sdec(ciphertext.390,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.401^~ecdhSk.386,
                                                rootKey.399),
                                           decap(kemEncap.395, ~kemSk.389)),
                                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>)),
                          'msg_key'))
    
    46. $Me   = $Me.384
        $Them = $Them.385
        ~ecdhSk
              = ~ecdhSk.386
        ~idKey
              = ~idKey.388
        ~kemSk
              = ~kemSk.389
        ciphertext
              = ciphertext.390
        kemEncap
              = kemEncap.395
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.397
        msgKeyIndicator
              = msgKeyIndicator.398
        rootKey
              = rootKey.399
        signature
              = sign(<'msg_sig', ciphertext.390, msgKeyIndicator.398, 
                      z.407^inv(~ecdhSk.386), (%i.403%+%1), 
                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>, 
                      maybeTheirNewKemPk.397, Just(kemEncap.395), None>,
                     x.766)
        theirEcdhPk
              = z.407^inv(~ecdhSk.386)
        theirIdPk
              = pk(x.766)
        z     = decap(kemEncap.395, ~kemSk.389)
        %i    = %i.403
        z.1   = z.407
        z.2   = true
        z.3   = sdec(ciphertext.390,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.407, rootKey.399),
                                           decap(kemEncap.395, ~kemSk.389)),
                                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>)),
                          'msg_key'))
    
    47. $Me   = $Me.384
        $Them = $Them.385
        ~ecdhSk
              = ~ecdhSk.386
        ~idKey
              = ~idKey.388
        ~kemSk
              = ~kemSk.389
        ciphertext
              = ciphertext.390
        kemEncap
              = encap(z.406, pqpk(~kemSk.389))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.397
        msgKeyIndicator
              = msgKeyIndicator.398
        rootKey
              = rootKey.399
        signature
              = sign(<'msg_sig', ciphertext.390, msgKeyIndicator.398, 
                      theirEcdhPk.401, (%i.403%+%1), 
                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>, 
                      maybeTheirNewKemPk.397, Just(encap(z.406, pqpk(~kemSk.389))), None
                     >,
                     x.766)
        theirEcdhPk
              = theirEcdhPk.401
        theirIdPk
              = pk(x.766)
        z     = z.406
        %i    = %i.403
        z.1   = theirEcdhPk.401^~ecdhSk.386
        z.2   = true
        z.3   = sdec(ciphertext.390,
                     hkdf(suffix(hkdf(hkdf(hkdf(theirEcdhPk.401^~ecdhSk.386,
                                                rootKey.399),
                                           z.406),
                                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>)),
                          'msg_key'))
    
    48. $Me   = $Me.384
        $Them = $Them.385
        ~ecdhSk
              = ~ecdhSk.386
        ~idKey
              = ~idKey.388
        ~kemSk
              = ~kemSk.389
        ciphertext
              = ciphertext.390
        kemEncap
              = encap(z.406, pqpk(~kemSk.389))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.397
        msgKeyIndicator
              = msgKeyIndicator.398
        rootKey
              = rootKey.399
        signature
              = sign(<'msg_sig', ciphertext.390, msgKeyIndicator.398, 
                      z.407^inv(~ecdhSk.386), (%i.403%+%1), 
                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>, 
                      maybeTheirNewKemPk.397, Just(encap(z.406, pqpk(~kemSk.389))), None
                     >,
                     x.766)
        theirEcdhPk
              = z.407^inv(~ecdhSk.386)
        theirIdPk
              = pk(x.766)
        z     = z.406
        %i    = %i.403
        z.1   = z.407
        z.2   = true
        z.3   = sdec(ciphertext.390,
                     hkdf(suffix(hkdf(hkdf(hkdf(z.407, rootKey.399), z.406),
                                      <$Them.385, pk(x.766), $Me.384, pk(~idKey.388)>)),
                          'msg_key'))
    
    49. $Me   = $Me.385
        $Them = $Them.386
        ~ecdhSk
              = ~ecdhSk.387
        ~idKey
              = ~idKey.389
        ~kemSk
              = ~kemSk.390
        ciphertext
              = ciphertext.391
        kemEncap
              = kemEncap.396
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.398
        msgKeyIndicator
              = msgKeyIndicator.399
        rootKey
              = rootKey.400
        signature
              = sign(<'msg_sig', ciphertext.391, msgKeyIndicator.399, 
                      x.765^x.766, (%i.404%+%1), 
                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>, 
                      maybeTheirNewKemPk.398, Just(kemEncap.396), None>,
                     x.768)
        theirEcdhPk
              = x.765^x.766
        theirIdPk
              = pk(x.768)
        z     = decap(kemEncap.396, ~kemSk.390)
        %i    = %i.404
        z.1   = x.765^(~ecdhSk.387*x.766)
        z.2   = true
        z.3   = sdec(ciphertext.391,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.765^(~ecdhSk.387*x.766), rootKey.400),
                                           decap(kemEncap.396, ~kemSk.390)),
                                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>)),
                          'msg_key'))
    
    50. $Me   = $Me.385
        $Them = $Them.386
        ~ecdhSk
              = ~ecdhSk.387
        ~idKey
              = ~idKey.389
        ~kemSk
              = ~kemSk.390
        ciphertext
              = ciphertext.391
        kemEncap
              = kemEncap.396
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.398
        msgKeyIndicator
              = msgKeyIndicator.399
        rootKey
              = rootKey.400
        signature
              = sign(<'msg_sig', ciphertext.391, msgKeyIndicator.399, 
                      x.765^inv((~ecdhSk.387*x.766)), (%i.404%+%1), 
                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>, 
                      maybeTheirNewKemPk.398, Just(kemEncap.396), None>,
                     x.768)
        theirEcdhPk
              = x.765^inv((~ecdhSk.387*x.766))
        theirIdPk
              = pk(x.768)
        z     = decap(kemEncap.396, ~kemSk.390)
        %i    = %i.404
        z.1   = x.765^inv(x.766)
        z.2   = true
        z.3   = sdec(ciphertext.391,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.765^inv(x.766), rootKey.400),
                                           decap(kemEncap.396, ~kemSk.390)),
                                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>)),
                          'msg_key'))
    
    51. $Me   = $Me.385
        $Them = $Them.386
        ~ecdhSk
              = ~ecdhSk.387
        ~idKey
              = ~idKey.389
        ~kemSk
              = ~kemSk.390
        ciphertext
              = ciphertext.391
        kemEncap
              = kemEncap.396
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.398
        msgKeyIndicator
              = msgKeyIndicator.399
        rootKey
              = rootKey.400
        signature
              = sign(<'msg_sig', ciphertext.391, msgKeyIndicator.399, 
                      x.765^(x.766*inv(~ecdhSk.387)), (%i.404%+%1), 
                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>, 
                      maybeTheirNewKemPk.398, Just(kemEncap.396), None>,
                     x.768)
        theirEcdhPk
              = x.765^(x.766*inv(~ecdhSk.387))
        theirIdPk
              = pk(x.768)
        z     = decap(kemEncap.396, ~kemSk.390)
        %i    = %i.404
        z.1   = x.765^x.766
        z.2   = true
        z.3   = sdec(ciphertext.391,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.765^x.766, rootKey.400),
                                           decap(kemEncap.396, ~kemSk.390)),
                                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>)),
                          'msg_key'))
    
    52. $Me   = $Me.385
        $Them = $Them.386
        ~ecdhSk
              = ~ecdhSk.387
        ~idKey
              = ~idKey.389
        ~kemSk
              = ~kemSk.390
        ciphertext
              = ciphertext.391
        kemEncap
              = encap(z.407, pqpk(~kemSk.390))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.398
        msgKeyIndicator
              = msgKeyIndicator.399
        rootKey
              = rootKey.400
        signature
              = sign(<'msg_sig', ciphertext.391, msgKeyIndicator.399, 
                      x.765^x.766, (%i.404%+%1), 
                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>, 
                      maybeTheirNewKemPk.398, Just(encap(z.407, pqpk(~kemSk.390))), None
                     >,
                     x.768)
        theirEcdhPk
              = x.765^x.766
        theirIdPk
              = pk(x.768)
        z     = z.407
        %i    = %i.404
        z.1   = x.765^(~ecdhSk.387*x.766)
        z.2   = true
        z.3   = sdec(ciphertext.391,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.765^(~ecdhSk.387*x.766), rootKey.400),
                                           z.407),
                                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>)),
                          'msg_key'))
    
    53. $Me   = $Me.385
        $Them = $Them.386
        ~ecdhSk
              = ~ecdhSk.387
        ~idKey
              = ~idKey.389
        ~kemSk
              = ~kemSk.390
        ciphertext
              = ciphertext.391
        kemEncap
              = encap(z.407, pqpk(~kemSk.390))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.398
        msgKeyIndicator
              = msgKeyIndicator.399
        rootKey
              = rootKey.400
        signature
              = sign(<'msg_sig', ciphertext.391, msgKeyIndicator.399, 
                      x.765^inv((~ecdhSk.387*x.766)), (%i.404%+%1), 
                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>, 
                      maybeTheirNewKemPk.398, Just(encap(z.407, pqpk(~kemSk.390))), None
                     >,
                     x.768)
        theirEcdhPk
              = x.765^inv((~ecdhSk.387*x.766))
        theirIdPk
              = pk(x.768)
        z     = z.407
        %i    = %i.404
        z.1   = x.765^inv(x.766)
        z.2   = true
        z.3   = sdec(ciphertext.391,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.765^inv(x.766), rootKey.400), z.407),
                                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>)),
                          'msg_key'))
    
    54. $Me   = $Me.385
        $Them = $Them.386
        ~ecdhSk
              = ~ecdhSk.387
        ~idKey
              = ~idKey.389
        ~kemSk
              = ~kemSk.390
        ciphertext
              = ciphertext.391
        kemEncap
              = encap(z.407, pqpk(~kemSk.390))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.398
        msgKeyIndicator
              = msgKeyIndicator.399
        rootKey
              = rootKey.400
        signature
              = sign(<'msg_sig', ciphertext.391, msgKeyIndicator.399, 
                      x.765^(x.766*inv(~ecdhSk.387)), (%i.404%+%1), 
                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>, 
                      maybeTheirNewKemPk.398, Just(encap(z.407, pqpk(~kemSk.390))), None
                     >,
                     x.768)
        theirEcdhPk
              = x.765^(x.766*inv(~ecdhSk.387))
        theirIdPk
              = pk(x.768)
        z     = z.407
        %i    = %i.404
        z.1   = x.765^x.766
        z.2   = true
        z.3   = sdec(ciphertext.391,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.765^x.766, rootKey.400), z.407),
                                      <$Them.386, pk(x.768), $Me.385, pk(~idKey.389)>)),
                          'msg_key'))
    
    55. $Me   = $Me.386
        $Them = $Them.387
        ~ecdhSk
              = ~ecdhSk.388
        ~idKey
              = ~idKey.390
        ~kemSk
              = ~kemSk.391
        ciphertext
              = ciphertext.392
        kemEncap
              = kemEncap.397
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.399
        msgKeyIndicator
              = msgKeyIndicator.400
        rootKey
              = rootKey.401
        signature
              = sign(<'msg_sig', ciphertext.392, msgKeyIndicator.400, 
                      x.766^(x.767*inv((~ecdhSk.388*x.768))), (%i.405%+%1), 
                      <$Them.387, pk(x.770), $Me.386, pk(~idKey.390)>, 
                      maybeTheirNewKemPk.399, Just(kemEncap.397), None>,
                     x.770)
        theirEcdhPk
              = x.766^(x.767*inv((~ecdhSk.388*x.768)))
        theirIdPk
              = pk(x.770)
        z     = decap(kemEncap.397, ~kemSk.391)
        %i    = %i.405
        z.1   = x.766^(x.767*inv(x.768))
        z.2   = true
        z.3   = sdec(ciphertext.392,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.766^(x.767*inv(x.768)), rootKey.401),
                                           decap(kemEncap.397, ~kemSk.391)),
                                      <$Them.387, pk(x.770), $Me.386, pk(~idKey.390)>)),
                          'msg_key'))
    
    56. $Me   = $Me.386
        $Them = $Them.387
        ~ecdhSk
              = ~ecdhSk.388
        ~idKey
              = ~idKey.390
        ~kemSk
              = ~kemSk.391
        ciphertext
              = ciphertext.392
        kemEncap
              = encap(z.408, pqpk(~kemSk.391))
        maybeTheirNewKemPk
              = maybeTheirNewKemPk.399
        msgKeyIndicator
              = msgKeyIndicator.400
        rootKey
              = rootKey.401
        signature
              = sign(<'msg_sig', ciphertext.392, msgKeyIndicator.400, 
                      x.766^(x.767*inv((~ecdhSk.388*x.768))), (%i.405%+%1), 
                      <$Them.387, pk(x.770), $Me.386, pk(~idKey.390)>, 
                      maybeTheirNewKemPk.399, Just(encap(z.408, pqpk(~kemSk.391))), None
                     >,
                     x.770)
        theirEcdhPk
              = x.766^(x.767*inv((~ecdhSk.388*x.768)))
        theirIdPk
              = pk(x.770)
        z     = z.408
        %i    = %i.405
        z.1   = x.766^(x.767*inv(x.768))
        z.2   = true
        z.3   = sdec(ciphertext.392,
                     hkdf(suffix(hkdf(hkdf(hkdf(x.766^(x.767*inv(x.768)), rootKey.401),
                                           z.408),
                                      <$Them.387, pk(x.770), $Me.386, pk(~idKey.390)>)),
                          'msg_key'))
    // loop breaker: [1]
  */

lemma ExecutabilityPublicKeyRatchetSomeNewKEMSS:
  exists-trace
  "∃ id1 id2 i s r rk m #t1 #t2 #t3.
    (((((PublicKeyRatchetNewReceiver( id2, i, s, r, rk ) @ #t3) ∧
        (∃ decap pk. DecapKemSS( id2, s, r, decap, pk ) @ #t3)) ∧
       (MessageReceived( id2, i, s, r, m ) @ #t3)) ∧
      (PublicKeyRatchetNewSender( id1, i, s, r, rk ) @ #t1)) ∧
     (MessageSent( id1, i, s, r, m ) @ #t2)) ∧
    (¬(∃ #x. SomeCompromise( ) @ #x))"
/*
guarded formula characterizing all satisfying traces:
"∃ id1 id2 i s r rk m #t1 #t2 #t3.
  (PublicKeyRatchetNewReceiver( id2, i, s, r, rk ) @ #t3) ∧
  (MessageReceived( id2, i, s, r, m ) @ #t3) ∧
  (PublicKeyRatchetNewSender( id1, i, s, r, rk ) @ #t1) ∧
  (MessageSent( id1, i, s, r, m ) @ #t2)
 ∧
  (∃ decap pk. (DecapKemSS( id2, s, r, decap, pk ) @ #t3)) ∧
  (∀ #x. (SomeCompromise( ) @ #x) ⇒ ⊥)"
*/
simplify
solve( DecapKemSS( id2, s, r, decap, pk ) @ #t3 )
  case PublicKeyRatchetNewReceiverWithSomeNewKemSS
  solve( PublicKeyRatchetNewReceiver( ~id, i.1, $Me, $Them, rk
         ) @ #t3 )
    case PublicKeyRatchetNewReceiverWithSomeNewKemSS
    solve( PublicKeyRatchetNewSender( id1, (%i%+%1), $Me, $Me,
                                      hkdf(hkdf(hkdf(z, rootKey), decap),
                                           <$Me, pk(x), $Me, pk(~idKey)>)
           ) @ #t1 )
      case PublicKeyRatchetNewSenderNoNewKemSS
      by contradiction /* from formulas */
    next
      case PublicKeyRatchetNewSenderSomeNewKemSS
      solve( MessageReceived( ~id.1, (%i%+%1), $Me, $Me, m ) @ #t3 )
        case PublicKeyRatchetNewReceiverWithSomeNewKemSS
        solve( MessageSent( ~id, (%i%+%1), $Me, $Me, m ) @ #t2 )
          case PublicKeyRatchetNewSenderSomeNewKemSS
          solve( !KU( sign(<'msg_sig', 
                            senc(~msg,
                                 hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                                  <$Me, pk(~idKey), $Me, pk(~idKey.1)>)),
                                      'msg_key')), 
                            hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), ~kemSS),
                                                  <$Me, pk(~idKey), $Me, pk(~idKey.1)>)),
                                      'msg_key'),
                                 'msg_key_ind'), 
                            theirEcdhPk.1, (%i%+%1), <$Me, pk(~idKey), $Me, pk(~idKey.1)>, 
                            maybeTheirNewKemPk, Just(encap(~kemSS, pqpk(~kemSk))), None>,
                           ~idKey)
                 ) @ #vk.3 )
            case PublicKeyRatchetNewSenderSomeNewKemSS_case_1
            by sorry
          next
            case PublicKeyRatchetNewSenderSomeNewKemSS_case_2
            by sorry
          next
            case PublicKeyRatchetNewSenderSomeNewKemSS_case_3
            solve( !KU( sign(<'msg_sig', ciphertext, 
                              hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk.1*~ecdhSk.2),
                                                              rootKey),
                                                         '0'),
                                                    <$Me, pk(~idKey.1), $Me, pk(~idKey)>)),
                                        'msg_key'),
                                   'msg_key_ind'), 
                              'g'^~ecdhSk.2, (%i%+%1), <$Me, pk(~idKey.1), $Me, pk(~idKey)>, 
                              Just(pqpk(~kemSk)), None, None>,
                             ~idKey.1)
                   ) @ #vk.19 )
              case PublicKeyRatchetNewSenderNoNewKemSS_case_1
              solve( !KU( hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk*~ecdhSk.2
                                                              ),
                                                          prefix(hkdf(hkdf(hkdf('g'^(~ecdhSk.1*
                                                                                     ~ecdhSk.2),
                                                                                prefix(hkdf(hkdf(hkdf('g'^(
                                                                                                           ~preKey*
                                                                                                           ~ecdhSk.1
                                                                                                          ),
                                                                                                      '0'),
                                                                                                 kemSS.1),
                                                                                            <$Me, 
                                                                                             pk(~idKey), 
                                                                                             $Me, 
                                                                                             pk(~idKey)
                                                                                            >))),
                                                                           '0'),
                                                                      <$Me, pk(~idKey), $Me, 
                                                                       pk(~idKey)>))),
                                                     ~kemSS),
                                                <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                    'msg_key'),
                               'msg_key_ind')
                     ) @ #vk.10 )
                case ChainKeyLeak_case_01
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_02
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_03
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_04
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_05
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_06
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_07
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_08
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_09
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_10
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_11
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_12
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_13
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_14
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_15
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_16
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_17
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_18
                by contradiction /* from formulas */
              next
                case ChainKeyLeak_case_19
                by contradiction /* from formulas */
              next
                case PublicKeyRatchetNewSenderSomeNewKemSS
                solve( !KU( senc(~msg,
                                 hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk*~ecdhSk.2),
                                                            prefix(hkdf(hkdf(hkdf('g'^(~ecdhSk.1*
                                                                                       ~ecdhSk.2),
                                                                                  prefix(hkdf(hkdf(hkdf('g'^(
                                                                                                             ~preKey*
                                                                                                             ~ecdhSk.1
                                                                                                            ),
                                                                                                        '0'),
                                                                                                   kemSS.1),
                                                                                              <$Me, 
                                                                                               pk(~idKey), 
                                                                                               $Me, 
                                                                                               pk(~idKey)
                                                                                              >))),
                                                                             '0'),
                                                                        <$Me, pk(~idKey), $Me, 
                                                                         pk(~idKey)>))),
                                                       ~kemSS),
                                                  <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                      'msg_key'))
                       ) @ #vk.7 )
                  case PublicKeyRatchetNewSenderSomeNewKemSS
                  solve( !KU( sign(<'msg_sig', ciphertext, 
                                    hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1), '0'),
                                                               kemSS.1),
                                                          <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                              'msg_key'),
                                         'msg_key_ind'), 
                                    'g'^~ecdhSk.1, %1, <$Me, pk(~idKey), $Me, pk(~idKey)>, None, 
                                    Just(kemEncap), 
                                    Just(h(<'g'^~preKey, pqpk(~kemPreKey), 
                                            sign(<'nf_reg', pqpk(~kemPreKey), 'g'^~preKey>, ~idKey)
                                           >))
                                   >,
                                   ~idKey)
                         ) @ #vk.34 )
                    case SessionStartAsASender
                    solve( Session( ~id.1, (%1%+%1), 'S', $Me, ~ecdhSk.2, ~kemSk, $Me,
                                    pk(~idKey), discard1.1, maybeTheirKemPk, None, discard2.1,
                                    discard3.1,
                                    prefix(hkdf(hkdf(hkdf('g'^(~ecdhSk.1*~ecdhSk.2),
                                                          prefix(hkdf(hkdf(hkdf('g'^(~preKey*
                                                                                     ~ecdhSk.1),
                                                                                '0'),
                                                                           ~kemSS.1),
                                                                      <$Me, pk(~idKey), $Me, 
                                                                       pk(~idKey)>))),
                                                     '0'),
                                                <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                    discard4
                           ) ▶₁ #t3 )
                      case PublicKeyRatchetNewSenderNoNewKemSS
                      solve( !KU( hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk.1*
                                                                       ~ecdhSk.2),
                                                                  prefix(hkdf(hkdf(hkdf('g'^(
                                                                                             ~preKey*
                                                                                             ~ecdhSk.1
                                                                                            ),
                                                                                        '0'),
                                                                                   ~kemSS.1),
                                                                              <$Me, pk(~idKey), 
                                                                               $Me, pk(~idKey)>))),
                                                             '0'),
                                                        <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                            'msg_key'),
                                       'msg_key_ind')
                             ) @ #vk.33 )
                        case ChainKeyLeak_case_01
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_02
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_03
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_04
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_05
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_06
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_07
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_08
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_09
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_10
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_11
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_12
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_13
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_14
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_15
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_16
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_17
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_18
                        by contradiction /* from formulas */
                      next
                        case ChainKeyLeak_case_19
                        by contradiction /* from formulas */
                      next
                        case PublicKeyRatchetNewSenderNoNewKemSS_case_1
                        solve( !KU( senc(~z,
                                         hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk.1*~ecdhSk.2),
                                                                    prefix(hkdf(hkdf(hkdf('g'^(
                                                                                               ~preKey*
                                                                                               ~ecdhSk.1
                                                                                              ),
                                                                                          '0'),
                                                                                     ~kemSS.1),
                                                                                <$Me, pk(~idKey), 
                                                                                 $Me, pk(~idKey)
                                                                                >))),
                                                               '0'),
                                                          <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                              'msg_key'))
                               ) @ #vk.31 )
                          case PublicKeyRatchetNewSenderNoNewKemSS
                          solve( Session( ~id, %1, 'S', $Me, ~ecdhSk.1, ~oldKemSk, $Me,
                                          pk(~idKey), discard1.1, discard1, None, discard2,
                                          discard3,
                                          prefix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1), '0'),
                                                           ~kemSS.1),
                                                      <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                          discard2.1
                                 ) ▶₁ #vr.3 )
                            case SessionStartAsASender
                            solve( !KU( hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1
                                                                            ),
                                                                        '0'),
                                                                   ~kemSS.1),
                                                              <$Me, pk(~idKey), $Me, pk(~idKey)>)),
                                                  'msg_key'),
                                             'msg_key_ind')
                                   ) @ #vk.38 )
                              case ChainKeyLeak_case_01
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_02
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_03
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_04
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_05
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_06
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_07
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_08
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_09
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_10
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_11
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_12
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_13
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_14
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_15
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_16
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_17
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_18
                              by contradiction /* from formulas */
                            next
                              case ChainKeyLeak_case_19
                              by contradiction /* from formulas */
                            next
                              case SendSymmetricRatchet
                              by solve( Session( ~id.2, %i, 'S', $Me.1, ~ecdhSk.3, ~kemSk.1,
                                                 $Them, theirIdPk, theirEcdhPk, maybeTheirKemPk,
                                                 maybeTheirNewKemPk, kemSS.2, encapPk, rootKey,
                                                 suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1),
                                                                       '0'),
                                                                  ~kemSS.1),
                                                             <$Me, pk(~idKey), $Me, pk(~idKey)>))
                                        ) ▶₂ #vr.25 )
                            next
                              case SessionStartAsASender
                              solve( !KU( senc(~z.1,
                                               hkdf(suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1),
                                                                          '0'),
                                                                     ~kemSS.1),
                                                                <$Me, pk(~idKey), $Me, pk(~idKey)
                                                                >)),
                                                    'msg_key'))
                                     ) @ #vk.36 )
                                case SessionStartAsASender
                                solve( !KU( Just(h(<'g'^~preKey, pqpk(~kemPreKey), 
                                                    sign(<'nf_reg', pqpk(~kemPreKey), 'g'^~preKey>,
                                                         ~idKey)
                                                   >))
                                       ) @ #vk.41 )
                                  case SessionStartAsASender
                                  solve( !KU( Just(encap(~kemSS.1, pqpk(~kemPreKey))) ) @ #vk.41 )
                                    case SessionStartAsASender
                                    solve( !KU( Just(encap(~kemSS, pqpk(~kemSk))) ) @ #vk.32 )
                                      case PublicKeyRatchetNewSenderSomeNewKemSS
                                      solve( !KU( Just(pqpk(~newKemSk)) ) @ #vk.32 )
                                        case PublicKeyRatchetNewSenderSomeNewKemSS
                                        solve( !IdentityKey( $Me, ~idKey ) ▶₀ #t3 )
                                          case UserKeyGen
                                          solve( !KU( Just(pqpk(~kemSk)) ) @ #vk.39 )
                                            case PublicKeyRatchetNewSenderNoNewKemSS
                                            solve( !KU( 'g'^~ecdhSk.2 ) @ #vk.38 )
                                              case PublicKeyRatchetNewSenderNoNewKemSS_case_1
                                              solve( !KU( 'g'^~ecdhSk.1 ) @ #vk.40 )
                                                case SendSymmetricRatchet
                                                by sorry
                                              next
                                                case SessionStartAsASender_case_1
                                                solve( !KU( 'g'^~ecdhSk ) @ #vk.36 )
                                                  case PublicKeyRatchetNewSenderSomeNewKemSS_case_1
                                                  SOLVED // trace found
                                                next
                                                  case PublicKeyRatchetNewSenderSomeNewKemSS_case_2
                                                  SOLVED // trace found
                                                next
                                                  case SendSymmetricRatchet
                                                  by sorry
                                                next
                                                  case c_exp
                                                  by sorry
                                                qed
                                              next
                                                case SessionStartAsASender_case_2
                                                by sorry
                                              next
                                                case c_exp
                                                by sorry
                                              qed
                                            next
                                              case PublicKeyRatchetNewSenderNoNewKemSS_case_2
                                              by sorry
                                            next
                                              case SendSymmetricRatchet
                                              by sorry
                                            next
                                              case c_exp
                                              by sorry
                                            qed
                                          next
                                            case c_Just
                                            by sorry
                                          qed
                                        qed
                                      next
                                        case c_Just
                                        by sorry
                                      qed
                                    next
                                      case c_Just
                                      by sorry
                                    qed
                                  next
                                    case c_Just
                                    by sorry
                                  qed
                                next
                                  case c_Just
                                  by sorry
                                qed
                              next
                                case c_senc
                                by sorry
                              qed
                            next
                              case c_hkdf
                              by sorry
                            qed
                          qed
                        next
                          case c_senc
                          by sorry
                        qed
                      next
                        case PublicKeyRatchetNewSenderNoNewKemSS_case_2
                        by sorry
                      next
                        case PublicKeyRatchetNewSenderNoNewKemSS_case_3
                        by sorry
                      next
                        case PublicKeyRatchetNewSenderNoNewKemSS_case_4
                        by sorry
                      next
                        case PublicKeyRatchetNewSenderNoNewKemSS_case_5
                        by sorry
                      next
                        case SendSymmetricRatchet
                        by sorry
                      next
                        case c_hkdf
                        by sorry
                      qed
                    next
                      case SendSymmetricRatchet
                      by sorry
                    qed
                  next
                    case c_sign
                    by sorry
                  qed
                next
                  case c_senc
                  by sorry
                qed
              next
                case SendSymmetricRatchet
                by sorry
              next
                case c_hkdf
                by sorry
              qed
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_2
              by sorry
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_3
              by sorry
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_4
              by sorry
            next
              case c_sign
              by sorry
            qed
          next
            case PublicKeyRatchetNewSenderSomeNewKemSS_case_4
            by sorry
          next
            case PublicKeyRatchetNewSenderSomeNewKemSS_case_5
            by sorry
          next
            case PublicKeyRatchetNewSenderSomeNewKemSS_case_6
            by sorry
          next
            case c_sign
            by sorry
          qed
        qed
      qed
    qed
  qed
next
  case ReceiverStart
  by sorry
qed

lemma ExecutabilityPublicKeyRatchetNoNewKEMSS:
  exists-trace
  "∃ id1 id2 i s r rk m #t1 #t2 #t3.
    (((((PublicKeyRatchetNewReceiver( id2, i, s, r, rk ) @ #t3) ∧
        (¬(∃ decap pk. DecapKemSS( id2, s, r, decap, pk ) @ #t3))) ∧
       (MessageReceived( id2, i, s, r, m ) @ #t3)) ∧
      (PublicKeyRatchetNewSender( id1, i, s, r, rk ) @ #t1)) ∧
     (MessageSent( id1, i, s, r, m ) @ #t2)) ∧
    (¬(∃ #x. SomeCompromise( ) @ #x))"
/*
guarded formula characterizing all satisfying traces:
"∃ id1 id2 i s r rk m #t1 #t2 #t3.
  (PublicKeyRatchetNewReceiver( id2, i, s, r, rk ) @ #t3) ∧
  (MessageReceived( id2, i, s, r, m ) @ #t3) ∧
  (PublicKeyRatchetNewSender( id1, i, s, r, rk ) @ #t1) ∧
  (MessageSent( id1, i, s, r, m ) @ #t2)
 ∧
  (∀ decap pk. (DecapKemSS( id2, s, r, decap, pk ) @ #t3) ⇒ ⊥) ∧
  (∀ #x. (SomeCompromise( ) @ #x) ⇒ ⊥)"
*/
simplify
solve( PublicKeyRatchetNewReceiver( id2, i, s, r, rk ) @ #t3 )
  case PublicKeyRatchetNewReceiverNoNewKemSS
  solve( PublicKeyRatchetNewSender( id1, (%i%+%1), $Them, $Me,
                                    hkdf(hkdf(hkdf(z, rootKey), '0'),
                                         <$Them, pk(x), $Me, pk(~idKey)>)
         ) @ #t1 )
    case PublicKeyRatchetNewSenderNoNewKemSS
    solve( MessageReceived( ~id.1, (%i%+%1), $Them, $Me, m ) @ #t3 )
      case PublicKeyRatchetNewReceiverNoNewKemSS
      solve( MessageSent( ~id, (%i%+%1), $Them, $Me, m ) @ #t2 )
        case PublicKeyRatchetNewSenderNoNewKemSS
        solve( !KU( sign(<'msg_sig', 
                          senc(~msg,
                               hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                                <$Them, pk(~idKey), $Me, pk(~idKey.1)>)),
                                    'msg_key')), 
                          hkdf(hkdf(suffix(hkdf(hkdf(hkdf(z, rootKey), '0'),
                                                <$Them, pk(~idKey), $Me, pk(~idKey.1)>)),
                                    'msg_key'),
                               'msg_key_ind'), 
                          theirEcdhPk.1, (%i%+%1), <$Them, pk(~idKey), $Me, pk(~idKey.1)>, 
                          maybeTheirNewKemPk, None, None>,
                         ~idKey)
               ) @ #vk.3 )
          case PublicKeyRatchetNewSenderNoNewKemSS_case_1
          solve( !KU( sign(<'msg_sig', ciphertext, 
                            hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1), '0'),
                                                       kemSS),
                                                  <$Me, pk(~idKey.1), $Them, pk(~idKey)>)),
                                      'msg_key'),
                                 'msg_key_ind'), 
                            'g'^~ecdhSk.1, %1, <$Me, pk(~idKey.1), $Them, pk(~idKey)>, None, 
                            Just(kemEncap), 
                            Just(h(<'g'^~preKey, pqpk(~oldKemSk), 
                                    sign(<'nf_reg', pqpk(~oldKemSk), 'g'^~preKey>, ~idKey)>))
                           >,
                           ~idKey.1)
                 ) @ #vk.18 )
            case SessionStartAsASender
            solve( !KU( hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk*~ecdhSk.1
                                                            ),
                                                        prefix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1
                                                                                  ),
                                                                              '0'),
                                                                         ~kemSS),
                                                                    <$Me, pk(~idKey.1), $Them, 
                                                                     pk(~idKey)>))),
                                                   '0'),
                                              <$Them, pk(~idKey), $Me, pk(~idKey.1)>)),
                                  'msg_key'),
                             'msg_key_ind')
                   ) @ #vk.10 )
              case ChainKeyLeak_case_01
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_02
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_03
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_04
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_05
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_06
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_07
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_08
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_09
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_10
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_11
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_12
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_13
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_14
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_15
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_16
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_17
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_18
              by contradiction /* from formulas */
            next
              case ChainKeyLeak_case_19
              by contradiction /* from formulas */
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_1
              solve( !KU( senc(~msg,
                               hkdf(suffix(hkdf(hkdf(hkdf('g'^(~ecdhSk*~ecdhSk.1),
                                                          prefix(hkdf(hkdf(hkdf('g'^(~preKey*
                                                                                     ~ecdhSk.1),
                                                                                '0'),
                                                                           ~kemSS),
                                                                      <$Me, pk(~idKey.1), $Them, 
                                                                       pk(~idKey)>))),
                                                     '0'),
                                                <$Them, pk(~idKey), $Me, pk(~idKey.1)>)),
                                    'msg_key'))
                     ) @ #vk.7 )
                case PublicKeyRatchetNewSenderNoNewKemSS
                solve( Session( ~id.1, %1, 'S', $Me, ~ecdhSk.1, ~kemSk, $Them,
                                pk(~idKey), discard1, maybeTheirKemPk, None, kemSS.1, encapPk,
                                prefix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1), '0'), ~kemSS),
                                            <$Me, pk(~idKey.1), $Them, pk(~idKey)>)),
                                discard2
                       ) ▶₁ #t3 )
                  case SessionStartAsASender
                  solve( !KU( hkdf(hkdf(suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1
                                                                  ),
                                                              '0'),
                                                         ~kemSS),
                                                    <$Me, pk(~idKey.1), $Them, pk(~idKey)>)),
                                        'msg_key'),
                                   'msg_key_ind')
                         ) @ #vk.24 )
                    case ChainKeyLeak_case_01
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_02
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_03
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_04
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_05
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_06
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_07
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_08
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_09
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_10
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_11
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_12
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_13
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_14
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_15
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_16
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_17
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_18
                    by contradiction /* from formulas */
                  next
                    case ChainKeyLeak_case_19
                    by contradiction /* from formulas */
                  next
                    case SendSymmetricRatchet
                    by solve( Session( ~id.2, %i, 'S', $Me.1, ~ecdhSk.2, ~kemSk,
                                       $Them.1, theirIdPk, theirEcdhPk, maybeTheirKemPk,
                                       maybeTheirNewKemPk, kemSS.1, encapPk, rootKey,
                                       suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1), '0'), ~kemSS),
                                                   <$Me, pk(~idKey.1), $Them, pk(~idKey)>))
                              ) ▶₂ #vr.16 )
                  next
                    case SessionStartAsASender
                    solve( !KU( senc(~z,
                                     hkdf(suffix(hkdf(hkdf(hkdf('g'^(~preKey*~ecdhSk.1), '0'),
                                                           ~kemSS),
                                                      <$Me, pk(~idKey.1), $Them, pk(~idKey)>)),
                                          'msg_key'))
                           ) @ #vk.22 )
                      case SessionStartAsASender
                      solve( !KU( Just(h(<'g'^~preKey, pqpk(~oldKemSk), 
                                          sign(<'nf_reg', pqpk(~oldKemSk), 'g'^~preKey>, ~idKey)>))
                             ) @ #vk.27 )
                        case SessionStartAsASender
                        solve( !KU( Just(encap(~kemSS, pqpk(~oldKemSk))) ) @ #vk.27 )
                          case SessionStartAsASender
                          solve( !KU( Just(pqpk(~newKemSk)) ) @ #vk.22 )
                            case PublicKeyRatchetNewSenderNoNewKemSS
                            solve( !IdentityKey( $Me, ~idKey.1 ) ▶₀ #t3 )
                              case UserKeyGen
                              solve( !KU( 'g'^~ecdhSk.1 ) @ #vk.26 )
                                case SendSymmetricRatchet
                                by sorry /* removed */
                              next
                                case SessionStartAsASender_case_1
                                solve( !KU( 'g'^~ecdhSk ) @ #vk.23 )
                                  case PublicKeyRatchetNewSenderNoNewKemSS_case_1
                                  SOLVED // trace found
                                next
                                  case PublicKeyRatchetNewSenderNoNewKemSS_case_2
                                  SOLVED // trace found
                                next
                                  case SendSymmetricRatchet
                                  by sorry
                                next
                                  case c_exp
                                  by sorry
                                qed
                              next
                                case SessionStartAsASender_case_2
                                by sorry
                              next
                                case c_exp
                                by sorry
                              qed
                            qed
                          next
                            case c_Just
                            by sorry
                          qed
                        next
                          case c_Just
                          by sorry
                        qed
                      next
                        case c_Just
                        by sorry
                      qed
                    next
                      case c_senc
                      by sorry
                    qed
                  next
                    case c_hkdf
                    by sorry
                  qed
                qed
              next
                case c_senc
                by sorry
              qed
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_2
              by sorry
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_3
              by sorry
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_4
              by sorry
            next
              case PublicKeyRatchetNewSenderNoNewKemSS_case_5
              by sorry
            next
              case SendSymmetricRatchet
              by sorry
            next
              case c_hkdf
              by sorry
            qed
          next
            case c_sign
            by sorry
          qed
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_2
          by sorry
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_3
          by sorry /* removed */
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_4
          by sorry /* removed */
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_5
          by sorry
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_6
          by sorry
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_7
          by sorry
        next
          case PublicKeyRatchetNewSenderNoNewKemSS_case_8
          by sorry
        next
          case c_sign
          by sorry
        qed
      qed
    qed
  qed
next
  case PublicKeyRatchetNewReceiverWithSomeNewKemSS
  by sorry
qed

lemma SessionStart [reuse, use_induction]:
  all-traces
  "∀ id li me them theirIdPk a b c d e f g h i j k #t.
    ((SessionInfo( id, li, me, them ) @ #t) ∧
     (KeysUsed( theirIdPk, a, b, c, d, e, f, g, h, i, j, k ) @ #t)) ⇒
    (∃ #x.
      (SessionStart( theirIdPk ) @ #x) ∧
      (SessionInfo( id, %1, me, them ) @ #x))"
/*
guarded formula characterizing all counter-examples:
"∃ id li me them theirIdPk a b c d e f g h i j k #t.
  (SessionInfo( id, li, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, a, b, c, d, e, f, g, h, i, j, k ) @ #t)
 ∧
  ∀ #x.
   (SessionStart( theirIdPk ) @ #x) ∧
   (SessionInfo( id, %1, me, them ) @ #x)
  ⇒
   ⊥"
*/
by sorry

lemma SessionStartUnique [reuse]:
  all-traces
  "∀ id a1 a2 b1 b2 #t1 #t2.
    ((SessionInfo( id, %1, a1, b1 ) @ #t1) ∧
     (SessionInfo( id, %1, a2, b2 ) @ #t2)) ⇒
    (#t1 = #t2)"
/*
guarded formula characterizing all counter-examples:
"∃ id a1 a2 b1 b2 #t1 #t2.
  (SessionInfo( id, %1, a1, b1 ) @ #t1) ∧
  (SessionInfo( id, %1, a2, b2 ) @ #t2)
 ∧
  ¬(#t1 = #t2)"
*/
by sorry

lemma ECDHSkOrigin [reuse, use_induction]:
  all-traces
  "∀ id li me them myPk a b c d e f g h i j k #t.
    ((SessionInfo( id, li, me, them ) @ #t) ∧
     (KeysUsed( a, myPk, b, c, d, e, f, g, h, i, j, k ) @ #t)) ⇒
    ((∃ #x.
       (ECDHKeyGen( id, me, them, myPk ) @ #x) ∧
       ((#x < #t) ∨ (#x = #t))) ∨
     (∃ #x. (ECDHPreKeyGen( me, myPk ) @ #x) ∧ (#x < #t)))"
/*
guarded formula characterizing all counter-examples:
"∃ id li me them myPk a b c d e f g h i j k #t.
  (SessionInfo( id, li, me, them ) @ #t) ∧
  (KeysUsed( a, myPk, b, c, d, e, f, g, h, i, j, k ) @ #t)
 ∧
  (∀ #x.
    (ECDHKeyGen( id, me, them, myPk ) @ #x)
   ⇒
    (¬(#x < #t)) ∧ (¬(#x = #t))) ∧
  (∀ #x. (ECDHPreKeyGen( me, myPk ) @ #x) ⇒ ¬(#x < #t))"
*/
by sorry

lemma RootKeyConnectionSend [reuse, use_induction]:
  all-traces
  "∀ id i me them m theirIdPk myPk theirPk maybeNewKemPk ecdhSS
     myKemPk maybeTheirKemPk kemSS encapPk rk ck mk #t.
    (((MessageSent( id, i, me, them, m ) @ #t) ∧
      (SymmetricRatchet( ) @ #t)) ∧
     (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, maybeNewKemPk,
                myKemPk, maybeTheirKemPk, kemSS, encapPk, rk, ck, mk
      ) @ #t)) ⇒
    (∃ i2 #x.
      ((((SessionInfo( id, i2, me, them ) @ #x) ∧
         (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, maybeNewKemPk,
                            myKemPk, maybeTheirKemPk, kemSS, encapPk, rk
          ) @ #x)) ∧
        (ToSender( ) @ #x)) ∧
       (#x < #t)) ∧
      (i2 ⊏ i))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them m theirIdPk myPk theirPk maybeNewKemPk ecdhSS
   myKemPk maybeTheirKemPk kemSS encapPk rk ck mk #t.
  (MessageSent( id, i, me, them, m ) @ #t) ∧
  (SymmetricRatchet( ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, maybeNewKemPk,
             myKemPk, maybeTheirKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t)
 ∧
  ∀ i2 #x.
   (SessionInfo( id, i2, me, them ) @ #x) ∧
   (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, maybeNewKemPk,
                      myKemPk, maybeTheirKemPk, kemSS, encapPk, rk
    ) @ #x) ∧
   (ToSender( ) @ #x)
  ⇒
   ((¬(#x < #t)) ∨ (¬(i2 ⊏ i)))"
*/
by sorry

lemma RootKeyConnectionReceive [reuse, use_induction]:
  all-traces
  "∀ id i me them m theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
    (((MessageReceived( id, i, them, me, m ) @ #t) ∧
      (SymmetricRatchet( ) @ #t)) ∧
     (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
      ) @ #t)) ⇒
    (∃ i2 #x.
      ((((SessionInfo( id, i2, me, them ) @ #x) ∧
         (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                            maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk
          ) @ #x)) ∧
        (ToReceiver( ) @ #x)) ∧
       (#x < #t)) ∧
      (i2 ⊏ i))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them m theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
  (MessageReceived( id, i, them, me, m ) @ #t) ∧
  (SymmetricRatchet( ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t)
 ∧
  ∀ i2 #x.
   (SessionInfo( id, i2, me, them ) @ #x) ∧
   (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                      maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk
    ) @ #x) ∧
   (ToReceiver( ) @ #x)
  ⇒
   ((¬(#x < #t)) ∨ (¬(i2 ⊏ i)))"
*/
by sorry

lemma RootKeyMonotonicity [reuse, use_induction]:
  all-traces
  "∀ id li1 li2 me1 me2 them1 them2 a1 a2 b1 b2 c1 c2 d1 d2 e1 e2 f1
     f2 g1 g2 h1 h2 i1 i2 rk1 rk2 j1 j2 k1 k2 #t1 #t2.
    (((((SessionInfo( id, li1, me1, them1 ) @ #t1) ∧
        (KeysUsed( a1, b1, c1, d1, e1, f1, g1, h1, i1, rk1, j1, k1
         ) @ #t1)) ∧
       (SessionInfo( id, li2, me2, them2 ) @ #t2)) ∧
      (KeysUsed( a2, b2, c2, d2, e2, f2, g2, h2, i2, rk2, j2, k2
       ) @ #t2)) ∧
     (#t1 < #t2)) ⇒
    ((rk1 ⊏ rk2) ∨ (rk1 = rk2))"
/*
guarded formula characterizing all counter-examples:
"∃ id li1 li2 me1 me2 them1 them2 a1 a2 b1 b2 c1 c2 d1 d2 e1 e2 f1
   f2 g1 g2 h1 h2 i1 i2 rk1 rk2 j1 j2 k1 k2 #t1 #t2.
  (SessionInfo( id, li1, me1, them1 ) @ #t1) ∧
  (KeysUsed( a1, b1, c1, d1, e1, f1, g1, h1, i1, rk1, j1, k1
   ) @ #t1) ∧
  (SessionInfo( id, li2, me2, them2 ) @ #t2) ∧
  (KeysUsed( a2, b2, c2, d2, e2, f2, g2, h2, i2, rk2, j2, k2 ) @ #t2)
 ∧
  (#t1 < #t2) ∧ (¬(rk1 ⊏ rk2)) ∧ (¬(rk1 = rk2))"
*/
by sorry

lemma ChainKeyMonotonicity [reuse, use_induction,
                            hide_lemma=SessionStart, hide_lemma=SessionStartUnique,
                            hide_lemma=RootKeyConnectionSend, hide_lemma=ECDHSkOrigin,
                            hide_lemma=RootKeyConnectionReceive,
                            hide_lemma=RootKeyMonotonicity]:
  all-traces
  "∀ rkCK ck a b c d e f g h i j #t.
    (KeysUsed( a, b, c, d, e, f, g, h, i, prefix(rkCK), ck, j ) @ #t) ⇒
    (rkCK ⊏ ck)"
/*
guarded formula characterizing all counter-examples:
"∃ rkCK ck a b c d e f g h i j #t.
  (KeysUsed( a, b, c, d, e, f, g, h, i, prefix(rkCK), ck, j ) @ #t)
 ∧
  ¬(rkCK ⊏ ck)"
*/
by sorry

lemma RootKeyConnectionInjectivity [reuse, use_induction,
                                    hide_lemma=RootKeyConnectionSend,
                                    hide_lemma=RootKeyConnectionReceive,
                                    hide_lemma=ChainKeyMonotonicity]:
  all-traces
  "∀ id i1 i2 me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk #t1 #t2.
    ((((SessionInfo( id, i1, me, them ) @ #t1) ∧
       (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                          maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk
        ) @ #t1)) ∧
      (SessionInfo( id, i2, me, them ) @ #t2)) ∧
     (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                        maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk
      ) @ #t2)) ⇒
    (#t1 = #t2)"
/*
guarded formula characterizing all counter-examples:
"∃ id i1 i2 me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk #t1 #t2.
  (SessionInfo( id, i1, me, them ) @ #t1) ∧
  (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                     maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk
   ) @ #t1) ∧
  (SessionInfo( id, i2, me, them ) @ #t2) ∧
  (PublicKeyRatchet( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                     maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk
   ) @ #t2)
 ∧
  ¬(#t1 = #t2)"
*/
by sorry

lemma MkCkRelation [reuse, use_induction]:
  all-traces
  "∀ a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2 f2 g2 h2 i2 j2 ck1
     ck2 mk #t1 #t2.
    ((KeysUsed( a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, ck1, mk
      ) @ #t1) ∧
     (KeysUsed( a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, ck2, mk
      ) @ #t2)) ⇒
    (ck1 = ck2)"
/*
guarded formula characterizing all counter-examples:
"∃ a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2 f2 g2 h2 i2 j2 ck1
   ck2 mk #t1 #t2.
  (KeysUsed( a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, ck1, mk
   ) @ #t1) ∧
  (KeysUsed( a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, ck2, mk ) @ #t2)
 ∧
  ¬(ck1 = ck2)"
*/
by sorry

lemma CkRkRelation [reuse, use_induction]:
  all-traces
  "∀ a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2 f2 g2 h2 i2 j2 rk1
     rk2 ck #t1 #t2.
    ((KeysUsed( a1, b1, c1, d1, e1, f1, g1, h1, i1, rk1, ck, j1
      ) @ #t1) ∧
     (KeysUsed( a2, b2, c2, d2, e2, f2, g2, h2, i2, rk2, ck, j2
      ) @ #t2)) ⇒
    (rk1 = rk2)"
/*
guarded formula characterizing all counter-examples:
"∃ a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2 f2 g2 h2 i2 j2 rk1
   rk2 ck #t1 #t2.
  (KeysUsed( a1, b1, c1, d1, e1, f1, g1, h1, i1, rk1, ck, j1
   ) @ #t1) ∧
  (KeysUsed( a2, b2, c2, d2, e2, f2, g2, h2, i2, rk2, ck, j2 ) @ #t2)
 ∧
  ¬(rk1 = rk2)"
*/
by sorry

lemma ECDHSSCompromise [reuse]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t1 #t2.
    (((SessionInfo( id, i, me, them ) @ #t1) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
       ) @ #t1)) ∧
     (!KU( ecdhSS ) @ #t2)) ⇒
    (((((∃ #x. CompromisedECDHPreKey( them, theirPk ) @ #x) ∨
        (∃ #x. CompromisedECDHKey( id, me, myPk ) @ #x)) ∨
       (∃ id2 #x. CompromisedECDHKey( id2, them, theirPk ) @ #x)) ∨
      (∃ #x. (CompromisedIdentityKey( them ) @ #x) ∧ (#x < #t1))) ∨
     (∃ #x. PQAttack( ) @ #x))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t1 #t2.
  (SessionInfo( id, i, me, them ) @ #t1) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t1) ∧
  (!KU( ecdhSS ) @ #t2)
 ∧
  (∀ #x. (CompromisedECDHPreKey( them, theirPk ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedECDHKey( id, me, myPk ) @ #x) ⇒ ⊥) ∧
  (∀ id2 #x. (CompromisedECDHKey( id2, them, theirPk ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedIdentityKey( them ) @ #x) ⇒ ¬(#x < #t1)) ∧
  (∀ #x. (PQAttack( ) @ #x) ⇒ ⊥)"
*/
by sorry

lemma MyKemKeyOrigin [reuse, use_induction,
                      hide_lemma=ECDHSSCompromise, hide_lemma=SessionStart,
                      hide_lemma=ECDHSkOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
    (((SessionInfo( id, i, me, them ) @ #t) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
       ) @ #t)) ∧
     (¬(KemKeyGen( id, me, them, Just(myKemPk) ) @ #t))) ⇒
    ((∃ #x.
       (KemKeyGen( id, me, them, Just(myKemPk) ) @ #x) ∧ (#x < #t)) ∨
     (∃ #x. (KemPreKeyGen( me, myKemPk ) @ #x) ∧ (#x < #t)))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
  (SessionInfo( id, i, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t)
 ∧
  (¬(KemKeyGen( id, me, them, Just(myKemPk) ) @ #t)) ∧
  (∀ #x.
    (KemKeyGen( id, me, them, Just(myKemPk) ) @ #x) ⇒ ¬(#x < #t)) ∧
  (∀ #x. (KemPreKeyGen( me, myKemPk ) @ #x) ⇒ ¬(#x < #t))"
*/
by sorry

lemma MaybeNewKemKeyOrigin [reuse, use_induction,
                            hide_lemma=ECDHSSCompromise, hide_lemma=SessionStart,
                            hide_lemma=ECDHSkOrigin, hide_lemma=MyKemKeyOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk newKemPk kemSS encapPk rk ck mk #t.
    (((SessionInfo( id, i, me, them ) @ #t) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, Just(newKemPk), kemSS, encapPk, rk, ck, mk
       ) @ #t)) ∧
     (¬(NewKemPublicKey( id, me, them, Just(newKemPk) ) @ #t))) ⇒
    (∃ #x.
      (NewKemPublicKey( id, me, them, Just(newKemPk) ) @ #x) ∧
      (#x < #t))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk newKemPk kemSS encapPk rk ck mk #t.
  (SessionInfo( id, i, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, Just(newKemPk), kemSS, encapPk, rk, ck, mk
   ) @ #t)
 ∧
  (¬(NewKemPublicKey( id, me, them, Just(newKemPk) ) @ #t)) ∧
  (∀ #x.
    (NewKemPublicKey( id, me, them, Just(newKemPk) ) @ #x)
   ⇒
    ¬(#x < #t))"
*/
by sorry

lemma TheirKemKeyOrigin [reuse, use_induction,
                         hide_lemma=ECDHSSCompromise, hide_lemma=SessionStart,
                         hide_lemma=ECDHSkOrigin, hide_lemma=MyKemKeyOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk theirKemPk
     maybeNewKemPk kemSS encapPk rk ck mk #t.
    (((SessionInfo( id, i, me, them ) @ #t) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 Just(theirKemPk), maybeNewKemPk, kemSS, encapPk, rk, ck, mk
       ) @ #t)) ∧
     (¬(NewKemPublicKey( id, me, them, Just(theirKemPk) ) @ #t))) ⇒
    (∃ #x.
      (NewKemPublicKey( id, me, them, Just(theirKemPk) ) @ #x) ∧
      (#x < #t))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk theirKemPk
   maybeNewKemPk kemSS encapPk rk ck mk #t.
  (SessionInfo( id, i, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             Just(theirKemPk), maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t)
 ∧
  (¬(NewKemPublicKey( id, me, them, Just(theirKemPk) ) @ #t)) ∧
  (∀ #x.
    (NewKemPublicKey( id, me, them, Just(theirKemPk) ) @ #x)
   ⇒
    ¬(#x < #t))"
*/
by sorry

lemma KemSSOrigin [reuse, use_induction,
                   hide_lemma=ECDHSSCompromise, hide_lemma=SessionStart,
                   hide_lemma=ECDHSkOrigin, hide_lemma=MyKemKeyOrigin,
                   hide_lemma=MaybeNewKemKeyOrigin, hide_lemma=TheirKemKeyOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
    ((((SessionInfo( id, i, me, them ) @ #t) ∧
       (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                  maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
        ) @ #t)) ∧
      (¬(NewKemSS( id, me, them, kemSS, encapPk ) @ #t))) ∧
     (¬(DecapKemSS( id, me, them, kemSS, encapPk ) @ #t))) ⇒
    ((∃ #x.
       (NewKemSS( id, me, them, kemSS, encapPk ) @ #x) ∧ (#x < #t)) ∨
     (∃ #x.
       (DecapKemSS( id, me, them, kemSS, encapPk ) @ #x) ∧ (#x < #t)))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
  (SessionInfo( id, i, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t)
 ∧
  (¬(NewKemSS( id, me, them, kemSS, encapPk ) @ #t)) ∧
  (¬(DecapKemSS( id, me, them, kemSS, encapPk ) @ #t)) ∧
  (∀ #x.
    (NewKemSS( id, me, them, kemSS, encapPk ) @ #x) ⇒ ¬(#x < #t)) ∧
  (∀ #x.
    (DecapKemSS( id, me, them, kemSS, encapPk ) @ #x) ⇒ ¬(#x < #t))"
*/
by sorry

lemma KemKeyOriginEncap [reuse, hide_lemma=ECDHSSCompromise,
                         hide_lemma=SessionStart, hide_lemma=ECDHSkOrigin,
                         hide_lemma=KemSSOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
    ((((SessionInfo( id, i, me, them ) @ #t) ∧
       (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                  maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
        ) @ #t)) ∧
      (NewKemSS( id, me, them, kemSS, encapPk ) @ #t)) ∧
     (¬(NewKemPublicKey( id, me, them, Just(encapPk) ) @ #t))) ⇒
    (∃ #x.
      (NewKemPublicKey( id, me, them, Just(encapPk) ) @ #x) ∧ (#x < #t))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
  (SessionInfo( id, i, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t) ∧
  (NewKemSS( id, me, them, kemSS, encapPk ) @ #t)
 ∧
  (¬(NewKemPublicKey( id, me, them, Just(encapPk) ) @ #t)) ∧
  (∀ #x.
    (NewKemPublicKey( id, me, them, Just(encapPk) ) @ #x)
   ⇒
    ¬(#x < #t))"
*/
by sorry

lemma KemKeyOriginDecap [reuse, hide_lemma=ECDHSSCompromise,
                         hide_lemma=SessionStart, hide_lemma=ECDHSkOrigin,
                         hide_lemma=KemSSOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
    (((SessionInfo( id, i, me, them ) @ #t) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
       ) @ #t)) ∧
     (DecapKemSS( id, me, them, kemSS, encapPk ) @ #t)) ⇒
    ((∃ #x.
       (KemKeyGen( id, me, them, Just(encapPk) ) @ #x) ∧ (#x < #t)) ∨
     (∃ #x. (KemPreKeyGen( me, encapPk ) @ #x) ∧ (#x < #t)))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t.
  (SessionInfo( id, i, me, them ) @ #t) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t) ∧
  (DecapKemSS( id, me, them, kemSS, encapPk ) @ #t)
 ∧
  (∀ #x.
    (KemKeyGen( id, me, them, Just(encapPk) ) @ #x) ⇒ ¬(#x < #t)) ∧
  (∀ #x. (KemPreKeyGen( me, encapPk ) @ #x) ⇒ ¬(#x < #t))"
*/
by sorry

lemma RkFixesKEMSS [reuse, use_induction,
                    hide_lemma=ECDHSSCompromise, hide_lemma=SessionStart,
                    hide_lemma=ECDHSkOrigin]:
  all-traces
  "∀ rk kemSS1 kemSS2 a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2 f2
     g2 h2 i2 j2 id1 li1 me1 them1 id2 li2 me2 them2 #t1 #t2.
    ((((SessionInfo( id1, li1, me1, them1 ) @ #t1) ∧
       (KeysUsed( a1, b1, c1, d1, e1, f1, g1, kemSS1, h1, rk, i1, j1
        ) @ #t1)) ∧
      (SessionInfo( id2, li2, me2, them2 ) @ #t2)) ∧
     (KeysUsed( a2, b2, c2, d2, e2, f2, g2, kemSS2, h2, rk, i2, j2
      ) @ #t2)) ⇒
    (kemSS1 = kemSS2)"
/*
guarded formula characterizing all counter-examples:
"∃ rk kemSS1 kemSS2 a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2 f2
   g2 h2 i2 j2 id1 li1 me1 them1 id2 li2 me2 them2 #t1 #t2.
  (SessionInfo( id1, li1, me1, them1 ) @ #t1) ∧
  (KeysUsed( a1, b1, c1, d1, e1, f1, g1, kemSS1, h1, rk, i1, j1
   ) @ #t1) ∧
  (SessionInfo( id2, li2, me2, them2 ) @ #t2) ∧
  (KeysUsed( a2, b2, c2, d2, e2, f2, g2, kemSS2, h2, rk, i2, j2
   ) @ #t2)
 ∧
  ¬(kemSS1 = kemSS2)"
*/
by sorry

lemma RkFixesEcdhSS [reuse, use_induction,
                     hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                     hide_lemma=TheirKemKeyOrigin, hide_lemma=KemSSOrigin,
                     hide_lemma=KemKeyOriginEncap, hide_lemma=KemKeyOriginDecap,
                     hide_lemma=RkFixesKEMSS]:
  all-traces
  "∀ rk ecdhSS1 ecdhSS2 a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2
     f2 g2 h2 i2 j2 id1 li1 me1 them1 id2 li2 me2 them2 #t1 #t2.
    ((((SessionInfo( id1, li1, me1, them1 ) @ #t1) ∧
       (KeysUsed( a1, b1, c1, ecdhSS1, d1, e1, f1, g1, h1, rk, i1, j1
        ) @ #t1)) ∧
      (SessionInfo( id2, li2, me2, them2 ) @ #t2)) ∧
     (KeysUsed( a2, b2, c2, ecdhSS2, d2, e2, f2, g2, h2, rk, i2, j2
      ) @ #t2)) ⇒
    (ecdhSS1 = ecdhSS2)"
/*
guarded formula characterizing all counter-examples:
"∃ rk ecdhSS1 ecdhSS2 a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 a2 b2 c2 d2 e2
   f2 g2 h2 i2 j2 id1 li1 me1 them1 id2 li2 me2 them2 #t1 #t2.
  (SessionInfo( id1, li1, me1, them1 ) @ #t1) ∧
  (KeysUsed( a1, b1, c1, ecdhSS1, d1, e1, f1, g1, h1, rk, i1, j1
   ) @ #t1) ∧
  (SessionInfo( id2, li2, me2, them2 ) @ #t2) ∧
  (KeysUsed( a2, b2, c2, ecdhSS2, d2, e2, f2, g2, h2, rk, i2, j2
   ) @ #t2)
 ∧
  ¬(ecdhSS1 = ecdhSS2)"
*/
by sorry

lemma KemSSCompromise [reuse, hide_lemma=ECDHSSCompromise,
                       hide_lemma=ECDHSkOrigin, hide_lemma=MyKemKeyOrigin,
                       hide_lemma=MaybeNewKemKeyOrigin, hide_lemma=TheirKemKeyOrigin]:
  all-traces
  "∀ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t1 #t2.
    (((SessionInfo( id, i, me, them ) @ #t1) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
       ) @ #t1)) ∧
     (!KU( kemSS ) @ #t2)) ⇒
    (((((∃ #x. CompromisedKemKey( me, encapPk ) @ #x) ∨
        (∃ #x. CompromisedKemKey( them, encapPk ) @ #x)) ∨
       (∃ #x. CompromisedKemPreKey( me, encapPk ) @ #x)) ∨
      (∃ #x. CompromisedKemPreKey( them, encapPk ) @ #x)) ∨
     (∃ #x. (CompromisedIdentityKey( them ) @ #x) ∧ (#x < #t1)))"
/*
guarded formula characterizing all counter-examples:
"∃ id i me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t1 #t2.
  (SessionInfo( id, i, me, them ) @ #t1) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t1) ∧
  (!KU( kemSS ) @ #t2)
 ∧
  (∀ #x. (CompromisedKemKey( me, encapPk ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedKemKey( them, encapPk ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedKemPreKey( me, encapPk ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedKemPreKey( them, encapPk ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedIdentityKey( them ) @ #x) ⇒ ¬(#x < #t1))"
*/
by sorry

lemma CkCompromise [reuse, use_induction, hide_lemma=ECDHSkOrigin,
                    hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                    hide_lemma=TheirKemKeyOrigin, hide_lemma=KemKeyOrigin,
                    hide_lemma=KemSSOrigin]:
  all-traces
  "∀ id li me them theirIdPk myPk theirPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t1 #t2.
    (((SessionInfo( id, li, me, them ) @ #t1) ∧
      (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
       ) @ #t1)) ∧
     (!KU( ck ) @ #t2)) ⇒
    (((∃ ckC #x.
        (CompromisedChainKey( me, ckC ) @ #x) ∧
        ((ckC ⊏ ck) ∨ (ckC = ck))) ∨
      (∃ ckC #x.
        (CompromisedChainKey( them, ckC ) @ #x) ∧
        ((ckC ⊏ ck) ∨ (ckC = ck)))) ∨
     (∃ rkCK #x. (rk = prefix(rkCK)) ∧ (!KU( rkCK ) @ #x)))"
/*
guarded formula characterizing all counter-examples:
"∃ id li me them theirIdPk myPk theirPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rk ck mk #t1 #t2.
  (SessionInfo( id, li, me, them ) @ #t1) ∧
  (KeysUsed( theirIdPk, myPk, theirPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, rk, ck, mk
   ) @ #t1) ∧
  (!KU( ck ) @ #t2)
 ∧
  (∀ ckC #x.
    (CompromisedChainKey( me, ckC ) @ #x)
   ⇒
    (¬(ckC ⊏ ck)) ∧ (¬(ckC = ck))) ∧
  (∀ ckC #x.
    (CompromisedChainKey( them, ckC ) @ #x)
   ⇒
    (¬(ckC ⊏ ck)) ∧ (¬(ckC = ck))) ∧
  (∀ rkCK #x. (rk = prefix(rkCK)) ∧ (!KU( rkCK ) @ #x) ⇒ ⊥)"
*/
by sorry

lemma RkFormat [reuse, use_induction]:
  all-traces
  "∀ rk a b c d e f g h i k l #t.
    (KeysUsed( a, b, c, d, e, f, g, h, i, rk, k, l ) @ #t) ⇒
    (∃ t.1. rk = prefix(t.1))"
/*
guarded formula characterizing all counter-examples:
"∃ rk a b c d e f g h i k l #t.
  (KeysUsed( a, b, c, d, e, f, g, h, i, rk, k, l ) @ #t)
 ∧
  ∀ t.1. (rk = prefix(t.1)) ⇒ ⊥"
*/
by sorry

lemma RkSecretCompromiseECDH [reuse, hide_lemma=CkCompromise,
                              hide_lemma=SessionStart, hide_lemma=ECDHSkOrigin,
                              hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                              hide_lemma=TheirKemKeyOrigin, hide_lemma=KemSSOrigin,
                              hide_lemma=KemKeyOriginEncap, hide_lemma=KemKeyOriginDecap,
                              hide_lemma=KemSSCompromise]:
  all-traces
  "∀ id li me them theirIdPk myEcdhPk theirEcdhPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rkCK ck mk #t1 #t2.
    (((SessionInfo( id, li, me, them ) @ #t1) ∧
      (KeysUsed( theirIdPk, myEcdhPk, theirEcdhPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, prefix(rkCK), ck,
                 mk
       ) @ #t1)) ∧
     (!KU( rkCK ) @ #t2)) ⇒
    (((∃ #x. CompromisedChainKey( me, suffix(rkCK) ) @ #x) ∨
      (∃ #x. CompromisedChainKey( them, suffix(rkCK) ) @ #x)) ∨
     (∃ #x. !KU( ecdhSS ) @ #x))"
/*
guarded formula characterizing all counter-examples:
"∃ id li me them theirIdPk myEcdhPk theirEcdhPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rkCK ck mk #t1 #t2.
  (SessionInfo( id, li, me, them ) @ #t1) ∧
  (KeysUsed( theirIdPk, myEcdhPk, theirEcdhPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, prefix(rkCK), ck,
             mk
   ) @ #t1) ∧
  (!KU( rkCK ) @ #t2)
 ∧
  (∀ #x. (CompromisedChainKey( me, suffix(rkCK) ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedChainKey( them, suffix(rkCK) ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (!KU( ecdhSS ) @ #x) ⇒ ⊥)"
*/
by sorry

lemma RkSecretCompromiseKemSS [reuse, use_induction,
                               hide_lemma=SessionStart, hide_lemma=SessionStartUnique,
                               hide_lemma=ECDHSkOrigin, hide_lemma=ECDHSSCompromise,
                               hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                               hide_lemma=TheirKemKeyOrigin, hide_lemma=KemSSOrigin,
                               hide_lemma=KemKeyOriginEncap, hide_lemma=KemKeyOriginDecap,
                               hide_lemma=RkFixesEcdhSS, hide_lemma=CkCompromise,
                               hide_lemma=RkSecretCompromiseECDH]:
  all-traces
  "∀ id li me them theirIdPk myEcdhPk theirEcdhPk ecdhSS myKemPk
     maybeTheirKemPk maybeNewKemPk kemSS encapPk rkCK ck mk #t1 #t2.
    (((SessionInfo( id, li, me, them ) @ #t1) ∧
      (KeysUsed( theirIdPk, myEcdhPk, theirEcdhPk, ecdhSS, myKemPk,
                 maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, prefix(rkCK), ck,
                 mk
       ) @ #t1)) ∧
     (!KU( rkCK ) @ #t2)) ⇒
    (((∃ #x. !KU( kemSS ) @ #x) ∨
      (∃ rk #x. CompromisedRootKey( me, kemSS, rk ) @ #x)) ∨
     (∃ rk #x. CompromisedRootKey( them, kemSS, rk ) @ #x))"
/*
guarded formula characterizing all counter-examples:
"∃ id li me them theirIdPk myEcdhPk theirEcdhPk ecdhSS myKemPk
   maybeTheirKemPk maybeNewKemPk kemSS encapPk rkCK ck mk #t1 #t2.
  (SessionInfo( id, li, me, them ) @ #t1) ∧
  (KeysUsed( theirIdPk, myEcdhPk, theirEcdhPk, ecdhSS, myKemPk,
             maybeTheirKemPk, maybeNewKemPk, kemSS, encapPk, prefix(rkCK), ck,
             mk
   ) @ #t1) ∧
  (!KU( rkCK ) @ #t2)
 ∧
  (∀ #x. (!KU( kemSS ) @ #x) ⇒ ⊥) ∧
  (∀ rk #x. (CompromisedRootKey( me, kemSS, rk ) @ #x) ⇒ ⊥) ∧
  (∀ rk #x. (CompromisedRootKey( them, kemSS, rk ) @ #x) ⇒ ⊥)"
*/
by sorry

lemma ChainKeyMonotonicity2 [reuse, use_induction,
                             hide_lemma=SessionStart, hide_lemma=SessionStartUnique,
                             hide_lemma=RootKeyConnectionSend, hide_lemma=ECDHSkOrigin,
                             hide_lemma=RootKeyConnectionReceive,
                             hide_lemma=RootKeyMonotonicity]:
  all-traces
  "∀ rkCK ck a b c d e f g h i j #t.
    (KeysUsed( a, b, c, d, e, f, g, h, i, prefix(rkCK), ck, j ) @ #t) ⇒
    ((suffix(rkCK) ⊏ ck) ∨ (suffix(rkCK) = ck))"
/*
guarded formula characterizing all counter-examples:
"∃ rkCK ck a b c d e f g h i j #t.
  (KeysUsed( a, b, c, d, e, f, g, h, i, prefix(rkCK), ck, j ) @ #t)
 ∧
  (¬(suffix(rkCK) ⊏ ck)) ∧ (¬(suffix(rkCK) = ck))"
*/
by sorry

lemma MkCompromise [reuse, use_induction, hide_lemma=SessionStart,
                    hide_lemma=SessionStartUnique, hide_lemma=ECDHSkOrigin,
                    hide_lemma=RootKeyConnectionSend,
                    hide_lemma=RootKeyConnectionReceive, hide_lemma=ECDHSSCompromise,
                    hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                    hide_lemma=TheirKemKeyOrigin, hide_lemma=KemSSOrigin,
                    hide_lemma=KemKeyOriginEncap, hide_lemma=KemKeyOriginDecap,
                    hide_lemma=KemSSCompromise, hide_lemma=CkCompromise,
                    hide_lemma=RkSecretCompromiseECDH,
                    hide_lemma=RkSecretCompromiseKemSS]:
  all-traces
  "∀ id sentI me them myEcdhPk theirEcdhPk kemSS encapPk chainKey
     msgKey #t1 #t2.
    (((SessionInfo( id, sentI, me, them ) @ #t1) ∧
      (SessionSecrets( myEcdhPk, theirEcdhPk, kemSS, encapPk, chainKey,
                       msgKey
       ) @ #t1)) ∧
     (!KU( msgKey ) @ #t2)) ⇒
    (((∃ #x. !KU( chainKey ) @ #x) ∨
      (∃ #x. CompromisedMessageKey( me, msgKey ) @ #x)) ∨
     (∃ #x. CompromisedMessageKey( them, msgKey ) @ #x))"
/*
guarded formula characterizing all counter-examples:
"∃ id sentI me them myEcdhPk theirEcdhPk kemSS encapPk chainKey
   msgKey #t1 #t2.
  (SessionInfo( id, sentI, me, them ) @ #t1) ∧
  (SessionSecrets( myEcdhPk, theirEcdhPk, kemSS, encapPk, chainKey,
                   msgKey
   ) @ #t1) ∧
  (!KU( msgKey ) @ #t2)
 ∧
  (∀ #x. (!KU( chainKey ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedMessageKey( me, msgKey ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedMessageKey( them, msgKey ) @ #x) ⇒ ⊥)"
*/
by sorry

lemma Secrecy [hide_lemma=SessionStart,
               hide_lemma=SessionStartUnique, hide_lemma=ECDHSkOrigin,
               hide_lemma=RootKeyConnectionSend,
               hide_lemma=RootKeyConnectionReceive, hide_lemma=MyKemKeyOrigin,
               hide_lemma=MaybeNewKemKeyOrigin, hide_lemma=TheirKemKeyOrigin,
               hide_lemma=KemSSOrigin, hide_lemma=KemKeyOriginEncap,
               hide_lemma=KemKeyOriginDecap]:
  all-traces
  "∀ id sentI me them msg myEcdhPk theirEcdhPk kemSS encapPk chainKey
     msgKey #t.
    ((MessageSent( id, sentI, me, them, msg ) @ #t) ∧
     (SessionSecrets( myEcdhPk, theirEcdhPk, kemSS, encapPk, chainKey,
                      msgKey
      ) @ #t)) ⇒
    (((((((¬(∃ #x. K( msg ) @ #x)) ∨
          (∃ #x. CompromisedMessageKey( me, msgKey ) @ #x)) ∨
         (∃ #x. CompromisedMessageKey( them, msgKey ) @ #x)) ∨
        (∃ ckC #x.
          (CompromisedChainKey( me, ckC ) @ #x) ∧
          ((ckC ⊏ chainKey) ∨ (ckC = chainKey)))) ∨
       (∃ ckC #x.
         (CompromisedChainKey( them, ckC ) @ #x) ∧
         ((ckC ⊏ chainKey) ∨ (ckC = chainKey)))) ∨
      (∃ #x. (CompromisedIdentityKey( them ) @ #x) ∧ (#x < #t))) ∨
     (((((∃ #x. PQAttack( ) @ #x) ∨
         (∃ #x. CompromisedECDHPreKey( them, theirEcdhPk ) @ #x)) ∨
        (∃ #x. CompromisedECDHKey( id, me, myEcdhPk ) @ #x)) ∨
       (∃ id2 #x. CompromisedECDHKey( id2, them, theirEcdhPk ) @ #x)) ∧
      ((((((∃ #x. CompromisedKemKey( me, encapPk ) @ #x) ∨
           (∃ #x. CompromisedKemKey( them, encapPk ) @ #x)) ∨
          (∃ #x. CompromisedKemPreKey( me, encapPk ) @ #x)) ∨
         (∃ #x. CompromisedKemPreKey( them, encapPk ) @ #x)) ∨
        (∃ rk #x. CompromisedRootKey( me, kemSS, rk ) @ #x)) ∨
       (∃ rk #x. CompromisedRootKey( them, kemSS, rk ) @ #x))))"
/*
guarded formula characterizing all counter-examples:
"∃ id sentI me them msg myEcdhPk theirEcdhPk kemSS encapPk chainKey
   msgKey #t.
  (MessageSent( id, sentI, me, them, msg ) @ #t) ∧
  (SessionSecrets( myEcdhPk, theirEcdhPk, kemSS, encapPk, chainKey,
                   msgKey
   ) @ #t)
 ∧
  (∃ #x. (K( msg ) @ #x)) ∧
  (∀ #x. (CompromisedMessageKey( me, msgKey ) @ #x) ⇒ ⊥) ∧
  (∀ #x. (CompromisedMessageKey( them, msgKey ) @ #x) ⇒ ⊥) ∧
  (∀ ckC #x.
    (CompromisedChainKey( me, ckC ) @ #x)
   ⇒
    (¬(ckC ⊏ chainKey)) ∧ (¬(ckC = chainKey))) ∧
  (∀ ckC #x.
    (CompromisedChainKey( them, ckC ) @ #x)
   ⇒
    (¬(ckC ⊏ chainKey)) ∧ (¬(ckC = chainKey))) ∧
  (∀ #x. (CompromisedIdentityKey( them ) @ #x) ⇒ ¬(#x < #t)) ∧
  ((((∀ #x. (PQAttack( ) @ #x) ⇒ ⊥) ∧
     (∀ #x. (CompromisedECDHPreKey( them, theirEcdhPk ) @ #x) ⇒ ⊥) ∧
     (∀ #x. (CompromisedECDHKey( id, me, myEcdhPk ) @ #x) ⇒ ⊥) ∧
     (∀ id2 #x.
       (CompromisedECDHKey( id2, them, theirEcdhPk ) @ #x) ⇒ ⊥)) ∨
    ((∀ #x. (CompromisedKemKey( me, encapPk ) @ #x) ⇒ ⊥) ∧
     (∀ #x. (CompromisedKemKey( them, encapPk ) @ #x) ⇒ ⊥) ∧
     (∀ #x. (CompromisedKemPreKey( me, encapPk ) @ #x) ⇒ ⊥) ∧
     (∀ #x. (CompromisedKemPreKey( them, encapPk ) @ #x) ⇒ ⊥) ∧
     (∀ rk #x. (CompromisedRootKey( me, kemSS, rk ) @ #x) ⇒ ⊥) ∧
     (∀ rk #x. (CompromisedRootKey( them, kemSS, rk ) @ #x) ⇒ ⊥))))"
*/
by sorry

lemma NoninjectiveAuthentication [hide_lemma=SessionStartUnique,
                                  hide_lemma=ECDHSkOrigin, hide_lemma=RootKeyConnectionSend,
                                  hide_lemma=RootKeyConnectionReceive,
                                  hide_lemma=RootKeyMonotonicity, hide_lemma=ChainKeyMonotonicity,
                                  hide_lemma=RootKeyConnectionInjectivity, hide_lemma=MkCkRelation,
                                  hide_lemma=CkRkRelation, hide_lemma=ECDHSSCompromise,
                                  hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                                  hide_lemma=TheirKemKeyOrigin, hide_lemma=KemSSOrigin,
                                  hide_lemma=KemKeyOriginEncap, hide_lemma=KemKeyOriginDecap,
                                  hide_lemma=KemSSCompromise, hide_lemma=CkCompromise,
                                  hide_lemma=Secrecy, hide_lemma=RkFixesKEMSS,
                                  hide_lemma=RkFixesEcdhSS, hide_lemma=RkFormat,
                                  hide_lemma=RkSecretCompromiseECDH,
                                  hide_lemma=RkSecretCompromiseKemSS,
                                  hide_lemma=ChainKeyMonotonicity2, hide_lemma=MkCompromise]:
  all-traces
  "∀ id i s r m #t.
    (MessageReceived( id, i, s, r, m ) @ #t) ⇒
    ((∃ id_ #x. (MessageSent( id_, i, s, r, m ) @ #x) ∧ (#x < #t)) ∨
     (∃ #x. (CompromisedIdentityKey( s ) @ #x) ∧ (#x < #t)))"
/*
guarded formula characterizing all counter-examples:
"∃ id i s r m #t.
  (MessageReceived( id, i, s, r, m ) @ #t)
 ∧
  (∀ id_ #x. (MessageSent( id_, i, s, r, m ) @ #x) ⇒ ¬(#x < #t)) ∧
  (∀ #x. (CompromisedIdentityKey( s ) @ #x) ⇒ ¬(#x < #t))"
*/
by sorry

lemma InjectiveMessageReceived [hide_lemma=ECDHSSCompromise,
                                hide_lemma=MyKemKeyOrigin, hide_lemma=MaybeNewKemKeyOrigin,
                                hide_lemma=TheirKemKeyOrigin, hide_lemma=KemSSOrigin,
                                hide_lemma=KemKeyOriginEncap, hide_lemma=KemKeyOriginDecap,
                                hide_lemma=KemSSCompromise, hide_lemma=CkCompromise,
                                hide_lemma=Secrecy, hide_lemma=RkFixesKEMSS,
                                hide_lemma=RkFixesEcdhSS, hide_lemma=RkFormat,
                                hide_lemma=RkSecretCompromiseECDH,
                                hide_lemma=RkSecretCompromiseKemSS,
                                hide_lemma=ChainKeyMonotonicity2, hide_lemma=MkCompromise]:
  all-traces
  "∀ id1 id2 i1 i2 s1 s2 r1 r2 m rEcdhPk1 sEcdhPk1 kemSS1 encapPk1
     chainKey1 msgKey1 rEcdhPk2 sEcdhPk2 kemSS2 encapPk2 chainKey2
     msgKey2 #t1 #t2.
    ((((MessageReceived( id1, i1, s1, r1, m ) @ #t1) ∧
       (SessionSecrets( rEcdhPk1, sEcdhPk1, kemSS1, encapPk1, chainKey1,
                        msgKey1
        ) @ #t1)) ∧
      (MessageReceived( id2, i2, s2, r2, m ) @ #t2)) ∧
     (SessionSecrets( rEcdhPk2, sEcdhPk2, kemSS2, encapPk2, chainKey2,
                      msgKey2
      ) @ #t2)) ⇒
    ((((#t1 = #t2) ∨
       (((((rEcdhPk1 = rEcdhPk2) ∧ (msgKey1 = msgKey2)) ∧ (s1 = s2)) ∧
         (r1 = r2)) ∧
        (∃ #x. ECDHPreKeyGen( r1, rEcdhPk1 ) @ #x))) ∨
      (∃ #x. (CompromisedIdentityKey( s1 ) @ #x) ∧ (#x < #t1))) ∨
     (∃ #x. (CompromisedIdentityKey( s2 ) @ #x) ∧ (#x < #t2)))"
/*
guarded formula characterizing all counter-examples:
"∃ id1 id2 i1 i2 s1 s2 r1 r2 m rEcdhPk1 sEcdhPk1 kemSS1 encapPk1
   chainKey1 msgKey1 rEcdhPk2 sEcdhPk2 kemSS2 encapPk2 chainKey2
   msgKey2 #t1 #t2.
  (MessageReceived( id1, i1, s1, r1, m ) @ #t1) ∧
  (SessionSecrets( rEcdhPk1, sEcdhPk1, kemSS1, encapPk1, chainKey1,
                   msgKey1
   ) @ #t1) ∧
  (MessageReceived( id2, i2, s2, r2, m ) @ #t2) ∧
  (SessionSecrets( rEcdhPk2, sEcdhPk2, kemSS2, encapPk2, chainKey2,
                   msgKey2
   ) @ #t2)
 ∧
  (¬(#t1 = #t2)) ∧
  (((¬(rEcdhPk1 = rEcdhPk2)) ∨
    (¬(msgKey1 = msgKey2)) ∨
    (¬(s1 = s2)) ∨
    (¬(r1 = r2)) ∨
    (∀ #x. (ECDHPreKeyGen( r1, rEcdhPk1 ) @ #x) ⇒ ⊥))) ∧
  (∀ #x. (CompromisedIdentityKey( s1 ) @ #x) ⇒ ¬(#x < #t1)) ∧
  (∀ #x. (CompromisedIdentityKey( s2 ) @ #x) ⇒ ¬(#x < #t2))"
*/
by sorry











































/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.8.0
Maude version 3.1
Git revision: f172d7f00b1485446a1e7a42dc14623c2189cc42, branch: master
Compiled at: 2023-08-31 10:43:56.765388839 UTC
*/

end